Metadata-Version: 2.1
Name: async-negotiate-sspi
Version: 0.1.2
Summary: This package allows for Single-Sign On HTTP Negotiate authentication using the httpx_extensions library on Windows
Home-page: https://github.com/newvicx/async_negotiate_sspi
Author: Chris Newville
Author-email: chrisnewville1396@gmail.com
License: MIT
Project-URL: Changelog, https://github.com/newvicx/async_negotiate_sspi/blob/master/CHANGELOG.md
Project-URL: Source, https://github.com/newvicx/async_negotiate_sspi
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft :: Windows
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Framework :: AsyncIO
Classifier: Framework :: Trio
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE.md

ï»¿# Async Negotiate SSPI
**This is a port of brandond's [requests_negotiate_sspi](https://github.com/brandond/requests-negotiate-sspi) package. I want to make sure they get the appropriate credit. This package takes the base code from requests_negotiate_sppi and adapts it to work within the context of httpx auth flows. async_negotiate_sspi requires [httpx_extensions](https://github.com/newvicx/httpx_extensions) which is an async client built on top of httpx. httpx_extensions allows the user to control which connection requests are sent on in a pool. Without it, authentication through Kerberos and NTLM using this package will fail**
## Installation
You can install async_negotiate_sspi via pip

    pip install async-negotiate-sspi

## Usage

    import asyncio
	from httpx_extensions import ExClient
	from async_negotiate_sspi import NegotiateAuth
	
	async def main():
		auth = NegotiateAuth()
		with ExClient(auth=auth) as client:
			response = await client.get("https://iis.contoso.com")
	
	asyncio.run(main())
## Options

 - service (str): Kerberos Service type for remote Service Principal Name - Default: "HTTP"
 - username (str): Username - Default: None
 - domain (str): NT Domain name - Default: "."
 - host (str): Host name for Service Principal Name - Default: Extracted from request URI
 - delegate (bool): Indicates that the user's credentials are to be delegated to the server - Default: False

	



# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).

