from . import access_logger as access_logger
from .protocol import Protocol as Protocol
from aioworkers.core.config import ValueExtractor as ValueExtractor
from aioworkers.net.server import SocketServer as SocketServer
from aioworkers.net.uri import URL as URL
from aioworkers.worker.base import Worker as Worker
from typing import Any, Awaitable, Callable, Mapping

class WebServer(SocketServer, Worker):
    headers: Any
    def __init__(self, *args, **kwargs) -> None: ...
    def set_config(self, config: ValueExtractor): ...
    parser_factory: Any
    parser_url: Any
    url: Any
    async def init(self) -> None: ...
    async def start(self) -> None: ...
    async def stop(self, force: bool = ...) -> None: ...
    async def handler(self, scope: Mapping, receive: Callable[[], Awaitable], send: Callable[[Mapping], Awaitable]): ...
    async def run(self, value: Any | None = ...) -> None: ...
