[tool.poetry]
name = "gcode-documentation-parser"
version = "0.0.2"
description = "A utility that parses the documentation pages from Marlin, RepRap, and Klipper, to generate an index of commands usage"
authors = [
    "Costas Basdekis <code@basdekis.io>"
]
license = "MIT"
readme = "README.md"
homepage = "https://costas-basdekis.github.io/gcode-documentation-parser"
repository = "https://costas-basdekis.github.io/gcode-documentation-parser"
documentation = "https://costas-basdekis.github.io/gcode-documentation-parser"

keywords = ["gcode", "marlin", "reprap", "klipper"]

classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
    "Topic :: Documentation",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.8"
beautifulsoup4= ">=4,<4.10.0"
wikitextparser = "^0.45.2"

[tool.poetry.dev-dependencies]
ipdb = ""
ipython = ""
moto = "2.2.9"
mypy = "0.910"
pre-commit = "2.15.0"
pycodestyle = "2.7.0"
pylint = "2.11.1"
pytest = "6.2.5"
pytest-env = "0.6.2"
pytest-pythonpath = "0.7.3"
python-dotenv = "0.19.1"

[tool.mypy]
python_version = "3.8"
disable_error_code = "misc"
follow_imports = "silent"

[tool.pylint.messages_control]
extension-pkg-whitelist = "pydantic"
max-line-length = 88
disable = """,
    too-few-public-methods,
    fixme,
    missing-module-docstring,
    """
score = "no"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
lines_after_imports = 2

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--doctest-modules",
    "--doctest-continue-on-failure",
    # Ignore non-code folders
    "--ignore=docs",
    "--ignore=venv",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "ELLIPSIS",
    "IGNORE_EXCEPTION_DETAIL",
]
# Here you can set environment variables that are needed for running tests, e.g.
# for configuration.
env = [
    # By prefixing with `D:`, it only sets a default, if there is no such
    # variable already defined. If you omit it, it will always override it.
]
# Add the sources to the test's PYTHONPATH
python_paths = "gcode_documentation_parser"
