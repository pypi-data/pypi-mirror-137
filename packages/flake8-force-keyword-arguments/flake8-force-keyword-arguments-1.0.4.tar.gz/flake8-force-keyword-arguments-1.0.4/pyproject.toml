[tool.poetry]
name = "flake8-force-keyword-arguments"
version = "1.0.4"
description = "A flake8 extension that is looking for function calls and forces to use keyword arguments if there are more than X arguments"
authors = ["Viktor Chaptsev <viktor@chaptsev.ru>", "Byeonghoon Yoo <bh322yoo@gmail.com>"]
maintainers = ["Byeonghoon Yoo <bh322yoo@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/isac322/flake8-force-keyword-arguments"
classifiers = [
    "Framework :: Flake8",
    "Environment :: Console",
    "Development Status :: 4 - Beta",
    "Framework :: Flake8",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.poetry.dependencies]
python = "^3.6.2"
flake8 = ">=3.8"
importlib-metadata = { version = "*", python = "<3.8" }
typing-extensions = {version = "*", python = "<3.8"}
marisa-trie = "^0.7.7"

[tool.poetry.dev-dependencies]
pytest = "^7.0.0"
mypy = "^0.931"
flake8 = ">=3.8"
black = "^22.1"
flake8-annotations-complexity = "^0.0.6"
flake8-bandit = "^2.1.2"
flake8-black = "^0.2.3"
flake8-breakpoint = "^1.1.0"
flake8-bugbear = "^22.1.11"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.7.0"
flake8-eradicate = "^1.2.0"
flake8-functions = { version = "^0.0.6", python = "^3.7" }
flake8-print = "^4.0.0"
flake8-pytest-style = "^1.5.0"
flake8-return = "^1.1.3"
pytest-flake8-path = "^1.1.0"
pytest-cov = "^3.0.0"

[tool.poetry.plugins."flake8.extension"]
FKA1 = "flake8_force_keyword_arguments:Checker"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"



[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ["py36", "py37", "py38", "py39"]

[tool.mypy]
allow_redefinition = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
no_warn_no_return = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

# Output configuration
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true


[[tool.mypy.overrides]]
module = [
    "flake8.options.manager",
    "marisa_trie"
]
ignore_missing_imports = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
