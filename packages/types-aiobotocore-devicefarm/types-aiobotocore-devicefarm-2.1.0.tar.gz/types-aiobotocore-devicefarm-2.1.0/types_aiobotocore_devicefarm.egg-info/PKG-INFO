Metadata-Version: 2.1
Name: types-aiobotocore-devicefarm
Version: 2.1.0
Summary: Type annotations for aiobotocore.DeviceFarm 2.1.0 service generated by mypy-boto3-builder 6.4.2
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: aiobotocore devicefarm type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown

<a id="mypy-boto3-devicefarm"></a>

# mypy-boto3-devicefarm

[![PyPI - types-aiobotocore-devicefarm](https://img.shields.io/pypi/v/types-aiobotocore-devicefarm.svg?color=blue)](https://pypi.org/project/types-aiobotocore-devicefarm)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-devicefarm.svg?color=blue)](https://pypi.org/project/types-aiobotocore-devicefarm)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-devicefarm?color=blue)](https://pypistats.org/packages/types-aiobotocore-devicefarm)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[boto3.DeviceFarm 1.20.47](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/devicefarm.html#DeviceFarm)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 6.4.2](https://github.com/vemel/mypy_boto3_builder).

More information can be found on
[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
[types-aiobotocore-devicefarm docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_devicefarm/)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/main/demo.gif)

- [mypy-boto3-devicefarm](#mypy-boto3-devicefarm)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `DeviceFarm`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `DeviceFarm` service.

```bash
python -m pip install types-aiobotocore[devicefarm]
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[devicefarm]` in your environment:
  `python -m pip install 'types-aiobotocore[devicefarm]'`

Both type checking and auto-complete should work for `DeviceFarm` service. No
explicit type annotations required, write your `boto3` code as usual.

<a id="pycharm"></a>

### PyCharm

- Install `types-aiobotocore[devicefarm]` in your environment:
  `python -m pip install 'types-aiobotocore[devicefarm]'`

Both type checking and auto-complete should work for `DeviceFarm` service. No
explicit type annotations required, write your `aiobotocore` code as usual.
Auto-complete can be slow on big projects or if you have a lot of installed
`types-aiobotocore` submodules.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[devicefarm]` in your environment:
  `python -m pip install 'types-aiobotocore[devicefarm]'`
- Run `mypy` as usual

Type checking should work for `DeviceFarm` service. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `types-aiobotocore[devicefarm]` in your environment:
  `python -m pip install 'types-aiobotocore[devicefarm]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `DeviceFarm` service. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`DeviceFarmClient` provides annotations for
`session.create_client("devicefarm")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_devicefarm import DeviceFarmClient

session = get_session()
with async session.create_client("devicefarm") as client:
    client: DeviceFarmClient
    # now client usage is checked by mypy and IDE should provide code auto-complete
```

<a id="paginators-annotations"></a>

### Paginators annotations

`types_aiobotocore_devicefarm.paginator` module contains type annotations for
all paginators.

````python
from aiobotocore.session import get_session

from types_aiobotocore_devicefarm import DeviceFarmClient
from types_aiobotocore_devicefarm.paginator import (
    GetOfferingStatusPaginator,
    ListArtifactsPaginator,
    ListDeviceInstancesPaginator,
    ListDevicePoolsPaginator,
    ListDevicesPaginator,
    ListInstanceProfilesPaginator,
    ListJobsPaginator,
    ListNetworkProfilesPaginator,
    ListOfferingPromotionsPaginator,
    ListOfferingTransactionsPaginator,
    ListOfferingsPaginator,
    ListProjectsPaginator,
    ListRemoteAccessSessionsPaginator,
    ListRunsPaginator,
    ListSamplesPaginator,
    ListSuitesPaginator,
    ListTestsPaginator,
    ListUniqueProblemsPaginator,
    ListUploadsPaginator,
    ListVPCEConfigurationsPaginator,
)

session = get_session()
with async session.create_client("devicefarm") as client:
    client: DeviceFarmClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        get_offering_status_paginator: GetOfferingStatusPaginator = client.get_paginator("get_offering_status")
        list_artifacts_paginator: ListArtifactsPaginator = client.get_paginator("list_artifacts")
        list_device_instances_paginator: ListDeviceInstancesPaginator = client.get_paginator("list_device_instances")
        list_device_pools_paginator: ListDevicePoolsPaginator = client.get_paginator("list_device_pools")
        list_devices_paginator: ListDevicesPaginator = client.get_paginator("list_devices")
        list_instance_profiles_paginator: ListInstanceProfilesPaginator = client.get_paginator("list_instance_profiles")
        list_jobs_paginator: ListJobsPaginator = client.get_paginator("list_jobs")
        list_network_profiles_paginator: ListNetworkProfilesPaginator = client.get_paginator("list_network_profiles")
        list_offering_promotions_paginator: ListOfferingPromotionsPaginator = client.get_paginator("list_offering_promotions")
        list_offering_transactions_paginator: ListOfferingTransactionsPaginator = client.get_paginator("list_offering_transactions")
        list_offerings_paginator: ListOfferingsPaginator = client.get_paginator("list_offerings")
        list_projects_paginator: ListProjectsPaginator = client.get_paginator("list_projects")
        list_remote_access_sessions_paginator: ListRemoteAccessSessionsPaginator = client.get_paginator("list_remote_access_sessions")
        list_runs_paginator: ListRunsPaginator = client.get_paginator("list_runs")
        list_samples_paginator: ListSamplesPaginator = client.get_paginator("list_samples")
        list_suites_paginator: ListSuitesPaginator = client.get_paginator("list_suites")
        list_tests_paginator: ListTestsPaginator = client.get_paginator("list_tests")
        list_unique_problems_paginator: ListUniqueProblemsPaginator = client.get_paginator("list_unique_problems")
        list_uploads_paginator: ListUploadsPaginator = client.get_paginator("list_uploads")
        list_vpce_configurations_paginator: ListVPCEConfigurationsPaginator = client.get_paginator("list_vpce_configurations")
    ```







### Literals

`types_aiobotocore_devicefarm.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from types_aiobotocore_devicefarm.literals import (
    ArtifactCategoryType,
    ArtifactTypeType,
    BillingMethodType,
    CurrencyCodeType,
    DeviceAttributeType,
    DeviceAvailabilityType,
    DeviceFilterAttributeType,
    DeviceFormFactorType,
    DevicePlatformType,
    DevicePoolTypeType,
    ExecutionResultCodeType,
    ExecutionResultType,
    ExecutionStatusType,
    GetOfferingStatusPaginatorName,
    InstanceStatusType,
    InteractionModeType,
    ListArtifactsPaginatorName,
    ListDeviceInstancesPaginatorName,
    ListDevicePoolsPaginatorName,
    ListDevicesPaginatorName,
    ListInstanceProfilesPaginatorName,
    ListJobsPaginatorName,
    ListNetworkProfilesPaginatorName,
    ListOfferingPromotionsPaginatorName,
    ListOfferingTransactionsPaginatorName,
    ListOfferingsPaginatorName,
    ListProjectsPaginatorName,
    ListRemoteAccessSessionsPaginatorName,
    ListRunsPaginatorName,
    ListSamplesPaginatorName,
    ListSuitesPaginatorName,
    ListTestsPaginatorName,
    ListUniqueProblemsPaginatorName,
    ListUploadsPaginatorName,
    ListVPCEConfigurationsPaginatorName,
    NetworkProfileTypeType,
    OfferingTransactionTypeType,
    OfferingTypeType,
    RecurringChargeFrequencyType,
    RuleOperatorType,
    SampleTypeType,
    TestGridSessionArtifactCategoryType,
    TestGridSessionArtifactTypeType,
    TestGridSessionStatusType,
    TestTypeType,
    UploadCategoryType,
    UploadStatusType,
    UploadTypeType,
    ServiceName,
    PaginatorName,
)

def check_value(value: ArtifactCategoryType) -> bool:
    ...
````

### Typed dictionaries

`types_aiobotocore_devicefarm.type_defs` module contains structures and shapes
assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_devicefarm.type_defs import (
    AccountSettingsTypeDef,
    ArtifactTypeDef,
    CPUTypeDef,
    CountersTypeDef,
    CreateDevicePoolRequestRequestTypeDef,
    CreateDevicePoolResultTypeDef,
    CreateInstanceProfileRequestRequestTypeDef,
    CreateInstanceProfileResultTypeDef,
    CreateNetworkProfileRequestRequestTypeDef,
    CreateNetworkProfileResultTypeDef,
    CreateProjectRequestRequestTypeDef,
    CreateProjectResultTypeDef,
    CreateRemoteAccessSessionConfigurationTypeDef,
    CreateRemoteAccessSessionRequestRequestTypeDef,
    CreateRemoteAccessSessionResultTypeDef,
    CreateTestGridProjectRequestRequestTypeDef,
    CreateTestGridProjectResultTypeDef,
    CreateTestGridUrlRequestRequestTypeDef,
    CreateTestGridUrlResultTypeDef,
    CreateUploadRequestRequestTypeDef,
    CreateUploadResultTypeDef,
    CreateVPCEConfigurationRequestRequestTypeDef,
    CreateVPCEConfigurationResultTypeDef,
    CustomerArtifactPathsTypeDef,
    DeleteDevicePoolRequestRequestTypeDef,
    DeleteInstanceProfileRequestRequestTypeDef,
    DeleteNetworkProfileRequestRequestTypeDef,
    DeleteProjectRequestRequestTypeDef,
    DeleteRemoteAccessSessionRequestRequestTypeDef,
    DeleteRunRequestRequestTypeDef,
    DeleteTestGridProjectRequestRequestTypeDef,
    DeleteUploadRequestRequestTypeDef,
    DeleteVPCEConfigurationRequestRequestTypeDef,
    DeviceFilterTypeDef,
    DeviceInstanceTypeDef,
    DeviceMinutesTypeDef,
    DevicePoolCompatibilityResultTypeDef,
    DevicePoolTypeDef,
    DeviceSelectionConfigurationTypeDef,
    DeviceSelectionResultTypeDef,
    DeviceTypeDef,
    ExecutionConfigurationTypeDef,
    GetAccountSettingsResultTypeDef,
    GetDeviceInstanceRequestRequestTypeDef,
    GetDeviceInstanceResultTypeDef,
    GetDevicePoolCompatibilityRequestRequestTypeDef,
    GetDevicePoolCompatibilityResultTypeDef,
    GetDevicePoolRequestRequestTypeDef,
    GetDevicePoolResultTypeDef,
    GetDeviceRequestRequestTypeDef,
    GetDeviceResultTypeDef,
    GetInstanceProfileRequestRequestTypeDef,
    GetInstanceProfileResultTypeDef,
    GetJobRequestRequestTypeDef,
    GetJobResultTypeDef,
    GetNetworkProfileRequestRequestTypeDef,
    GetNetworkProfileResultTypeDef,
    GetOfferingStatusRequestRequestTypeDef,
    GetOfferingStatusResultTypeDef,
    GetProjectRequestRequestTypeDef,
    GetProjectResultTypeDef,
    GetRemoteAccessSessionRequestRequestTypeDef,
    GetRemoteAccessSessionResultTypeDef,
    GetRunRequestRequestTypeDef,
    GetRunResultTypeDef,
    GetSuiteRequestRequestTypeDef,
    GetSuiteResultTypeDef,
    GetTestGridProjectRequestRequestTypeDef,
    GetTestGridProjectResultTypeDef,
    GetTestGridSessionRequestRequestTypeDef,
    GetTestGridSessionResultTypeDef,
    GetTestRequestRequestTypeDef,
    GetTestResultTypeDef,
    GetUploadRequestRequestTypeDef,
    GetUploadResultTypeDef,
    GetVPCEConfigurationRequestRequestTypeDef,
    GetVPCEConfigurationResultTypeDef,
    IncompatibilityMessageTypeDef,
    InstallToRemoteAccessSessionRequestRequestTypeDef,
    InstallToRemoteAccessSessionResultTypeDef,
    InstanceProfileTypeDef,
    JobTypeDef,
    ListArtifactsRequestRequestTypeDef,
    ListArtifactsResultTypeDef,
    ListDeviceInstancesRequestRequestTypeDef,
    ListDeviceInstancesResultTypeDef,
    ListDevicePoolsRequestRequestTypeDef,
    ListDevicePoolsResultTypeDef,
    ListDevicesRequestRequestTypeDef,
    ListDevicesResultTypeDef,
    ListInstanceProfilesRequestRequestTypeDef,
    ListInstanceProfilesResultTypeDef,
    ListJobsRequestRequestTypeDef,
    ListJobsResultTypeDef,
    ListNetworkProfilesRequestRequestTypeDef,
    ListNetworkProfilesResultTypeDef,
    ListOfferingPromotionsRequestRequestTypeDef,
    ListOfferingPromotionsResultTypeDef,
    ListOfferingTransactionsRequestRequestTypeDef,
    ListOfferingTransactionsResultTypeDef,
    ListOfferingsRequestRequestTypeDef,
    ListOfferingsResultTypeDef,
    ListProjectsRequestRequestTypeDef,
    ListProjectsResultTypeDef,
    ListRemoteAccessSessionsRequestRequestTypeDef,
    ListRemoteAccessSessionsResultTypeDef,
    ListRunsRequestRequestTypeDef,
    ListRunsResultTypeDef,
    ListSamplesRequestRequestTypeDef,
    ListSamplesResultTypeDef,
    ListSuitesRequestRequestTypeDef,
    ListSuitesResultTypeDef,
    ListTagsForResourceRequestRequestTypeDef,
    ListTagsForResourceResponseTypeDef,
    ListTestGridProjectsRequestRequestTypeDef,
    ListTestGridProjectsResultTypeDef,
    ListTestGridSessionActionsRequestRequestTypeDef,
    ListTestGridSessionActionsResultTypeDef,
    ListTestGridSessionArtifactsRequestRequestTypeDef,
    ListTestGridSessionArtifactsResultTypeDef,
    ListTestGridSessionsRequestRequestTypeDef,
    ListTestGridSessionsResultTypeDef,
    ListTestsRequestRequestTypeDef,
    ListTestsResultTypeDef,
    ListUniqueProblemsRequestRequestTypeDef,
    ListUniqueProblemsResultTypeDef,
    ListUploadsRequestRequestTypeDef,
    ListUploadsResultTypeDef,
    ListVPCEConfigurationsRequestRequestTypeDef,
    ListVPCEConfigurationsResultTypeDef,
    LocationTypeDef,
    MonetaryAmountTypeDef,
    NetworkProfileTypeDef,
    OfferingPromotionTypeDef,
    OfferingStatusTypeDef,
    OfferingTransactionTypeDef,
    OfferingTypeDef,
    PaginatorConfigTypeDef,
    ProblemDetailTypeDef,
    ProblemTypeDef,
    ProjectTypeDef,
    PurchaseOfferingRequestRequestTypeDef,
    PurchaseOfferingResultTypeDef,
    RadiosTypeDef,
    RecurringChargeTypeDef,
    RemoteAccessSessionTypeDef,
    RenewOfferingRequestRequestTypeDef,
    RenewOfferingResultTypeDef,
    ResolutionTypeDef,
    ResponseMetadataTypeDef,
    RuleTypeDef,
    RunTypeDef,
    SampleTypeDef,
    ScheduleRunConfigurationTypeDef,
    ScheduleRunRequestRequestTypeDef,
    ScheduleRunResultTypeDef,
    ScheduleRunTestTypeDef,
    StopJobRequestRequestTypeDef,
    StopJobResultTypeDef,
    StopRemoteAccessSessionRequestRequestTypeDef,
    StopRemoteAccessSessionResultTypeDef,
    StopRunRequestRequestTypeDef,
    StopRunResultTypeDef,
    SuiteTypeDef,
    TagResourceRequestRequestTypeDef,
    TagTypeDef,
    TestGridProjectTypeDef,
    TestGridSessionActionTypeDef,
    TestGridSessionArtifactTypeDef,
    TestGridSessionTypeDef,
    TestGridVpcConfigTypeDef,
    TestTypeDef,
    TrialMinutesTypeDef,
    UniqueProblemTypeDef,
    UntagResourceRequestRequestTypeDef,
    UpdateDeviceInstanceRequestRequestTypeDef,
    UpdateDeviceInstanceResultTypeDef,
    UpdateDevicePoolRequestRequestTypeDef,
    UpdateDevicePoolResultTypeDef,
    UpdateInstanceProfileRequestRequestTypeDef,
    UpdateInstanceProfileResultTypeDef,
    UpdateNetworkProfileRequestRequestTypeDef,
    UpdateNetworkProfileResultTypeDef,
    UpdateProjectRequestRequestTypeDef,
    UpdateProjectResultTypeDef,
    UpdateTestGridProjectRequestRequestTypeDef,
    UpdateTestGridProjectResultTypeDef,
    UpdateUploadRequestRequestTypeDef,
    UpdateUploadResultTypeDef,
    UpdateVPCEConfigurationRequestRequestTypeDef,
    UpdateVPCEConfigurationResultTypeDef,
    UploadTypeDef,
    VPCEConfigurationTypeDef,
)

def get_structure() -> AccountSettingsTypeDef:
    return {
      ...
    }
```

## Versioning

`types-aiobotocore-devicefarm` version is the same as related `boto3` version
and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

## Documentation

All type annotations can be found in
[types-aiobotocore-devicefarm docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_devicefarm/)

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder/issues/)
repository.


