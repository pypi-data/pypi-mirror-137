name: QuartiCal CI Workflow

# Specific github action events that you can lookup in their API
on: 
  push:
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04] #[ubuntu-18.04, ubuntu-20.04]
        python-version: ["3.8"] #["3.7", "3.8", "3.9"]

    steps:
      # Use Custom Github Action to setup different version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Checkout the source code
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      # Upgrade pip and setuptools
      - name: Upgrade pip and setuptools
        run: python -m pip install -U pip setuptools

      - name: List the measures directory
        run: curl ftp://ftp.astron.nl/outgoing/Measures/ > measures_dir.txt

      - name: Load cached CASA Measures Data
        id: load-cached-casa-measures
        uses: actions/cache@v2
        with:
          key: casa-measures-${{ hashFiles('measures_dir.txt')}}
          path: |
            ~/measures
            ~/.casarc
        
      - name: Download and install CASA Measures Data
        if: steps.load-cached-casa-measures.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/measures
          curl ftp://ftp.astron.nl/outgoing/Measures/WSRT_Measures.ztar | tar xvzf - -C ~/measures
          echo "measures.directory: ~/measures" > ~/.casarc

      # Install the package with testing extras
      - name: Install QuartiCal
        run: python -m pip install .

      # Run the test cases
      - name: Testing Step
        run: py.test -v testing/tests

      # Check that the help prints, suggesting that everything is ok.
      - name: Run QuartiCal
        run: goquartical

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    # Run on tagged push (generated by tbump).
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install latest setuptools, wheel, pip
        run: python3 -m pip install -U pip setuptools wheel

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build distributions
        run: python setup.py sdist bdist_wheel

      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI }}
          repository_url: https://test.pypi.org/legacy/
        continue-on-error: true

      # - name: Publish distribution to PyPI
      #   uses: pypa/gh-action-pypi-publish@v1.5.0
      #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      #   with:
      #     user: __token__
      #     password: ${{ secrets.pypi_token }}