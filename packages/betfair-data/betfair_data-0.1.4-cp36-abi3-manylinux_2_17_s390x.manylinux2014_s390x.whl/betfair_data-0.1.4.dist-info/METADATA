Metadata-Version: 2.1
Name: betfair_data
Version: 0.1.4
Classifier: Programming Language :: Rust
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Summary: Fast Python Betfair historic data file parser
Author-email: Robert Tarbath <rtarbath@gmail.com>
License: MIT License
	
	Copyright (c) 2022 Robert Tarbath
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
	
Requires-Python: >=3.6
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
Project-URL: repository, https://github.com/tarb/betfair_data
Project-URL: homepage, https://github.com/tarb/betfair_data

# Betfair Data

Betfair Data is a fast Betfair historical data file parsing library for python. It currently supports tar archives containing BZ2 compressed NLJSON files.

## Installation

```
pip install betfair_data
```

Note: requires Python >= 3.6.

## Example

```python
import betfair_data

paths = [
    "data/HistoricalDataFile1.tar",
    "data/HistoricalDataFile2.tar",
]

market_count = 0
update_count = 0

for market in betfair_data.TarBz2(paths):
    market_count += 1
    while market.update():
        update_count += 1

    print("Markets {} Updates {}".format(market_count, update_count), end='\r')

```

