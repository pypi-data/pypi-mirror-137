Metadata-Version: 2.1
Name: mypy-boto3-events
Version: 1.20.50
Summary: Type annotations for boto3.EventBridge 1.20.50 service generated by mypy-boto3-builder 7.0.1
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: boto3 events type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions ; python_version < "3.9"

<a id="mypy-boto3-events"></a>

# mypy-boto3-events

[![PyPI - mypy-boto3-events](https://img.shields.io/pypi/v/mypy-boto3-events.svg?color=blue)](https://pypi.org/project/mypy-boto3-events)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-events.svg?color=blue)](https://pypi.org/project/mypy-boto3-events)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/mypy-boto3-events?color=blue)](https://pypistats.org/packages/mypy-boto3-events)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[boto3.EventBridge 1.20.50](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/events.html#EventBridge)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 7.0.1](https://github.com/vemel/mypy_boto3_builder).

More information can be found on
[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
[mypy-boto3-events docs](https://vemel.github.io/boto3_stubs_docs/mypy_boto3_events/)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/main/demo.gif)

- [mypy-boto3-events](#mypy-boto3-events)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)
    - [Literals](#literals)
    - [Typed dictionaries](#typed-dictionaries)
  - [Versioning](#versioning)
  - [Documentation](#documentation)
  - [Support and contributing](#support-and-contributing)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `EventBridge`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `boto3-stubs` for `EventBridge` service.

```bash
# install with boto3 type annotations
python -m pip install 'boto3-stubs[events]'

# Lite version does not provide session.client/resource overloads
# it is more RAM-friendly, but requires explicit type annotations
python -m pip install 'boto3-stubs-lite[events]'

# standalone installation
python -m pip install mypy-boto3-events
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `boto3-stubs[events]` in your environment:
  `python -m pip install 'boto3-stubs[events]'`

Both type checking and auto-complete should work for `EventBridge` service. No
explicit type annotations required, write your `boto3` code as usual.

<a id="pycharm"></a>

### PyCharm

- Install `boto3-stubs[events]` in your environment:
  `python -m pip install 'boto3-stubs[events]'`

Both type checking and auto-complete should work for `EventBridge` service. No
explicit type annotations required, write your `boto3` code as usual.
Auto-complete can be slow on big projects or if you have a lot of installed
`boto3-stubs` submodules.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `boto3-stubs[events]` in your environment:
  `python -m pip install 'boto3-stubs[events]'`
- Run `mypy` as usual

Type checking should work for `EventBridge` service. No explicit type
annotations required, write your `boto3` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `boto3-stubs[events]` in your environment:
  `python -m pip install 'boto3-stubs[events]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `EventBridge` service. No explicit type
annotations required, write your `boto3` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`EventBridgeClient` provides annotations for `boto3.client("events")`.

```python
from boto3.session import Session

from mypy_boto3_events import EventBridgeClient

client: EventBridgeClient = Session().client("events")

# now client usage is checked by mypy and IDE should provide code auto-complete
```

<a id="paginators-annotations"></a>

### Paginators annotations

`mypy_boto3_events.paginator` module contains type annotations for all
paginators.

```python
from boto3.session import Session

from mypy_boto3_events import EventBridgeClient
from mypy_boto3_events.paginator import (
    ListRuleNamesByTargetPaginator,
    ListRulesPaginator,
    ListTargetsByRulePaginator,
)

client: EventBridgeClient = Session().client("events")

# Explicit type annotations are optional here
# Type should be correctly discovered by mypy and IDEs
# VSCode requires explicit type annotations
list_rule_names_by_target_paginator: ListRuleNamesByTargetPaginator = client.get_paginator("list_rule_names_by_target")
list_rules_paginator: ListRulesPaginator = client.get_paginator("list_rules")
list_targets_by_rule_paginator: ListTargetsByRulePaginator = client.get_paginator("list_targets_by_rule")
```

<a id="literals"></a>

### Literals

`mypy_boto3_events.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from mypy_boto3_events.literals import (
    ApiDestinationHttpMethodType,
    ApiDestinationStateType,
    ArchiveStateType,
    AssignPublicIpType,
    ConnectionAuthorizationTypeType,
    ConnectionOAuthHttpMethodType,
    ConnectionStateType,
    EventSourceStateType,
    LaunchTypeType,
    ListRuleNamesByTargetPaginatorName,
    ListRulesPaginatorName,
    ListTargetsByRulePaginatorName,
    PlacementConstraintTypeType,
    PlacementStrategyTypeType,
    PropagateTagsType,
    ReplayStateType,
    RuleStateType,
    ServiceName,
    PaginatorName,
)

def check_value(value: ApiDestinationHttpMethodType) -> bool:
    ...
```

<a id="typed-dictionaries"></a>

### Typed dictionaries

`mypy_boto3_events.type_defs` module contains structures and shapes assembled
to typed dictionaries for additional type checking.

```python
from mypy_boto3_events.type_defs import (
    ActivateEventSourceRequestRequestTypeDef,
    ApiDestinationTypeDef,
    ArchiveTypeDef,
    AwsVpcConfigurationTypeDef,
    BatchArrayPropertiesTypeDef,
    BatchParametersTypeDef,
    BatchRetryStrategyTypeDef,
    CancelReplayRequestRequestTypeDef,
    CancelReplayResponseTypeDef,
    CapacityProviderStrategyItemTypeDef,
    ConditionTypeDef,
    ConnectionApiKeyAuthResponseParametersTypeDef,
    ConnectionAuthResponseParametersTypeDef,
    ConnectionBasicAuthResponseParametersTypeDef,
    ConnectionBodyParameterTypeDef,
    ConnectionHeaderParameterTypeDef,
    ConnectionHttpParametersTypeDef,
    ConnectionOAuthClientResponseParametersTypeDef,
    ConnectionOAuthResponseParametersTypeDef,
    ConnectionQueryStringParameterTypeDef,
    ConnectionTypeDef,
    CreateApiDestinationRequestRequestTypeDef,
    CreateApiDestinationResponseTypeDef,
    CreateArchiveRequestRequestTypeDef,
    CreateArchiveResponseTypeDef,
    CreateConnectionApiKeyAuthRequestParametersTypeDef,
    CreateConnectionAuthRequestParametersTypeDef,
    CreateConnectionBasicAuthRequestParametersTypeDef,
    CreateConnectionOAuthClientRequestParametersTypeDef,
    CreateConnectionOAuthRequestParametersTypeDef,
    CreateConnectionRequestRequestTypeDef,
    CreateConnectionResponseTypeDef,
    CreateEventBusRequestRequestTypeDef,
    CreateEventBusResponseTypeDef,
    CreatePartnerEventSourceRequestRequestTypeDef,
    CreatePartnerEventSourceResponseTypeDef,
    DeactivateEventSourceRequestRequestTypeDef,
    DeadLetterConfigTypeDef,
    DeauthorizeConnectionRequestRequestTypeDef,
    DeauthorizeConnectionResponseTypeDef,
    DeleteApiDestinationRequestRequestTypeDef,
    DeleteArchiveRequestRequestTypeDef,
    DeleteConnectionRequestRequestTypeDef,
    DeleteConnectionResponseTypeDef,
    DeleteEventBusRequestRequestTypeDef,
    DeletePartnerEventSourceRequestRequestTypeDef,
    DeleteRuleRequestRequestTypeDef,
    DescribeApiDestinationRequestRequestTypeDef,
    DescribeApiDestinationResponseTypeDef,
    DescribeArchiveRequestRequestTypeDef,
    DescribeArchiveResponseTypeDef,
    DescribeConnectionRequestRequestTypeDef,
    DescribeConnectionResponseTypeDef,
    DescribeEventBusRequestRequestTypeDef,
    DescribeEventBusResponseTypeDef,
    DescribeEventSourceRequestRequestTypeDef,
    DescribeEventSourceResponseTypeDef,
    DescribePartnerEventSourceRequestRequestTypeDef,
    DescribePartnerEventSourceResponseTypeDef,
    DescribeReplayRequestRequestTypeDef,
    DescribeReplayResponseTypeDef,
    DescribeRuleRequestRequestTypeDef,
    DescribeRuleResponseTypeDef,
    DisableRuleRequestRequestTypeDef,
    EcsParametersTypeDef,
    EnableRuleRequestRequestTypeDef,
    EventBusTypeDef,
    EventSourceTypeDef,
    HttpParametersTypeDef,
    InputTransformerTypeDef,
    KinesisParametersTypeDef,
    ListApiDestinationsRequestRequestTypeDef,
    ListApiDestinationsResponseTypeDef,
    ListArchivesRequestRequestTypeDef,
    ListArchivesResponseTypeDef,
    ListConnectionsRequestRequestTypeDef,
    ListConnectionsResponseTypeDef,
    ListEventBusesRequestRequestTypeDef,
    ListEventBusesResponseTypeDef,
    ListEventSourcesRequestRequestTypeDef,
    ListEventSourcesResponseTypeDef,
    ListPartnerEventSourceAccountsRequestRequestTypeDef,
    ListPartnerEventSourceAccountsResponseTypeDef,
    ListPartnerEventSourcesRequestRequestTypeDef,
    ListPartnerEventSourcesResponseTypeDef,
    ListReplaysRequestRequestTypeDef,
    ListReplaysResponseTypeDef,
    ListRuleNamesByTargetRequestRequestTypeDef,
    ListRuleNamesByTargetResponseTypeDef,
    ListRulesRequestRequestTypeDef,
    ListRulesResponseTypeDef,
    ListTagsForResourceRequestRequestTypeDef,
    ListTagsForResourceResponseTypeDef,
    ListTargetsByRuleRequestRequestTypeDef,
    ListTargetsByRuleResponseTypeDef,
    NetworkConfigurationTypeDef,
    PaginatorConfigTypeDef,
    PartnerEventSourceAccountTypeDef,
    PartnerEventSourceTypeDef,
    PlacementConstraintTypeDef,
    PlacementStrategyTypeDef,
    PutEventsRequestEntryTypeDef,
    PutEventsRequestRequestTypeDef,
    PutEventsResponseTypeDef,
    PutEventsResultEntryTypeDef,
    PutPartnerEventsRequestEntryTypeDef,
    PutPartnerEventsRequestRequestTypeDef,
    PutPartnerEventsResponseTypeDef,
    PutPartnerEventsResultEntryTypeDef,
    PutPermissionRequestRequestTypeDef,
    PutRuleRequestRequestTypeDef,
    PutRuleResponseTypeDef,
    PutTargetsRequestRequestTypeDef,
    PutTargetsResponseTypeDef,
    PutTargetsResultEntryTypeDef,
    RedshiftDataParametersTypeDef,
    RemovePermissionRequestRequestTypeDef,
    RemoveTargetsRequestRequestTypeDef,
    RemoveTargetsResponseTypeDef,
    RemoveTargetsResultEntryTypeDef,
    ReplayDestinationTypeDef,
    ReplayTypeDef,
    ResponseMetadataTypeDef,
    RetryPolicyTypeDef,
    RuleTypeDef,
    RunCommandParametersTypeDef,
    RunCommandTargetTypeDef,
    SageMakerPipelineParameterTypeDef,
    SageMakerPipelineParametersTypeDef,
    SqsParametersTypeDef,
    StartReplayRequestRequestTypeDef,
    StartReplayResponseTypeDef,
    TagResourceRequestRequestTypeDef,
    TagTypeDef,
    TargetTypeDef,
    TestEventPatternRequestRequestTypeDef,
    TestEventPatternResponseTypeDef,
    UntagResourceRequestRequestTypeDef,
    UpdateApiDestinationRequestRequestTypeDef,
    UpdateApiDestinationResponseTypeDef,
    UpdateArchiveRequestRequestTypeDef,
    UpdateArchiveResponseTypeDef,
    UpdateConnectionApiKeyAuthRequestParametersTypeDef,
    UpdateConnectionAuthRequestParametersTypeDef,
    UpdateConnectionBasicAuthRequestParametersTypeDef,
    UpdateConnectionOAuthClientRequestParametersTypeDef,
    UpdateConnectionOAuthRequestParametersTypeDef,
    UpdateConnectionRequestRequestTypeDef,
    UpdateConnectionResponseTypeDef,
)

def get_structure() -> ActivateEventSourceRequestRequestTypeDef:
    return {
      ...
    }
```

<a id="versioning"></a>

## Versioning

`mypy-boto3-events` version is the same as related `boto3` version and follows
[PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

<a id="documentation"></a>

## Documentation

All type annotations can be found in
[mypy-boto3-events docs](https://vemel.github.io/boto3_stubs_docs/mypy_boto3_events/)

<a id="support-and-contributing"></a>

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder/issues/)
repository.


