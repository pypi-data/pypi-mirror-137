# coding: utf-8

"""
    Veeroute.Lastmile

    Veeroute Lastmile API  # noqa: E501

    The version of the OpenAPI document: 3.15.183137
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_lss_lastmile
from vrt_lss_lastmile.models.actualize_task import ActualizeTask  # noqa: E501
from vrt_lss_lastmile.rest import ApiException

class TestActualizeTask(unittest.TestCase):
    """ActualizeTask unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ActualizeTask
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_lss_lastmile.models.actualize_task.ActualizeTask()  # noqa: E501
        if include_optional :
            return ActualizeTask(
                locations = [
                    vrt_lss_lastmile.models.advanced_location.AdvancedLocation(
                        key = 'location01', 
                        location = vrt_lss_lastmile.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        transport_restrictions = ["2T"], 
                        load_windows = [
                            vrt_lss_lastmile.models.load_window.LoadWindow(
                                time_window = vrt_lss_lastmile.models.time_window.TimeWindow(
                                    from = '2021-02-21T09:30+03:00', 
                                    to = '2021-02-21T19:45Z', ), 
                                gates_count = 1, )
                            ], 
                        attributes = ["Name:X51"], )
                    ], 
                orders = [
                    vrt_lss_lastmile.models.order.Order(
                        key = 'order01', 
                        order_features = ["Special"], 
                        order_restrictions = ["Special"], 
                        performer_restrictions = ["Special"], 
                        performer_blacklist = ["A0"], 
                        cargos = [
                            vrt_lss_lastmile.models.cargo.Cargo(
                                key = 'cargo01', 
                                capacity = vrt_lss_lastmile.models.capacity.Capacity(
                                    mass = 10, 
                                    volume = 2, 
                                    capacity_x = 1, 
                                    capacity_y = 2, 
                                    capacity_z = 3, ), 
                                rotation = ["ALL"], 
                                width = 1, 
                                height = 0.3, 
                                length = 2.2, 
                                max_storage_time = 60, 
                                restrictions = ["Freezer"], 
                                cargo_features = ["Clean"], 
                                cargo_restrictions = ["Warm"], )
                            ], 
                        demands = [
                            vrt_lss_lastmile.models.demand.Demand(
                                key = 'demand_1', 
                                demand_type = 'WORK', 
                                target_cargos = ["cargo01"], 
                                precedence_in_trip = 1, 
                                precedence_in_order = 1, 
                                possible_events = [
                                    vrt_lss_lastmile.models.possible_event.PossibleEvent(
                                        key = 'event_1', 
                                        location_key = 'location01', 
                                        duration = 10, 
                                        reward = 199.9, 
                                        time_window = vrt_lss_lastmile.models.time_window.TimeWindow(
                                            from = '2021-02-21T09:30+03:00', 
                                            to = '2021-02-21T19:45Z', ), 
                                        soft_time_window = vrt_lss_lastmile.models.time_window.TimeWindow(
                                            from = '2021-02-21T09:30+03:00', 
                                            to = '2021-02-21T19:45Z', ), )
                                    ], 
                                attributes = ["Name:X51"], )
                            ], 
                        attributes = ["Name:X51"], )
                    ], 
                performers = [
                    vrt_lss_lastmile.models.performer.Performer(
                        key = 'performer0001', 
                        max_work_shifts = 3, 
                        performer_features = ["B1","Special"], 
                        transport_restrictions = ["B1"], 
                        own_transport_type = 'CAR', 
                        attributes = ["Name:X51"], )
                    ], 
                transports = [
                    vrt_lss_lastmile.models.transport.Transport(
                        key = 'transport0001', 
                        transport_type = 'CAR', 
                        transport_features = ["20T"], 
                        performer_restrictions = ["Special"], 
                        boxes = [
                            vrt_lss_lastmile.models.box.Box(
                                key = 'box01', 
                                capacity = vrt_lss_lastmile.models.capacity.Capacity(
                                    mass = 10, 
                                    volume = 2, 
                                    capacity_x = 1, 
                                    capacity_y = 2, 
                                    capacity_z = 3, ), 
                                max_size = vrt_lss_lastmile.models.capacity.Capacity(
                                    mass = 10, 
                                    volume = 2, 
                                    capacity_x = 1, 
                                    capacity_y = 2, 
                                    capacity_z = 3, ), 
                                width = 1, 
                                height = 3.1, 
                                length = 2.1, 
                                features = ["Freezer"], )
                            ], 
                        max_boxes = 2, 
                        max_capacity = vrt_lss_lastmile.models.capacity.Capacity(
                            mass = 10, 
                            volume = 2, 
                            capacity_x = 1, 
                            capacity_y = 2, 
                            capacity_z = 3, ), 
                        attributes = ["Name:X51"], )
                    ], 
                shifts = [
                    vrt_lss_lastmile.models.shift.Shift(
                        key = 'shift01', 
                        shift_type = 'PERFORMER', 
                        resource_key = 'performer01', 
                        availability_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                            from = '2021-02-21T09:30+03:00', 
                            to = '2021-02-21T19:45Z', ), 
                        working_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                            from = '2021-02-21T09:30+03:00', 
                            to = '2021-02-21T19:45Z', ), 
                        start_location_key = 'location01', 
                        finish_location_key = 'location01', 
                        max_locations = 15, 
                        max_stops = 15, 
                        tariff = vrt_lss_lastmile.models.universal_tariff.UniversalTariff(
                            cost_per_shift = 2000, 
                            constraints = [
                                vrt_lss_lastmile.models.tariff_constraint.TariffConstraint(
                                    stage_length = 200000, 
                                    cost_per_unit = 1.5, )
                                ], 
                            max_penalty_cost = 2000, ), 
                        work_and_rest_rules = vrt_lss_lastmile.models.work_and_rest_rules.WorkAndRestRules(
                            first_break = vrt_lss_lastmile.models.break.Break(
                                max_work_duration_sum = 60, 
                                duration = 120, ), ), 
                        attributes = ["Name:X51"], )
                    ], 
                hardlinks = [
                    vrt_lss_lastmile.models.hardlink.Hardlink(
                        key = 'group01', 
                        links = [
                            vrt_lss_lastmile.models.hardlink_element.HardlinkElement(
                                type = 'ORDER', 
                                entity_key = 'ord0001', )
                            ], )
                    ], 
                trips = [
                    vrt_lss_lastmile.models.trip.Trip(
                        key = 'TRIP0001', 
                        assigned_shifts = [
                            vrt_lss_lastmile.models.assigned_shift.AssignedShift(
                                shift_key = 'performer01', 
                                shift_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                                    from = '2021-02-21T09:30+03:00', 
                                    to = '2021-02-21T19:45Z', ), )
                            ], 
                        actions = [
                            vrt_lss_lastmile.models.trip_action.TripAction(
                                order_key = 'order01', 
                                demand_key = 'demand01.1', 
                                event_key = 'location01', 
                                location_key = 'location01', 
                                todolist = [
                                    vrt_lss_lastmile.models.trip_job.TripJob(
                                        job_type = 'START_WORK', 
                                        job_time = '2021-05-21T09:30+03:00', )
                                    ], 
                                cargo_placements = [
                                    vrt_lss_lastmile.models.cargo_placement.CargoPlacement(
                                        box_key = 'box01', 
                                        cargo_key = 'cargo01', )
                                    ], 
                                attributes = ["Name:X51"], )
                            ], 
                        waitlist = ["order02"], 
                        start_location_key = 'location01', 
                        finish_location_key = 'location01', 
                        attributes = ["Name:X51"], )
                    ], 
                facts = vrt_lss_lastmile.models.facts.Facts(
                    order_facts = [
                        vrt_lss_lastmile.models.order_fact.OrderFact(
                            type = 'DONE', 
                            time = '2021-05-21T09:30+03:00', 
                            order_key = 'order_01', 
                            demand_facts = [
                                vrt_lss_lastmile.models.demand_fact.DemandFact(
                                    type = 'DONE', 
                                    time = '2021-05-21T09:30+03:00', 
                                    demand_key = 'demand_01', )
                                ], )
                        ], 
                    performer_facts = [
                        vrt_lss_lastmile.models.performer_fact.PerformerFact(
                            time = '2021-05-21T09:30+03:00', 
                            performer_key = 'performer_01', 
                            position = vrt_lss_lastmile.models.track_point.TrackPoint(
                                latitude = 55.692789, 
                                longitude = 37.554554, 
                                time = '2021-05-21T19:45Z', ), )
                        ], 
                    transport_facts = [
                        vrt_lss_lastmile.models.transport_fact.TransportFact(
                            time = '2021-05-21T09:30+03:00', 
                            transport_key = 'transport_01', 
                            position = vrt_lss_lastmile.models.track_point.TrackPoint(
                                latitude = 55.692789, 
                                longitude = 37.554554, 
                                time = '2021-05-21T19:45Z', ), )
                        ], ), 
                settings = vrt_lss_lastmile.models.actualize_settings.ActualizeSettings(
                    current_time = '2021-05-21T09:30+03:00', 
                    result_timezone = 3, 
                    geo_provider = 'OSRM', 
                    toll_roads = False, 
                    ferry_crossing = False, )
            )
        else :
            return ActualizeTask(
                locations = [
                    vrt_lss_lastmile.models.advanced_location.AdvancedLocation(
                        key = 'location01', 
                        location = vrt_lss_lastmile.models.location.Location(
                            latitude = 55.692789, 
                            longitude = 37.554554, 
                            arrival_duration = 15, 
                            departure_duration = 5, ), 
                        transport_restrictions = ["2T"], 
                        load_windows = [
                            vrt_lss_lastmile.models.load_window.LoadWindow(
                                time_window = vrt_lss_lastmile.models.time_window.TimeWindow(
                                    from = '2021-02-21T09:30+03:00', 
                                    to = '2021-02-21T19:45Z', ), 
                                gates_count = 1, )
                            ], 
                        attributes = ["Name:X51"], )
                    ],
                orders = [
                    vrt_lss_lastmile.models.order.Order(
                        key = 'order01', 
                        order_features = ["Special"], 
                        order_restrictions = ["Special"], 
                        performer_restrictions = ["Special"], 
                        performer_blacklist = ["A0"], 
                        cargos = [
                            vrt_lss_lastmile.models.cargo.Cargo(
                                key = 'cargo01', 
                                capacity = vrt_lss_lastmile.models.capacity.Capacity(
                                    mass = 10, 
                                    volume = 2, 
                                    capacity_x = 1, 
                                    capacity_y = 2, 
                                    capacity_z = 3, ), 
                                rotation = ["ALL"], 
                                width = 1, 
                                height = 0.3, 
                                length = 2.2, 
                                max_storage_time = 60, 
                                restrictions = ["Freezer"], 
                                cargo_features = ["Clean"], 
                                cargo_restrictions = ["Warm"], )
                            ], 
                        demands = [
                            vrt_lss_lastmile.models.demand.Demand(
                                key = 'demand_1', 
                                demand_type = 'WORK', 
                                target_cargos = ["cargo01"], 
                                precedence_in_trip = 1, 
                                precedence_in_order = 1, 
                                possible_events = [
                                    vrt_lss_lastmile.models.possible_event.PossibleEvent(
                                        key = 'event_1', 
                                        location_key = 'location01', 
                                        duration = 10, 
                                        reward = 199.9, 
                                        time_window = vrt_lss_lastmile.models.time_window.TimeWindow(
                                            from = '2021-02-21T09:30+03:00', 
                                            to = '2021-02-21T19:45Z', ), 
                                        soft_time_window = vrt_lss_lastmile.models.time_window.TimeWindow(
                                            from = '2021-02-21T09:30+03:00', 
                                            to = '2021-02-21T19:45Z', ), )
                                    ], 
                                attributes = ["Name:X51"], )
                            ], 
                        attributes = ["Name:X51"], )
                    ],
                performers = [
                    vrt_lss_lastmile.models.performer.Performer(
                        key = 'performer0001', 
                        max_work_shifts = 3, 
                        performer_features = ["B1","Special"], 
                        transport_restrictions = ["B1"], 
                        own_transport_type = 'CAR', 
                        attributes = ["Name:X51"], )
                    ],
                transports = [
                    vrt_lss_lastmile.models.transport.Transport(
                        key = 'transport0001', 
                        transport_type = 'CAR', 
                        transport_features = ["20T"], 
                        performer_restrictions = ["Special"], 
                        boxes = [
                            vrt_lss_lastmile.models.box.Box(
                                key = 'box01', 
                                capacity = vrt_lss_lastmile.models.capacity.Capacity(
                                    mass = 10, 
                                    volume = 2, 
                                    capacity_x = 1, 
                                    capacity_y = 2, 
                                    capacity_z = 3, ), 
                                max_size = vrt_lss_lastmile.models.capacity.Capacity(
                                    mass = 10, 
                                    volume = 2, 
                                    capacity_x = 1, 
                                    capacity_y = 2, 
                                    capacity_z = 3, ), 
                                width = 1, 
                                height = 3.1, 
                                length = 2.1, 
                                features = ["Freezer"], )
                            ], 
                        max_boxes = 2, 
                        max_capacity = vrt_lss_lastmile.models.capacity.Capacity(
                            mass = 10, 
                            volume = 2, 
                            capacity_x = 1, 
                            capacity_y = 2, 
                            capacity_z = 3, ), 
                        attributes = ["Name:X51"], )
                    ],
                shifts = [
                    vrt_lss_lastmile.models.shift.Shift(
                        key = 'shift01', 
                        shift_type = 'PERFORMER', 
                        resource_key = 'performer01', 
                        availability_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                            from = '2021-02-21T09:30+03:00', 
                            to = '2021-02-21T19:45Z', ), 
                        working_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                            from = '2021-02-21T09:30+03:00', 
                            to = '2021-02-21T19:45Z', ), 
                        start_location_key = 'location01', 
                        finish_location_key = 'location01', 
                        max_locations = 15, 
                        max_stops = 15, 
                        tariff = vrt_lss_lastmile.models.universal_tariff.UniversalTariff(
                            cost_per_shift = 2000, 
                            constraints = [
                                vrt_lss_lastmile.models.tariff_constraint.TariffConstraint(
                                    stage_length = 200000, 
                                    cost_per_unit = 1.5, )
                                ], 
                            max_penalty_cost = 2000, ), 
                        work_and_rest_rules = vrt_lss_lastmile.models.work_and_rest_rules.WorkAndRestRules(
                            first_break = vrt_lss_lastmile.models.break.Break(
                                max_work_duration_sum = 60, 
                                duration = 120, ), ), 
                        attributes = ["Name:X51"], )
                    ],
                trips = [
                    vrt_lss_lastmile.models.trip.Trip(
                        key = 'TRIP0001', 
                        assigned_shifts = [
                            vrt_lss_lastmile.models.assigned_shift.AssignedShift(
                                shift_key = 'performer01', 
                                shift_time = vrt_lss_lastmile.models.time_window.TimeWindow(
                                    from = '2021-02-21T09:30+03:00', 
                                    to = '2021-02-21T19:45Z', ), )
                            ], 
                        actions = [
                            vrt_lss_lastmile.models.trip_action.TripAction(
                                order_key = 'order01', 
                                demand_key = 'demand01.1', 
                                event_key = 'location01', 
                                location_key = 'location01', 
                                todolist = [
                                    vrt_lss_lastmile.models.trip_job.TripJob(
                                        job_type = 'START_WORK', 
                                        job_time = '2021-05-21T09:30+03:00', )
                                    ], 
                                cargo_placements = [
                                    vrt_lss_lastmile.models.cargo_placement.CargoPlacement(
                                        box_key = 'box01', 
                                        cargo_key = 'cargo01', )
                                    ], 
                                attributes = ["Name:X51"], )
                            ], 
                        waitlist = ["order02"], 
                        start_location_key = 'location01', 
                        finish_location_key = 'location01', 
                        attributes = ["Name:X51"], )
                    ],
        )

    def testActualizeTask(self):
        """Test ActualizeTask"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
