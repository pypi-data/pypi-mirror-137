# coding: utf-8

"""
    Veeroute.Lastmile

    Veeroute Lastmile API  # noqa: E501

    The version of the OpenAPI document: 3.15.183137
    Contact: support@veeroute.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import vrt_lss_lastmile
from vrt_lss_lastmile.models.analytics_check_settings import AnalyticsCheckSettings  # noqa: E501
from vrt_lss_lastmile.rest import ApiException

class TestAnalyticsCheckSettings(unittest.TestCase):
    """AnalyticsCheckSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AnalyticsCheckSettings
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = vrt_lss_lastmile.models.analytics_check_settings.AnalyticsCheckSettings()  # noqa: E501
        if include_optional :
            return AnalyticsCheckSettings(
                short_time_window = vrt_lss_lastmile.models.analytics_check_settings_short_time_window.AnalyticsCheckSettings_short_time_window(
                    percent = 99, ), 
                lack_resource = vrt_lss_lastmile.models.analytics_check_settings_lack_resource.AnalyticsCheckSettings_lack_resource(
                    percent = 99, ), 
                low_order_compatibility = vrt_lss_lastmile.models.analytics_check_settings_low_order_compatibility.AnalyticsCheckSettings_low_order_compatibility(
                    count = 2, 
                    percent = 13, ), 
                low_resource_compatibility = vrt_lss_lastmile.models.analytics_check_settings_low_resource_compatibility.AnalyticsCheckSettings_low_resource_compatibility(
                    percent = 70, ), 
                lack_capacity = vrt_lss_lastmile.models.analytics_check_settings_lack_capacity.AnalyticsCheckSettings_lack_capacity(
                    max_ratio = 50, ), 
                huge_peak_load = vrt_lss_lastmile.models.analytics_check_settings_huge_peak_load.AnalyticsCheckSettings_huge_peak_load(
                    percent = 70, ), 
                far_location = vrt_lss_lastmile.models.analytics_check_settings_far_location.AnalyticsCheckSettings_far_location(
                    count = 10, ), 
                far_order = vrt_lss_lastmile.models.analytics_check_settings_far_order.AnalyticsCheckSettings_far_order(
                    planned_locations_count = 30, 
                    unplanned_locations_count = 30, 
                    time_delta = 70, )
            )
        else :
            return AnalyticsCheckSettings(
        )

    def testAnalyticsCheckSettings(self):
        """Test AnalyticsCheckSettings"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
