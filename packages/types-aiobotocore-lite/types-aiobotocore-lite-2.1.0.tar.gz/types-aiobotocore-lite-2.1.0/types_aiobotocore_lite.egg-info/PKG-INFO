Metadata-Version: 2.1
Name: types-aiobotocore-lite
Version: 2.1.0
Summary: Type annotations for aiobotocore 2.1.0 generated by mypy-boto3-builder 6.4.2
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: aiobotocore type-annotations aiobotocore-stubs botocore-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Provides-Extra: all
Provides-Extra: essential
Provides-Extra: accessanalyzer
Provides-Extra: account
Provides-Extra: acm
Provides-Extra: acm-pca
Provides-Extra: alexaforbusiness
Provides-Extra: amp
Provides-Extra: amplify
Provides-Extra: amplifybackend
Provides-Extra: amplifyuibuilder
Provides-Extra: apigateway
Provides-Extra: apigatewaymanagementapi
Provides-Extra: apigatewayv2
Provides-Extra: appconfig
Provides-Extra: appconfigdata
Provides-Extra: appflow
Provides-Extra: appintegrations
Provides-Extra: application-autoscaling
Provides-Extra: application-insights
Provides-Extra: applicationcostprofiler
Provides-Extra: appmesh
Provides-Extra: apprunner
Provides-Extra: appstream
Provides-Extra: appsync
Provides-Extra: athena
Provides-Extra: auditmanager
Provides-Extra: autoscaling
Provides-Extra: autoscaling-plans
Provides-Extra: backup
Provides-Extra: backup-gateway
Provides-Extra: batch
Provides-Extra: braket
Provides-Extra: budgets
Provides-Extra: ce
Provides-Extra: chime
Provides-Extra: chime-sdk-identity
Provides-Extra: chime-sdk-meetings
Provides-Extra: chime-sdk-messaging
Provides-Extra: cloud9
Provides-Extra: cloudcontrol
Provides-Extra: clouddirectory
Provides-Extra: cloudformation
Provides-Extra: cloudfront
Provides-Extra: cloudhsm
Provides-Extra: cloudhsmv2
Provides-Extra: cloudsearch
Provides-Extra: cloudsearchdomain
Provides-Extra: cloudtrail
Provides-Extra: cloudwatch
Provides-Extra: codeartifact
Provides-Extra: codebuild
Provides-Extra: codecommit
Provides-Extra: codedeploy
Provides-Extra: codeguru-reviewer
Provides-Extra: codeguruprofiler
Provides-Extra: codepipeline
Provides-Extra: codestar
Provides-Extra: codestar-connections
Provides-Extra: codestar-notifications
Provides-Extra: cognito-identity
Provides-Extra: cognito-idp
Provides-Extra: cognito-sync
Provides-Extra: comprehend
Provides-Extra: comprehendmedical
Provides-Extra: compute-optimizer
Provides-Extra: config
Provides-Extra: connect
Provides-Extra: connect-contact-lens
Provides-Extra: connectparticipant
Provides-Extra: cur
Provides-Extra: customer-profiles
Provides-Extra: databrew
Provides-Extra: dataexchange
Provides-Extra: datapipeline
Provides-Extra: datasync
Provides-Extra: dax
Provides-Extra: detective
Provides-Extra: devicefarm
Provides-Extra: devops-guru
Provides-Extra: directconnect
Provides-Extra: discovery
Provides-Extra: dlm
Provides-Extra: dms
Provides-Extra: docdb
Provides-Extra: drs
Provides-Extra: ds
Provides-Extra: dynamodb
Provides-Extra: dynamodbstreams
Provides-Extra: ebs
Provides-Extra: ec2
Provides-Extra: ec2-instance-connect
Provides-Extra: ecr
Provides-Extra: ecr-public
Provides-Extra: ecs
Provides-Extra: efs
Provides-Extra: eks
Provides-Extra: elastic-inference
Provides-Extra: elasticache
Provides-Extra: elasticbeanstalk
Provides-Extra: elastictranscoder
Provides-Extra: elb
Provides-Extra: elbv2
Provides-Extra: emr
Provides-Extra: emr-containers
Provides-Extra: es
Provides-Extra: events
Provides-Extra: evidently
Provides-Extra: finspace
Provides-Extra: finspace-data
Provides-Extra: firehose
Provides-Extra: fis
Provides-Extra: fms
Provides-Extra: forecast
Provides-Extra: forecastquery
Provides-Extra: frauddetector
Provides-Extra: fsx
Provides-Extra: gamelift
Provides-Extra: glacier
Provides-Extra: globalaccelerator
Provides-Extra: glue
Provides-Extra: grafana
Provides-Extra: greengrass
Provides-Extra: greengrassv2
Provides-Extra: groundstation
Provides-Extra: guardduty
Provides-Extra: health
Provides-Extra: healthlake
Provides-Extra: honeycode
Provides-Extra: iam
Provides-Extra: identitystore
Provides-Extra: imagebuilder
Provides-Extra: importexport
Provides-Extra: inspector
Provides-Extra: inspector2
Provides-Extra: iot
Provides-Extra: iot-data
Provides-Extra: iot-jobs-data
Provides-Extra: iot1click-devices
Provides-Extra: iot1click-projects
Provides-Extra: iotanalytics
Provides-Extra: iotdeviceadvisor
Provides-Extra: iotevents
Provides-Extra: iotevents-data
Provides-Extra: iotfleethub
Provides-Extra: iotsecuretunneling
Provides-Extra: iotsitewise
Provides-Extra: iotthingsgraph
Provides-Extra: iottwinmaker
Provides-Extra: iotwireless
Provides-Extra: ivs
Provides-Extra: kafka
Provides-Extra: kafkaconnect
Provides-Extra: kendra
Provides-Extra: kinesis
Provides-Extra: kinesis-video-archived-media
Provides-Extra: kinesis-video-media
Provides-Extra: kinesis-video-signaling
Provides-Extra: kinesisanalytics
Provides-Extra: kinesisanalyticsv2
Provides-Extra: kinesisvideo
Provides-Extra: kms
Provides-Extra: lakeformation
Provides-Extra: lambda
Provides-Extra: lex-models
Provides-Extra: lex-runtime
Provides-Extra: lexv2-models
Provides-Extra: lexv2-runtime
Provides-Extra: license-manager
Provides-Extra: lightsail
Provides-Extra: location
Provides-Extra: logs
Provides-Extra: lookoutequipment
Provides-Extra: lookoutmetrics
Provides-Extra: lookoutvision
Provides-Extra: machinelearning
Provides-Extra: macie
Provides-Extra: macie2
Provides-Extra: managedblockchain
Provides-Extra: marketplace-catalog
Provides-Extra: marketplace-entitlement
Provides-Extra: marketplacecommerceanalytics
Provides-Extra: mediaconnect
Provides-Extra: mediaconvert
Provides-Extra: medialive
Provides-Extra: mediapackage
Provides-Extra: mediapackage-vod
Provides-Extra: mediastore
Provides-Extra: mediastore-data
Provides-Extra: mediatailor
Provides-Extra: memorydb
Provides-Extra: meteringmarketplace
Provides-Extra: mgh
Provides-Extra: mgn
Provides-Extra: migration-hub-refactor-spaces
Provides-Extra: migrationhub-config
Provides-Extra: migrationhubstrategy
Provides-Extra: mobile
Provides-Extra: mq
Provides-Extra: mturk
Provides-Extra: mwaa
Provides-Extra: neptune
Provides-Extra: network-firewall
Provides-Extra: networkmanager
Provides-Extra: nimble
Provides-Extra: opensearch
Provides-Extra: opsworks
Provides-Extra: opsworkscm
Provides-Extra: organizations
Provides-Extra: outposts
Provides-Extra: panorama
Provides-Extra: personalize
Provides-Extra: personalize-events
Provides-Extra: personalize-runtime
Provides-Extra: pi
Provides-Extra: pinpoint
Provides-Extra: pinpoint-email
Provides-Extra: pinpoint-sms-voice
Provides-Extra: polly
Provides-Extra: pricing
Provides-Extra: proton
Provides-Extra: qldb
Provides-Extra: qldb-session
Provides-Extra: quicksight
Provides-Extra: ram
Provides-Extra: rbin
Provides-Extra: rds
Provides-Extra: rds-data
Provides-Extra: redshift
Provides-Extra: redshift-data
Provides-Extra: rekognition
Provides-Extra: resiliencehub
Provides-Extra: resource-groups
Provides-Extra: resourcegroupstaggingapi
Provides-Extra: robomaker
Provides-Extra: route53
Provides-Extra: route53-recovery-cluster
Provides-Extra: route53-recovery-control-config
Provides-Extra: route53-recovery-readiness
Provides-Extra: route53domains
Provides-Extra: route53resolver
Provides-Extra: rum
Provides-Extra: s3
Provides-Extra: s3control
Provides-Extra: s3outposts
Provides-Extra: sagemaker
Provides-Extra: sagemaker-a2i-runtime
Provides-Extra: sagemaker-edge
Provides-Extra: sagemaker-featurestore-runtime
Provides-Extra: sagemaker-runtime
Provides-Extra: savingsplans
Provides-Extra: schemas
Provides-Extra: sdb
Provides-Extra: secretsmanager
Provides-Extra: securityhub
Provides-Extra: serverlessrepo
Provides-Extra: service-quotas
Provides-Extra: servicecatalog
Provides-Extra: servicecatalog-appregistry
Provides-Extra: servicediscovery
Provides-Extra: ses
Provides-Extra: sesv2
Provides-Extra: shield
Provides-Extra: signer
Provides-Extra: sms
Provides-Extra: sms-voice
Provides-Extra: snow-device-management
Provides-Extra: snowball
Provides-Extra: sns
Provides-Extra: sqs
Provides-Extra: ssm
Provides-Extra: ssm-contacts
Provides-Extra: ssm-incidents
Provides-Extra: sso
Provides-Extra: sso-admin
Provides-Extra: sso-oidc
Provides-Extra: stepfunctions
Provides-Extra: storagegateway
Provides-Extra: sts
Provides-Extra: support
Provides-Extra: swf
Provides-Extra: synthetics
Provides-Extra: textract
Provides-Extra: timestream-query
Provides-Extra: timestream-write
Provides-Extra: transcribe
Provides-Extra: transfer
Provides-Extra: translate
Provides-Extra: voice-id
Provides-Extra: waf
Provides-Extra: waf-regional
Provides-Extra: wafv2
Provides-Extra: wellarchitected
Provides-Extra: wisdom
Provides-Extra: workdocs
Provides-Extra: worklink
Provides-Extra: workmail
Provides-Extra: workmailmessageflow
Provides-Extra: workspaces
Provides-Extra: workspaces-web
Provides-Extra: xray

<a id="botocore-stubs"></a>

# botocore-stubs

[![PyPI - types-aiobotocore](https://img.shields.io/pypi/v/types-aiobotocore.svg?color=blue)](https://pypi.org/project/types-aiobotocore)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore.svg?color=blue)](https://pypi.org/project/types-aiobotocore)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore?color=blue)](https://pypistats.org/packages/types-aiobotocore)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[aiobotocore 2.1.0](https://github.com/aio-libs/aiobotocore) compatible with
[VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 6.4.2](https://github.com/vemel/mypy_boto3_builder).

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/main/demo.gif)

- [botocore-stubs](#botocore-stubs)
  - [How to install](#how-to-install)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [How to uninstall](#how-to-uninstall)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Emacs](#emacs)
    - [Sublime Text](#sublime-text)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [How it works](#how-it-works)
  - [What's new](#what's-new)
    - [Implemented features](#implemented-features)
    - [Latest changes](#latest-changes)
  - [Versioning](#versioning)
  - [Thank you](#thank-you)
  - [Documentation](#documentation)
  - [Support and contributing](#support-and-contributing)

<a id="how-to-install"></a>

## How to install

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` to add type annotations for `aiobotocore` package.

```bash
# install type annotations only for aiobotocore
python -m pip install types-aiobotocore

# install `aiobotocore` type annotations
# for ec2, s3, rds, lambda, sqs, dynamo and cloudformation
# Consumes ~7 MB of space
python -m pip install 'types-aiobotocore[essential]'

# or install annotations for services you use
python -m pip install 'types-aiobotocore[acm,apigateway]'
```

<a id="how-to-uninstall"></a>

## How to uninstall

```bash
# uninstall types-aiobotocore
python -m pip uninstall -y boto3-stubs types-aiobotocore

# uninstall submodules
python -m pip freeze | grep mypy-aiobotocore | xargs python -m pip uninstall -y
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore` with services you use in your environment:
  `python -m pip install 'types-aiobotocore[s3,ec2]'`

Both type checking and auto-complete should work for installed `aiobotocore`
services. No explicit type annotations required, write your `aiobotocore` code
as usual.

<a id="pycharm"></a>

### PyCharm

- Install `types-aiobotocore` with services you use in your environment:
  `python -m pip install 'types-aiobotocore[s3,ec2]'`
- Install `mypy_boto3_builder`: `pip install mypy_boto3_builder`
- Generate stubs in `<project_root>/typings` directory for services you use

```bash
python -m mypy_boto3_builder --product aiobotocore --installed typings -d -s s3 ec2
```

- Add `<project_root>/typings` folder to your
  [Interpreter Paths](https://www.jetbrains.com/help/pycharm/stubs.html#reuse-stubs)

Since stubs are stored in your project root, you do not need to re-generate
them after update.

<a id="emacs"></a>

### Emacs

- Install `types-aiobotocore` with services you use in your environment:
  `python -m pip install 'types-aiobotocore[s3,ec2]'`
- Install [use-package](https://github.com/jwiegley/use-package),
  [lsp](https://github.com/emacs-lsp/lsp-mode/),
  [company](https://github.com/company-mode/company-mode) and
  [flycheck](https://github.com/flycheck/flycheck) packages
- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package

```elisp
(use-package lsp-pyright
  :ensure t
  :hook (python-mode . (lambda ()
                          (require 'lsp-pyright)
                          (lsp)))  ; or lsp-deferred
  :init (when (executable-find "python3")
          (setq lsp-pyright-python-executable-cmd "python3"))
  )
```

- Make sure emacs uses the environment where you have installed
  `types-aiobotocore`

<a id="sublime-text"></a>

### Sublime Text

- Install `types-aiobotocore` with services you use in your environment:
  `python -m pip install 'types-aiobotocore[s3,ec2]'`
- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package
- Make sure emacs uses the environment where you have installed
  `types-aiobotocore`

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore` with services you use in your environment:
  `python -m pip install 'types-aiobotocore[s3,ec2]'`
- Run `mypy` as usual

Type checking should work for installed `aiobotocore` services. No explicit
type annotations required, write your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `types-aiobotocore` with services you use in your environment:
  `python -m pip install 'types-aiobotocore[s3,ec2]'`
- Optionally, you can install `types-aiobotocore` to `typings` folder.

Type checking should work for installed `aiobotocore` services. No explicit
type annotations required, write your `aiobotocore` code as usual.

<a id="how-it-works"></a>

## How it works

Fully automated
[mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder) carefully
generates type annotations for each service, patiently waiting for `boto3`
updates. It delivers a drop-in type annotations for you and makes sure that:

- All available `boto3` services are covered.
- Each public class and method of every `boto3` service gets valid type
  annotations extracted from the documentation (blame `botocore` docs if types
  are incorrect).
- Type annotations include up-to-date documentation.
- Link to documentation is provided for every method.
- Code is processed by [black](https://github.com/psf/black) and
  [isort](https://github.com/PyCQA/isort) for readability.

<a id="what's-new"></a>

## What's new

<a id="implemented-features"></a>

### Implemented features

- Fully type annotated `boto3` library
- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`
  compatibility
- `Client` type annotations for each service
- `ServiceResource` type annotations for each service
- `Resource` type annotations for each service
- `Waiter` type annotations for each service
- `Paginator` type annotations for each service
- Generated `TypeDefs` for each service
- Generated `Literals` for each service
- Auto discovery of types for `boto3.client` and `boto3.session` calls
- Auto discovery of types for `session.client` and `session.session` calls
- Auto discovery of types for `client.get_waiter` and `client.get_paginator`
  calls
- Auto discovery of types for `ServiceResource` and `Resource` collections

<a id="latest-changes"></a>

### Latest changes

Builder changelog can be found in
[Releases](https://github.com/vemel/mypy_boto3_builder/releases).

<a id="versioning"></a>

## Versioning

`botocore-stubs` version is the same as related `botocore` version and follows
[PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

<a id="thank-you"></a>

## Thank you

- [Allie Fitter](https://github.com/alliefitter) for
  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),
  this package is based on top of his work
- [black](https://github.com/psf/black) developers for an awesome formatting
  tool
- [Timothy Edmund Crosley](https://github.com/timothycrosley) for
  [isort](https://github.com/PyCQA/isort) and how flexible it is
- [mypy](https://github.com/python/mypy) developers for doing all dirty work
  for us
- [pyright](https://github.com/microsoft/pyright) team for the new era of typed
  Python

<a id="documentation"></a>

## Documentation

All services type annotations can be found in
[boto3-stubs docs](https://vemel.github.io/boto3_stubs_docs/)

<a id="support-and-contributing"></a>

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder/issues/)
repository.


