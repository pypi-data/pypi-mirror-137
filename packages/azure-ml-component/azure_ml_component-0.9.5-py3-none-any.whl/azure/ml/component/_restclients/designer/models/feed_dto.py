# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class FeedDto(Model):
    """FeedDto.

    :param name:
    :type name: str
    :param display_name:
    :type display_name: str
    :param description:
    :type description: str
    :param sharing_scopes:
    :type sharing_scopes: list[~designer.models.SharingScope]
    :param supported_asset_types:
    :type supported_asset_types: ~designer.models.FeedDtoSupportedAssetTypes
    :param regional_workspace_storage: This is a dictionary
    :type regional_workspace_storage: dict[str, list[str]]
    :param intellectual_property_publisher:
    :type intellectual_property_publisher: str
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'sharing_scopes': {'key': 'sharingScopes', 'type': '[SharingScope]'},
        'supported_asset_types': {'key': 'supportedAssetTypes', 'type': 'FeedDtoSupportedAssetTypes'},
        'regional_workspace_storage': {'key': 'regionalWorkspaceStorage', 'type': '{[str]}'},
        'intellectual_property_publisher': {'key': 'intellectualPropertyPublisher', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(FeedDto, self).__init__(**kwargs)
        self.name = kwargs.get('name', None)
        self.display_name = kwargs.get('display_name', None)
        self.description = kwargs.get('description', None)
        self.sharing_scopes = kwargs.get('sharing_scopes', None)
        self.supported_asset_types = kwargs.get('supported_asset_types', None)
        self.regional_workspace_storage = kwargs.get('regional_workspace_storage', None)
        self.intellectual_property_publisher = kwargs.get('intellectual_property_publisher', None)
