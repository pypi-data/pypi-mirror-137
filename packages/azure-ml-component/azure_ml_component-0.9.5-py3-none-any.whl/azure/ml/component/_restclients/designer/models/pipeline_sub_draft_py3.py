# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PipelineSubDraft(Model):
    """PipelineSubDraft.

    :param parent_graph_draft_id:
    :type parent_graph_draft_id: str
    :param parent_node_id:
    :type parent_node_id: str
    :param graph_detail:
    :type graph_detail: ~designer.models.PipelineRunGraphDetail
    :param module_dto:
    :type module_dto: ~designer.models.ModuleDto
    :param name:
    :type name: str
    :param last_edited_by:
    :type last_edited_by: str
    :param created_by:
    :type created_by: str
    :param description:
    :type description: str
    :param pipeline_type: Possible values include: 'TrainingPipeline',
     'RealTimeInferencePipeline', 'BatchInferencePipeline', 'Unknown'
    :type pipeline_type: str or ~designer.models.PipelineType
    :param pipeline_draft_mode: Possible values include: 'None', 'Normal',
     'Custom'
    :type pipeline_draft_mode: str or ~designer.models.PipelineDraftMode
    :param tags: This is a dictionary
    :type tags: dict[str, str]
    :param properties: This is a dictionary
    :type properties: dict[str, str]
    :param entity_status: Possible values include: 'Active', 'Deprecated',
     'Disabled'
    :type entity_status: str or ~designer.models.EntityStatus
    :param id:
    :type id: str
    :param etag:
    :type etag: str
    :param created_date:
    :type created_date: datetime
    :param last_modified_date:
    :type last_modified_date: datetime
    """

    _attribute_map = {
        'parent_graph_draft_id': {'key': 'parentGraphDraftId', 'type': 'str'},
        'parent_node_id': {'key': 'parentNodeId', 'type': 'str'},
        'graph_detail': {'key': 'graphDetail', 'type': 'PipelineRunGraphDetail'},
        'module_dto': {'key': 'moduleDto', 'type': 'ModuleDto'},
        'name': {'key': 'name', 'type': 'str'},
        'last_edited_by': {'key': 'lastEditedBy', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'pipeline_type': {'key': 'pipelineType', 'type': 'str'},
        'pipeline_draft_mode': {'key': 'pipelineDraftMode', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'entity_status': {'key': 'entityStatus', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'etag': {'key': 'etag', 'type': 'str'},
        'created_date': {'key': 'createdDate', 'type': 'iso-8601'},
        'last_modified_date': {'key': 'lastModifiedDate', 'type': 'iso-8601'},
    }

    def __init__(self, *, parent_graph_draft_id: str=None, parent_node_id: str=None, graph_detail=None, module_dto=None, name: str=None, last_edited_by: str=None, created_by: str=None, description: str=None, pipeline_type=None, pipeline_draft_mode=None, tags=None, properties=None, entity_status=None, id: str=None, etag: str=None, created_date=None, last_modified_date=None, **kwargs) -> None:
        super(PipelineSubDraft, self).__init__(**kwargs)
        self.parent_graph_draft_id = parent_graph_draft_id
        self.parent_node_id = parent_node_id
        self.graph_detail = graph_detail
        self.module_dto = module_dto
        self.name = name
        self.last_edited_by = last_edited_by
        self.created_by = created_by
        self.description = description
        self.pipeline_type = pipeline_type
        self.pipeline_draft_mode = pipeline_draft_mode
        self.tags = tags
        self.properties = properties
        self.entity_status = entity_status
        self.id = id
        self.etag = etag
        self.created_date = created_date
        self.last_modified_date = last_modified_date
