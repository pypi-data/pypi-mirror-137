# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class LimitSettings(Model):
    """LimitSettings.

    :param max_trials:
    :type max_trials: int
    :param trial_timeout:
    :type trial_timeout: str
    :param max_concurrent_trials:
    :type max_concurrent_trials: int
    :param max_cores_per_trial:
    :type max_cores_per_trial: int
    :param exit_score:
    :type exit_score: float
    :param enable_early_termination:
    :type enable_early_termination: bool
    """

    _attribute_map = {
        'max_trials': {'key': 'maxTrials', 'type': 'int'},
        'trial_timeout': {'key': 'trialTimeout', 'type': 'str'},
        'max_concurrent_trials': {'key': 'maxConcurrentTrials', 'type': 'int'},
        'max_cores_per_trial': {'key': 'maxCoresPerTrial', 'type': 'int'},
        'exit_score': {'key': 'exitScore', 'type': 'float'},
        'enable_early_termination': {'key': 'enableEarlyTermination', 'type': 'bool'},
    }

    def __init__(self, *, max_trials: int=None, trial_timeout: str=None, max_concurrent_trials: int=None, max_cores_per_trial: int=None, exit_score: float=None, enable_early_termination: bool=None, **kwargs) -> None:
        super(LimitSettings, self).__init__(**kwargs)
        self.max_trials = max_trials
        self.trial_timeout = trial_timeout
        self.max_concurrent_trials = max_concurrent_trials
        self.max_cores_per_trial = max_cores_per_trial
        self.exit_score = exit_score
        self.enable_early_termination = enable_early_termination
