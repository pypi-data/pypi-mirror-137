Metadata-Version: 2.1
Name: mypy-boto3-appstream
Version: 1.20.49
Summary: Type annotations for boto3.AppStream 1.20.49 service generated by mypy-boto3-builder 6.4.2
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: boto3 appstream type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions ; python_version < "3.9"

<a id="mypy-boto3-appstream"></a>

# mypy-boto3-appstream

[![PyPI - mypy-boto3-appstream](https://img.shields.io/pypi/v/mypy-boto3-appstream.svg?color=blue)](https://pypi.org/project/mypy-boto3-appstream)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-appstream.svg?color=blue)](https://pypi.org/project/mypy-boto3-appstream)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/mypy-boto3-appstream?color=blue)](https://pypistats.org/packages/mypy-boto3-appstream)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[boto3.AppStream 1.20.49](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/appstream.html#AppStream)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 6.4.2](https://github.com/vemel/mypy_boto3_builder).

More information can be found on
[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
[mypy-boto3-appstream docs](https://vemel.github.io/boto3_stubs_docs/mypy_boto3_appstream/)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/main/demo.gif)

- [mypy-boto3-appstream](#mypy-boto3-appstream)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)
    - [Waiters annotations](#waiters-annotations)
    - [Literals](#literals)
    - [Typed dictionaries](#typed-dictionaries)
  - [Versioning](#versioning)
  - [Documentation](#documentation)
  - [Support and contributing](#support-and-contributing)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `AppStream`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `boto3-stubs` for `AppStream` service.

```bash
# install with boto3 type annotations
python -m pip install 'boto3-stubs[appstream]'

# Lite version does not provide session.client/resource overloads
# it is more RAM-friendly, but requires explicit type annotations
python -m pip install 'boto3-stubs-lite[appstream]'

# standalone installation
python -m pip install mypy-boto3-appstream
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `boto3-stubs[appstream]` in your environment:
  `python -m pip install 'boto3-stubs[appstream]'`

Both type checking and auto-complete should work for `AppStream` service. No
explicit type annotations required, write your `boto3` code as usual.

<a id="pycharm"></a>

### PyCharm

- Install `boto3-stubs[appstream]` in your environment:
  `python -m pip install 'boto3-stubs[appstream]'`

Both type checking and auto-complete should work for `AppStream` service. No
explicit type annotations required, write your `boto3` code as usual.
Auto-complete can be slow on big projects or if you have a lot of installed
`boto3-stubs` submodules.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `boto3-stubs[appstream]` in your environment:
  `python -m pip install 'boto3-stubs[appstream]'`
- Run `mypy` as usual

Type checking should work for `AppStream` service. No explicit type annotations
required, write your `boto3` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `boto3-stubs[appstream]` in your environment:
  `python -m pip install 'boto3-stubs[appstream]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `AppStream` service. No explicit type annotations
required, write your `boto3` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`AppStreamClient` provides annotations for `boto3.client("appstream")`.

```python
from boto3.session import Session

from mypy_boto3_appstream import AppStreamClient

client: AppStreamClient = Session().client("appstream")

# now client usage is checked by mypy and IDE should provide code auto-complete
```

<a id="paginators-annotations"></a>

### Paginators annotations

`mypy_boto3_appstream.paginator` module contains type annotations for all
paginators.

```python
from boto3.session import Session

from mypy_boto3_appstream import AppStreamClient
from mypy_boto3_appstream.paginator import (
    DescribeDirectoryConfigsPaginator,
    DescribeFleetsPaginator,
    DescribeImageBuildersPaginator,
    DescribeImagesPaginator,
    DescribeSessionsPaginator,
    DescribeStacksPaginator,
    DescribeUserStackAssociationsPaginator,
    DescribeUsersPaginator,
    ListAssociatedFleetsPaginator,
    ListAssociatedStacksPaginator,
)

client: AppStreamClient = Session().client("appstream")

# Explicit type annotations are optional here
# Type should be correctly discovered by mypy and IDEs
# VSCode requires explicit type annotations
describe_directory_configs_paginator: DescribeDirectoryConfigsPaginator = client.get_paginator("describe_directory_configs")
describe_fleets_paginator: DescribeFleetsPaginator = client.get_paginator("describe_fleets")
describe_image_builders_paginator: DescribeImageBuildersPaginator = client.get_paginator("describe_image_builders")
describe_images_paginator: DescribeImagesPaginator = client.get_paginator("describe_images")
describe_sessions_paginator: DescribeSessionsPaginator = client.get_paginator("describe_sessions")
describe_stacks_paginator: DescribeStacksPaginator = client.get_paginator("describe_stacks")
describe_user_stack_associations_paginator: DescribeUserStackAssociationsPaginator = client.get_paginator("describe_user_stack_associations")
describe_users_paginator: DescribeUsersPaginator = client.get_paginator("describe_users")
list_associated_fleets_paginator: ListAssociatedFleetsPaginator = client.get_paginator("list_associated_fleets")
list_associated_stacks_paginator: ListAssociatedStacksPaginator = client.get_paginator("list_associated_stacks")
```

<a id="waiters-annotations"></a>

### Waiters annotations

`mypy_boto3_appstream.waiter` module contains type annotations for all waiters.

```python
from boto3.session import Session

from mypy_boto3_appstream import AppStreamClient
from mypy_boto3_appstream.waiter import (
    FleetStartedWaiter,
    FleetStoppedWaiter,
)

client: AppStreamClient = Session().client("appstream")

# Explicit type annotations are optional here
# Type should be correctly discovered by mypy and IDEs
# VSCode requires explicit type annotations
fleet_started_waiter: FleetStartedWaiter = client.get_waiter("fleet_started")
fleet_stopped_waiter: FleetStoppedWaiter = client.get_waiter("fleet_stopped")
```

<a id="literals"></a>

### Literals

`mypy_boto3_appstream.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from mypy_boto3_appstream.literals import (
    AccessEndpointTypeType,
    ActionType,
    AppVisibilityType,
    ApplicationAttributeType,
    AuthenticationTypeType,
    DescribeDirectoryConfigsPaginatorName,
    DescribeFleetsPaginatorName,
    DescribeImageBuildersPaginatorName,
    DescribeImagesPaginatorName,
    DescribeSessionsPaginatorName,
    DescribeStacksPaginatorName,
    DescribeUserStackAssociationsPaginatorName,
    DescribeUsersPaginatorName,
    FleetAttributeType,
    FleetErrorCodeType,
    FleetStartedWaiterName,
    FleetStateType,
    FleetStoppedWaiterName,
    FleetTypeType,
    ImageBuilderStateChangeReasonCodeType,
    ImageBuilderStateType,
    ImageStateChangeReasonCodeType,
    ImageStateType,
    ListAssociatedFleetsPaginatorName,
    ListAssociatedStacksPaginatorName,
    MessageActionType,
    PermissionType,
    PlatformTypeType,
    SessionConnectionStateType,
    SessionStateType,
    StackAttributeType,
    StackErrorCodeType,
    StorageConnectorTypeType,
    StreamViewType,
    UsageReportExecutionErrorCodeType,
    UsageReportScheduleType,
    UserStackAssociationErrorCodeType,
    VisibilityTypeType,
    ServiceName,
    PaginatorName,
    WaiterName,
)

def check_value(value: AccessEndpointTypeType) -> bool:
    ...
```

<a id="typed-dictionaries"></a>

### Typed dictionaries

`mypy_boto3_appstream.type_defs` module contains structures and shapes
assembled to typed dictionaries for additional type checking.

```python
from mypy_boto3_appstream.type_defs import (
    AccessEndpointTypeDef,
    AppBlockTypeDef,
    ApplicationFleetAssociationTypeDef,
    ApplicationSettingsResponseTypeDef,
    ApplicationSettingsTypeDef,
    ApplicationTypeDef,
    AssociateApplicationFleetRequestRequestTypeDef,
    AssociateApplicationFleetResultTypeDef,
    AssociateApplicationToEntitlementRequestRequestTypeDef,
    AssociateFleetRequestRequestTypeDef,
    BatchAssociateUserStackRequestRequestTypeDef,
    BatchAssociateUserStackResultTypeDef,
    BatchDisassociateUserStackRequestRequestTypeDef,
    BatchDisassociateUserStackResultTypeDef,
    ComputeCapacityStatusTypeDef,
    ComputeCapacityTypeDef,
    CopyImageRequestRequestTypeDef,
    CopyImageResponseTypeDef,
    CreateAppBlockRequestRequestTypeDef,
    CreateAppBlockResultTypeDef,
    CreateApplicationRequestRequestTypeDef,
    CreateApplicationResultTypeDef,
    CreateDirectoryConfigRequestRequestTypeDef,
    CreateDirectoryConfigResultTypeDef,
    CreateEntitlementRequestRequestTypeDef,
    CreateEntitlementResultTypeDef,
    CreateFleetRequestRequestTypeDef,
    CreateFleetResultTypeDef,
    CreateImageBuilderRequestRequestTypeDef,
    CreateImageBuilderResultTypeDef,
    CreateImageBuilderStreamingURLRequestRequestTypeDef,
    CreateImageBuilderStreamingURLResultTypeDef,
    CreateStackRequestRequestTypeDef,
    CreateStackResultTypeDef,
    CreateStreamingURLRequestRequestTypeDef,
    CreateStreamingURLResultTypeDef,
    CreateUpdatedImageRequestRequestTypeDef,
    CreateUpdatedImageResultTypeDef,
    CreateUsageReportSubscriptionResultTypeDef,
    CreateUserRequestRequestTypeDef,
    DeleteAppBlockRequestRequestTypeDef,
    DeleteApplicationRequestRequestTypeDef,
    DeleteDirectoryConfigRequestRequestTypeDef,
    DeleteEntitlementRequestRequestTypeDef,
    DeleteFleetRequestRequestTypeDef,
    DeleteImageBuilderRequestRequestTypeDef,
    DeleteImageBuilderResultTypeDef,
    DeleteImagePermissionsRequestRequestTypeDef,
    DeleteImageRequestRequestTypeDef,
    DeleteImageResultTypeDef,
    DeleteStackRequestRequestTypeDef,
    DeleteUserRequestRequestTypeDef,
    DescribeAppBlocksRequestRequestTypeDef,
    DescribeAppBlocksResultTypeDef,
    DescribeApplicationFleetAssociationsRequestRequestTypeDef,
    DescribeApplicationFleetAssociationsResultTypeDef,
    DescribeApplicationsRequestRequestTypeDef,
    DescribeApplicationsResultTypeDef,
    DescribeDirectoryConfigsRequestRequestTypeDef,
    DescribeDirectoryConfigsResultTypeDef,
    DescribeEntitlementsRequestRequestTypeDef,
    DescribeEntitlementsResultTypeDef,
    DescribeFleetsRequestRequestTypeDef,
    DescribeFleetsResultTypeDef,
    DescribeImageBuildersRequestRequestTypeDef,
    DescribeImageBuildersResultTypeDef,
    DescribeImagePermissionsRequestRequestTypeDef,
    DescribeImagePermissionsResultTypeDef,
    DescribeImagesRequestRequestTypeDef,
    DescribeImagesResultTypeDef,
    DescribeSessionsRequestRequestTypeDef,
    DescribeSessionsResultTypeDef,
    DescribeStacksRequestRequestTypeDef,
    DescribeStacksResultTypeDef,
    DescribeUsageReportSubscriptionsRequestRequestTypeDef,
    DescribeUsageReportSubscriptionsResultTypeDef,
    DescribeUserStackAssociationsRequestRequestTypeDef,
    DescribeUserStackAssociationsResultTypeDef,
    DescribeUsersRequestRequestTypeDef,
    DescribeUsersResultTypeDef,
    DirectoryConfigTypeDef,
    DisableUserRequestRequestTypeDef,
    DisassociateApplicationFleetRequestRequestTypeDef,
    DisassociateApplicationFromEntitlementRequestRequestTypeDef,
    DisassociateFleetRequestRequestTypeDef,
    DomainJoinInfoTypeDef,
    EnableUserRequestRequestTypeDef,
    EntitledApplicationTypeDef,
    EntitlementAttributeTypeDef,
    EntitlementTypeDef,
    ExpireSessionRequestRequestTypeDef,
    FleetErrorTypeDef,
    FleetTypeDef,
    ImageBuilderStateChangeReasonTypeDef,
    ImageBuilderTypeDef,
    ImagePermissionsTypeDef,
    ImageStateChangeReasonTypeDef,
    ImageTypeDef,
    LastReportGenerationExecutionErrorTypeDef,
    ListAssociatedFleetsRequestRequestTypeDef,
    ListAssociatedFleetsResultTypeDef,
    ListAssociatedStacksRequestRequestTypeDef,
    ListAssociatedStacksResultTypeDef,
    ListEntitledApplicationsRequestRequestTypeDef,
    ListEntitledApplicationsResultTypeDef,
    ListTagsForResourceRequestRequestTypeDef,
    ListTagsForResourceResponseTypeDef,
    NetworkAccessConfigurationTypeDef,
    PaginatorConfigTypeDef,
    ResourceErrorTypeDef,
    ResponseMetadataTypeDef,
    S3LocationTypeDef,
    ScriptDetailsTypeDef,
    ServiceAccountCredentialsTypeDef,
    SessionTypeDef,
    SharedImagePermissionsTypeDef,
    StackErrorTypeDef,
    StackTypeDef,
    StartFleetRequestRequestTypeDef,
    StartImageBuilderRequestRequestTypeDef,
    StartImageBuilderResultTypeDef,
    StopFleetRequestRequestTypeDef,
    StopImageBuilderRequestRequestTypeDef,
    StopImageBuilderResultTypeDef,
    StorageConnectorTypeDef,
    TagResourceRequestRequestTypeDef,
    UntagResourceRequestRequestTypeDef,
    UpdateApplicationRequestRequestTypeDef,
    UpdateApplicationResultTypeDef,
    UpdateDirectoryConfigRequestRequestTypeDef,
    UpdateDirectoryConfigResultTypeDef,
    UpdateEntitlementRequestRequestTypeDef,
    UpdateEntitlementResultTypeDef,
    UpdateFleetRequestRequestTypeDef,
    UpdateFleetResultTypeDef,
    UpdateImagePermissionsRequestRequestTypeDef,
    UpdateStackRequestRequestTypeDef,
    UpdateStackResultTypeDef,
    UsageReportSubscriptionTypeDef,
    UserSettingTypeDef,
    UserStackAssociationErrorTypeDef,
    UserStackAssociationTypeDef,
    UserTypeDef,
    VpcConfigTypeDef,
    WaiterConfigTypeDef,
)

def get_structure() -> AccessEndpointTypeDef:
    return {
      ...
    }
```

<a id="versioning"></a>

## Versioning

`mypy-boto3-appstream` version is the same as related `boto3` version and
follows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

<a id="documentation"></a>

## Documentation

All type annotations can be found in
[mypy-boto3-appstream docs](https://vemel.github.io/boto3_stubs_docs/mypy_boto3_appstream/)

<a id="support-and-contributing"></a>

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder/issues/)
repository.


