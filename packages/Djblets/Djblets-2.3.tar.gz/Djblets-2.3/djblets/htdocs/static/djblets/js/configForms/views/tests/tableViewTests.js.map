{"version":3,"sources":["tableViewTests.es6.js"],"names":[],"mappings":"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","file":"tableViewTests.js","sourcesContent":["suite('djblets/configForms/views/TableView', function() {\n    describe('Manages rows', function() {\n        let collection;\n        let list;\n        let tableView;\n\n        beforeEach(function() {\n            collection = new Backbone.Collection(\n                [\n                    {text: 'Item 1'},\n                    {text: 'Item 2'},\n                    {text: 'Item 3'},\n                ], {\n                    model: Djblets.Config.ListItem,\n                }\n            );\n\n            list = new Djblets.Config.List({}, {\n                collection: collection,\n            });\n\n            tableView = new Djblets.Config.TableView({\n                model: list,\n            });\n            tableView.render();\n        });\n\n        it('On render', function() {\n            const $rows = tableView.$('tr');\n            expect($rows.length).toBe(3);\n            expect($rows.eq(0).text().strip()).toBe('Item 1');\n            expect($rows.eq(1).text().strip()).toBe('Item 2');\n            expect($rows.eq(2).text().strip()).toBe('Item 3');\n        });\n\n        it('On add', function() {\n            collection.add({\n                text: 'Item 4',\n            });\n\n            const $rows = tableView.$('tr');\n            expect($rows.length).toBe(4);\n            expect($rows.eq(3).text().strip()).toBe('Item 4');\n        });\n\n        it('On remove', function() {\n            collection.remove(collection.at(0));\n\n            const $rows = tableView.$('tr');\n            expect($rows.length).toBe(2);\n            expect($rows.eq(0).text().strip()).toBe('Item 2');\n        });\n\n        it('On reset', function() {\n            collection.reset([\n                {text: 'Foo'},\n                {text: 'Bar'},\n            ]);\n\n            const $rows = tableView.$('tr');\n            expect($rows.length).toBe(2);\n            expect($rows.eq(0).text().strip()).toBe('Foo');\n            expect($rows.eq(1).text().strip()).toBe('Bar');\n        });\n    });\n});\n"]}