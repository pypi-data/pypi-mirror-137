{"version":3,"sources":["conditionSetViewTests.es6.js"],"names":[],"mappings":"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","file":"conditionSetViewTests.js","sourcesContent":["suite('djblets/forms/views/ConditionValueFormFieldView', function() {\n    function makeValueField(html) {\n        return {\n            model: {\n                className: 'Djblets.Forms.ConditionValueField',\n                data: {\n                    fieldHTML: html\n                }\n            },\n            view: {\n                className: 'Djblets.Forms.ConditionValueFormFieldView'\n            }\n        };\n    }\n\n    function setupConditionSetView(conditionsData) {\n        const conditionsTemplate = _.template([\n            '<div class=\"conditions-field\">\\n',\n            ' <input type=\"hidden\" name=\"my_conditions_last_id\" />\\n',\n            ' <div class=\"conditions-field-mode\"></div>\\n',\n            ' <div class=\"conditions-field-rows-container\">\\n',\n            '  <ul class=\"conditions-field-rows\"></ul>\\n',\n            '  <a href=\"#\" class=\"conditions-field-add-condition\"></a>\\n',\n            ' </div>\\n',\n            '</div>'\n        ].join(''));\n\n        const conditionSetView = new Djblets.Forms.ConditionSetView({\n            el: $(conditionsTemplate()),\n            model: new Djblets.Forms.ConditionSet({\n                fieldName: 'my_conditions',\n                choicesData: [\n                    {\n                        id: 'my-choice-1',\n                        name: 'My Choice 1',\n                        valueField: makeValueField('<input type=\"text\" />'),\n                        operators: [\n                            {\n                                id: 'my-op-1',\n                                name: 'My Op 1',\n                                useValue: true\n                            },\n                            {\n                                id: 'my-op-2',\n                                name: 'My Op 2',\n                                useValue: true,\n                                valueField: makeValueField('<input type=\"number\" />')\n                            }\n                        ]\n                    },\n                    {\n                        id: 'my-choice-2',\n                        name: 'My Choice 2',\n                        valueField: makeValueField('<input type=\"email\" />'),\n                        operators: [\n                            {\n                                id: 'my-op-3',\n                                name: 'My Op 3',\n                                useValue: true\n                            },\n                            {\n                                id: 'my-op-4',\n                                name: 'My Op 4',\n                                useValue: true\n                            }\n                        ]\n                    }\n                ],\n                conditionsData: conditionsData\n            }, {\n                parse: true\n            })\n        });\n\n        conditionSetView.render();\n\n        return conditionSetView;\n    }\n\n    describe('Rendering', function() {\n        it('Loaded rows', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                },\n                {\n                    choiceID: 'my-choice-2',\n                    operatorID: 'my-op-4',\n                    value: 42,\n                    valid: true\n                }\n            ]);\n\n            const $rows = conditionSetView.$('.conditions-field-row');\n            expect($rows.length).toBe(2);\n\n            const $lastID =\n                conditionSetView.$('input[name=my_conditions_last_id]');\n            expect($lastID.val()).toBe('1');\n\n            /* Check the first row. */\n            let $row = $rows.eq(0);\n            let $choice = $row.find('.conditions-field-choice');\n            expect($choice.html()).toBe([\n                '<select name=\"my_conditions_choice[0]\">',\n                '<option value=\"my-choice-1\">My Choice 1</option>',\n                '<option value=\"my-choice-2\">My Choice 2</option>',\n                '</select>'\n            ].join(''));\n            expect($choice.children('select').val()).toBe('my-choice-1');\n\n            let $operator = $row.find('.conditions-field-operator');\n            expect($operator.html()).toBe([\n                '<select name=\"my_conditions_operator[0]\">',\n                '<option value=\"my-op-1\">My Op 1</option>',\n                '<option value=\"my-op-2\">My Op 2</option>',\n                '</select>'\n            ].join(''));\n            expect($operator.children('select').val()).toBe('my-op-1');\n\n            let $value = $row.find('.conditions-field-value');\n            let $input = $value.find('input');\n            expect($input.parent().prop('tagName')).toBe('SPAN');\n            expect($input.attr('type')).toBe('text');\n            expect($input.attr('name')).toBe('my_conditions_value[0]');\n            expect($input.val()).toBe('<test>');\n\n            /* Check the second row. */\n            $row = $rows.eq(1);\n            $choice = $row.find('.conditions-field-choice');\n            expect($choice.html()).toBe([\n                '<select name=\"my_conditions_choice[1]\">',\n                '<option value=\"my-choice-1\">My Choice 1</option>',\n                '<option value=\"my-choice-2\">My Choice 2</option>',\n                '</select>'\n            ].join(''));\n            expect($choice.children('select').val()).toBe('my-choice-2');\n\n            $operator = $row.find('.conditions-field-operator');\n            expect($operator.html()).toBe([\n                '<select name=\"my_conditions_operator[1]\">',\n                '<option value=\"my-op-3\">My Op 3</option>',\n                '<option value=\"my-op-4\">My Op 4</option>',\n                '</select>'\n            ].join(''));\n            expect($operator.children('select').val()).toBe('my-op-4');\n\n            $value = $row.find('.conditions-field-value');\n            $input = $value.find('input');\n            expect($input.parent().prop('tagName')).toBe('SPAN');\n            expect($input.attr('type')).toBe('email');\n            expect($input.attr('name')).toBe('my_conditions_value[1]');\n            expect($input.val()).toBe('42');\n        });\n\n        it('Loaded rows with errors', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    error: 'This is an <error>.',\n                    valid: true\n                }\n            ]);\n\n            const $rows = conditionSetView.$('.conditions-field-row');\n            expect($rows.length).toBe(1);\n\n            const $lastID =\n                conditionSetView.$('input[name=my_conditions_last_id]');\n            expect($lastID.val()).toBe('0');\n\n            const $row = $rows.eq(0);\n            const $error = $row.find('.error-list li');\n            expect($error.length).toBe(1);\n            expect($error.html()).toBe('This is an &lt;error&gt;.');\n        });\n    });\n\n    describe('Actions', function() {\n        it('Add a new condition', function() {\n            const conditionSetView = setupConditionSetView();\n\n            let $rows = conditionSetView.$('.conditions-field-row');\n            expect($rows.length).toBe(0);\n\n            const $lastID =\n                conditionSetView.$('input[name=my_conditions_last_id]');\n            expect($lastID.val()).toBe('');\n\n            spyOn(conditionSetView.model, 'addNewCondition').and.callThrough();\n            conditionSetView.$('.conditions-field-add-condition').click();\n            expect(conditionSetView.model.addNewCondition).toHaveBeenCalled();\n\n            $rows = conditionSetView.$('.conditions-field-row');\n            expect($rows.length).toBe(1);\n            expect($lastID.val()).toBe('0');\n\n            const $row = $rows.eq(0);\n            const $choice = $row.find('.conditions-field-choice');\n            expect($choice.html()).toBe([\n                '<select name=\"my_conditions_choice[0]\">',\n                '<option value=\"my-choice-1\">My Choice 1</option>',\n                '<option value=\"my-choice-2\">My Choice 2</option>',\n                '</select>'\n            ].join(''));\n            expect($choice.children('select').val()).toBe('my-choice-1');\n\n            const $operator = $row.find('.conditions-field-operator');\n            expect($operator.html()).toBe([\n                '<select name=\"my_conditions_operator[0]\">',\n                '<option value=\"my-op-1\">My Op 1</option>',\n                '<option value=\"my-op-2\">My Op 2</option>',\n                '</select>'\n            ].join(''));\n            expect($operator.children('select').val()).toBe('my-op-1');\n\n            const $value = $row.find('.conditions-field-value');\n            const $input = $value.find('input');\n            expect($input.parent().prop('tagName')).toBe('SPAN');\n            expect($input.attr('type')).toBe('text');\n            expect($input.attr('name')).toBe('my_conditions_value[0]');\n            expect($input.val()).toBe('');\n        });\n\n        it('Delete a condition', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                }\n            ]);\n\n            let $rows = conditionSetView.$('.conditions-field-row');\n            expect(conditionSetView.model.conditions.length).toBe(1);\n            expect($rows.length).toBe(1);\n\n            const $lastID =\n                conditionSetView.$('input[name=my_conditions_last_id]');\n            expect($lastID.val()).toBe('0');\n\n            const condition = conditionSetView.model.conditions.at(0);\n\n            spyOn(condition, 'destroy').and.callThrough();\n            $rows.eq(0).find('.conditions-field-row-delete').click();\n            expect(condition.destroy).toHaveBeenCalled();\n\n            $rows = conditionSetView.$('.conditions-field-row');\n            expect(conditionSetView.model.conditions.length).toBe(0);\n            expect($rows.length).toBe(0);\n\n            /*\n             * The last ID remains the same during deletions. It's not a row\n             * counter.\n             */\n            expect($lastID.val()).toBe('0');\n        });\n\n        it('Changing a choice updates model', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                }\n            ]);\n\n            const $rows = conditionSetView.$('.conditions-field-row');\n            const condition = conditionSetView.model.conditions.at(0);\n\n            $rows.eq(0).find('.conditions-field-choice select')\n                .val('my-choice-2')\n                .trigger('change');\n\n            expect(condition.get('choice').id).toBe('my-choice-2');\n        });\n\n        it('Changing an operator updates model', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                }\n            ]);\n\n            const $rows = conditionSetView.$('.conditions-field-row');\n            const condition = conditionSetView.model.conditions.at(0);\n\n            $rows.eq(0).find('.conditions-field-operator select')\n                .val('my-op-2')\n                .trigger('change');\n\n            expect(condition.get('operator').id).toBe('my-op-2');\n        });\n    });\n\n    describe('Model events', function() {\n        let conditionSetView,\n            conditionSet,\n            condition,\n            $row,\n            $choice,\n            $operator,\n            $valueWrapper;\n\n        beforeEach(function() {\n            conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                }\n            ]);\n\n            conditionSet = conditionSetView.model;\n\n            condition = conditionSet.conditions.at(0);\n            $row = conditionSetView.$('.conditions-field-row').eq(0);\n            $choice = $row.find('.conditions-field-choice select');\n            $operator = $row.find('.conditions-field-operator select');\n            $valueWrapper = $row.find('.conditions-field-value');\n\n            const $input = $valueWrapper.find('input');\n            expect($input.attr('type')).toBe('text');\n            expect($input.val()).toBe('<test>');\n        });\n\n        describe('Choice changed', function() {\n            it('Updates UI state', function() {\n                condition.set('choice',\n                              conditionSet.choices.get('my-choice-2'));\n\n                expect($choice.val()).toBe('my-choice-2');\n                expect($operator.val()).toBe('my-op-3');\n\n                const $input = $valueWrapper.find('input');\n                expect($input.attr('type')).toBe('email');\n                expect($input.val()).toBe('');\n            });\n        });\n\n        describe('Operator changed', function() {\n            it('Updates UI state', function() {\n                const choice = conditionSet.choices.get('my-choice-1');\n                condition.set('operator', choice.operators.get('my-op-2'));\n\n                expect($choice.val()).toBe('my-choice-1');\n                expect($operator.val()).toBe('my-op-2');\n\n                const $input = $valueWrapper.find('input');\n                expect($input.attr('type')).toBe('number');\n                expect($input.val()).toBe('');\n            });\n\n            it('Retains value if valueField remains', function() {\n                const choice = conditionSet.choices.get('my-choice-2');\n\n                /* Set the initial conditions. */\n                condition.set('choice', choice);\n                $valueWrapper.find('input').val('42');\n                expect($operator.val()).toBe('my-op-3');\n\n                /* Trigger the operator change. */\n                condition.set('operator', choice.operators.get('my-op-4'));\n\n                expect($valueWrapper.find('input').val()).toBe('42');\n            });\n        });\n\n        describe('Value changed', function() {\n            it('Updated UI state', function() {\n                condition.set('value', 'new-value');\n\n                expect($valueWrapper.find('input').val()).toBe('new-value');\n            });\n        });\n    });\n});\n"]}