{"version":3,"sources":["fileUploadSettingsFormView.es6.js"],"names":[],"mappings":"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","file":"fileUploadSettingsFormView.js","sourcesContent":["(function() {\n\n\nconst allowedMimeTypes = [\n    'image/png', 'image/jpeg', 'image/gif'\n];\n\n\nconst ParentView = Djblets.Avatars.ServiceSettingsFormView;\n\n\n/**\n * A file upload avatar settings form.\n *\n * This form provides a preview of the uploaded avatar.\n */\nDjblets.Avatars.FileUploadSettingsFormView = ParentView.extend({\n    events: {\n        'change #id_file-upload-avatar_upload': '_onFileChanged',\n        'click .avatar-file-upload-browse': '_onBrowseClicked',\n        'click .avatar-preview': '_onBrowseClicked',\n        'dragenter .avatar-file-upload-config': '_onDragEnter',\n        'dragover .avatar-file-upload-config': '_onDragOver',\n        'dragleave .avatar-file-upload-config': '_onDragLeave',\n        'drop .avatar-file-upload-config': '_onDrop',\n    },\n\n    /**\n     * Validate the form.\n     *\n     * If a file is selected, ensure it is has the correct MIME type.\n     */\n    validate() {\n        const file = this._$fileInput[0].files[0];\n\n        if (!file) {\n            alert(_`You must choose a file.`);\n            return false;\n        }\n\n        if (!allowedMimeTypes.some(el => (el === file.type))) {\n            alert(_`\n                This wasn't a valid image file format. Please provide a PNG,\n                JPEG, or GIF file.\n            `);\n            return false;\n        }\n\n        return true;\n    },\n\n    /**\n     * Render the form.\n     *\n     * Returns:\n     *     Djblets.Avatars.FileUploadSettingsFormView:\n     *     This view (for chaining).\n     */\n    render() {\n        this._$box = this.$('.avatar-file-upload-config');\n        this._$preview = this.$('.avatar-preview');\n        this._$fileInput = this.$('#id_file-upload-avatar_upload');\n\n        return this;\n    },\n\n    /**\n     * Handler for a click event on the \"browse\" instruction text.\n     *\n     * This will trigger opening the hidden file input.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The click event.\n     */\n    _onBrowseClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        /*\n         * Clicking on the file input itself is not reliable. There are ways\n         * to make it work, but the browser actively avoids letting you do it if\n         * it seems to be hidden. However, it works just fine universally to\n         * click on the label.\n         */\n        this.$('#avatar-file-upload-browse-label').click();\n    },\n\n    /**\n     * Handler for a drag enter event.\n     *\n     * If the configuration box is being hovered over, this will enable the\n     * hover state, giving users an indication that they can drop the image\n     * there.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The drag over event.\n     */\n    _onDragEnter(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.target === this._$box[0]) {\n            this._$box\n                .width(this._$box.width())\n                .addClass('drag-hover');\n        }\n    },\n\n    /**\n     * Handler for a drag over event.\n     *\n     * If the configuration box is being hovered over, this will set the drop\n     * effect.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The drag over event.\n     */\n    _onDragOver(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.target === this._$box[0]) {\n            const dt = e.originalEvent.dataTransfer;\n\n            if (dt) {\n                dt.dropEffect = 'copy';\n            }\n        }\n    },\n\n    /**\n     * Handler for a drag leave event.\n     *\n     * If the configuration box is being left, this will remove the hover state\n     * and reset the drop effect.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The drag leave event.\n     */\n    _onDragLeave(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (e.target === this._$box[0]) {\n            this._$box\n                .removeClass('drag-hover')\n                .width('auto');\n\n            const dt = e.originalEvent.dataTransfer;\n\n            if (dt) {\n                dt.dropEffect = 'none';\n            }\n        }\n    },\n\n    /**\n     * Handler for a drop operation.\n     *\n     * This will remove the hover state and attempt to set the list of files\n     * on the file input. If this fails (which will be the case on some browsers\n     * with older behavior), the user will receive an alert telling them it\n     * failed and to try browsing instead.\n     *\n     * If all goes well, the avatar will be ready for upload and the preview\n     * image will be updated.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The drop event.\n     */\n    _onDrop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._$box.removeClass('drag-hover');\n\n        const dt = e.originalEvent.dataTransfer;\n        const files = dt && dt.files;\n\n        if (!files || files.length === 0) {\n            return;\n        }\n\n        if (files.length > 1) {\n            alert(_`\n                You can only set one file as your avatar. Please drag and\n                drop a single file.\n            `);\n            return;\n        }\n\n        const fileType = files[0].type;\n\n        if (fileType !== 'image/png' && fileType !== 'image/jpeg' &&\n            fileType !== 'image/gif') {\n            alert(_`\n                This doesn't appear to be a compatible image file for avatars.\n                Please upload a PNG, JPEG, or GIF file.\n            `);\n            return;\n        }\n\n        try {\n            this._$fileInput[0].files = files;\n        } catch (exc) {\n            /*\n             * While most modern browsers allow setting the `files` property of\n             * an input field to the rest of a drag-and-drop operation, not all\n             * do (I'm looking at you, IE/Edge). Older browsers will also\n             * complain. So instead of outright failing, tell the user that this\n             * won't work and suggest a workaround.\n             */\n            alert(_`\n                Looks like dragging to upload a file isn't going to work with\n                your browser. Try browsing for a file instead.\n            `);\n            return;\n        }\n\n        this._setAvatarFromFile(files[0]);\n    },\n\n    /**\n     * Handler for when the file input has changed.\n     *\n     * This will update the preview image.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The change event.\n     */\n    _onFileChanged(e) {\n        const file = e.target.files[0];\n\n        if (file) {\n            this._setAvatarFromFile(file);\n        }\n    },\n\n    /**\n     * Set the avatar from the provided file upload.\n     *\n     * Args:\n     *     file (File):\n     *         The file that was uploaded.\n     */\n    _setAvatarFromFile(file) {\n        const reader = new FileReader();\n\n        reader.addEventListener('load', () => {\n            this._$preview\n                .empty()\n                .removeClass('avatar-preview-unset')\n                .append($('<img />').attr({\n                     src: reader.result,\n                     alt: _`Your new avatar`,\n                 }));\n        });\n\n        reader.readAsDataURL(file);\n    },\n});\n\n\n})();\n"]}