{"version":3,"sources":["listItemViewTests.es6.js"],"names":[],"mappings":"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","file":"listItemViewTests.js","sourcesContent":["suite('djblets/configForms/views/ListItemView', function() {\n    describe('Rendering', function() {\n        describe('General item display', function() {\n            it('With editURL', function() {\n                const item = new Djblets.Config.ListItem({\n                    editURL: 'http://example.com/',\n                    text: 'Label',\n                });\n                const itemView = new Djblets.Config.ListItemView({\n                    model: item,\n                });\n\n                itemView.render();\n                expect(itemView.$el.html().strip()).toBe([\n                    '<span class=\"djblets-c-config-forms-list__item-actions\">',\n                    '</span>\\n',\n                    '<a href=\"http://example.com/\">Label</a>',\n                ].join(''));\n            });\n\n            it('Without editURL', function() {\n                const item = new Djblets.Config.ListItem({\n                    text: 'Label',\n                });\n                const itemView = new Djblets.Config.ListItemView({\n                    model: item,\n                });\n\n                itemView.render();\n                expect(itemView.$el.html().strip()).toBe([\n                    '<span class=\"djblets-c-config-forms-list__item-actions\">',\n                    '</span>\\n',\n                    'Label',\n                ].join(''));\n            });\n        });\n\n        describe('Item states', function() {\n            const CustomItemView = Djblets.Config.ListItemView.extend({\n                template: _.template(dedent`\n                    <div><%- text %></div>\n                    <div class=\"djblets-c-config-forms-list__item-state\">\n                    </div>\n                `),\n            });\n\n            it('Initial render', function() {\n                const item = new Djblets.Config.ListItem({\n                    itemState: 'enabled',\n                });\n                const itemView = new CustomItemView({\n                    model: item,\n                });\n\n                itemView.render();\n\n                expect(itemView.el).toHaveClass('-is-enabled');\n\n                const $stateText =\n                    itemView.$('.djblets-c-config-forms-list__item-state');\n                expect($stateText.text()).toBe('Enabled');\n            });\n\n            it('When changed', function() {\n                const item = new Djblets.Config.ListItem({\n                    itemState: 'enabled',\n                });\n                const itemView = new CustomItemView({\n                    model: item,\n                });\n\n                itemView.render();\n\n                item.set('itemState', 'disabled');\n\n                expect(itemView.el).toHaveClass('-is-disabled');\n                expect(itemView.el).not.toHaveClass('-is-enabled');\n\n                const $stateText =\n                    itemView.$('.djblets-c-config-forms-list__item-state');\n                expect($stateText.text()).toBe('Disabled');\n            });\n        });\n\n        describe('Actions', function() {\n            it('Checkboxes', function() {\n                const item = new Djblets.Config.ListItem({\n                    text: 'Label',\n                    checkboxAttr: false,\n                    actions: [\n                        {\n                            id: 'mycheckbox',\n                            type: 'checkbox',\n                            label: 'Checkbox',\n                            propName: 'checkboxAttr',\n                        },\n                    ],\n                });\n                const itemView = new Djblets.Config.ListItemView({\n                    model: item,\n                });\n\n                itemView.render();\n\n                expect(itemView.$('input[type=checkbox]').length).toBe(1);\n                expect(itemView.$('label').length).toBe(1);\n            });\n\n            describe('Buttons', function() {\n                it('Simple', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mybutton',\n                                label: 'Button',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n                    expect($button.length).toBe(1);\n                    const buttonEl = $button[0];\n\n                    expect($button.text()).toBe('Button');\n                    expect(buttonEl)\n                        .toHaveClass('config-forms-list-action-mybutton');\n                    expect(buttonEl).not.toHaveClass('rb-icon');\n                    expect(buttonEl).not.toHaveClass('-is-danger');\n                    expect(buttonEl).not.toHaveClass('-is-primary');\n                });\n\n                it('Danger', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mybutton',\n                                label: 'Button',\n                                danger: true,\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n                    expect($button.length).toBe(1);\n                    const buttonEl = $button[0];\n\n                    expect($button.text()).toBe('Button');\n                    expect(buttonEl)\n                        .toHaveClass('config-forms-list-action-mybutton');\n                    expect(buttonEl).not.toHaveClass('rb-icon');\n                    expect(buttonEl).not.toHaveClass('-is-primary');\n                    expect(buttonEl).toHaveClass('-is-danger');\n                });\n\n                it('Primary', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mybutton',\n                                label: 'Button',\n                                primary: true,\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n                    expect($button.length).toBe(1);\n                    const buttonEl = $button[0];\n\n                    expect($button.text()).toBe('Button');\n                    expect(buttonEl)\n                        .toHaveClass('config-forms-list-action-mybutton');\n                    expect(buttonEl).not.toHaveClass('rb-icon');\n                    expect(buttonEl).not.toHaveClass('-is-danger');\n                    expect(buttonEl).toHaveClass('-is-primary');\n                });\n\n                it('Icon names', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mybutton',\n                                label: 'Button',\n                                danger: false,\n                                iconName: 'foo',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n                    expect($button.length).toBe(1);\n                    const buttonEl = $button[0];\n\n                    expect($button.text()).toBe('Button');\n                    expect(buttonEl)\n                        .toHaveClass('config-forms-list-action-mybutton');\n                    expect(buttonEl).not.toHaveClass('-is-danger');\n                    expect(buttonEl).not.toHaveClass('-is-primary');\n\n                    const $span = $button.find('span');\n                    expect($span.length).toBe(1);\n                    expect($span.hasClass('djblets-icon')).toBe(true);\n                    expect($span.hasClass('djblets-icon-foo')).toBe(true);\n                });\n            });\n\n            describe('Menus', function() {\n                let item;\n                let itemView;\n\n                beforeEach(function() {\n                    item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mymenu',\n                                label: 'Menu',\n                                children: [\n                                    {\n                                        id: 'mymenuitem',\n                                        label: 'My menu item',\n                                    },\n                                ],\n                            },\n                        ],\n                    });\n\n                    itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n                });\n\n                it('Initial display', function() {\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n\n                    expect($button.length).toBe(1);\n                    expect($button.text()).toBe('Menu ▾');\n                });\n\n                it('Opening', function() {\n                    /* Prevent deferring. */\n                    spyOn(_, 'defer').and.callFake(function(cb) {\n                        cb();\n                    });\n\n                    spyOn(itemView, 'trigger');\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mymenu');\n                    $action.click();\n\n                    const $menu =\n                        itemView.$('.djblets-c-config-forms-popup-menu');\n                    expect($menu.length).toBe(1);\n                    expect(itemView.trigger.calls.mostRecent().args[0]).toBe(\n                        'actionMenuPopUp');\n                });\n\n                it('Closing', function() {\n                    /* Prevent deferring. */\n                    spyOn(_, 'defer').and.callFake(cb => cb());\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mymenu');\n                    $action.click();\n\n                    spyOn(itemView, 'trigger');\n                    $(document.body).click();\n\n                    expect(itemView.trigger.calls.mostRecent().args[0]).toBe(\n                        'actionMenuPopDown');\n\n                    const $menu = itemView.$('.action-menu');\n                    expect($menu.length).toBe(0);\n                });\n            });\n        });\n\n        describe('Action properties', function() {\n            describe('enabledPropName', function() {\n                it('value == undefined', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mycheckbox',\n                                type: 'checkbox',\n                                label: 'Checkbox',\n                                enabledPropName: 'isEnabled',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mycheckbox');\n\n                    expect($action.prop('disabled')).toBe(true);\n                });\n\n                it('value == true', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        isEnabled: true,\n                        actions: [\n                            {\n                                id: 'mycheckbox',\n                                type: 'checkbox',\n                                label: 'Checkbox',\n                                enabledPropName: 'isEnabled',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mycheckbox');\n\n                    expect($action.prop('disabled')).toBe(false);\n                });\n\n                it('value == false', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        isEnabled: false,\n                        actions: [\n                            {\n                                id: 'mycheckbox',\n                                type: 'checkbox',\n                                label: 'Checkbox',\n                                enabledPropName: 'isEnabled',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item\n                    });\n\n                    itemView.render();\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mycheckbox');\n\n                    expect($action.prop('disabled')).toBe(true);\n                });\n\n                describe('with enabledPropInverse == true', function() {\n                    it('value == undefined', function() {\n                        const item = new Djblets.Config.ListItem({\n                            text: 'Label',\n                            actions: [\n                                {\n                                    id: 'mycheckbox',\n                                    type: 'checkbox',\n                                    label: 'Checkbox',\n                                    enabledPropName: 'isDisabled',\n                                    enabledPropInverse: true,\n                                },\n                            ],\n                        });\n                        const itemView = new Djblets.Config.ListItemView({\n                            model: item\n                        });\n\n                        itemView.render();\n\n                        const $action = itemView\n                            .$('.config-forms-list-action-mycheckbox');\n\n                        expect($action.prop('disabled')).toBe(false);\n                    });\n\n                    it('value == true', function() {\n                        const item = new Djblets.Config.ListItem({\n                            text: 'Label',\n                            isDisabled: true,\n                            actions: [\n                                {\n                                    id: 'mycheckbox',\n                                    type: 'checkbox',\n                                    label: 'Checkbox',\n                                    enabledPropName: 'isDisabled',\n                                    enabledPropInverse: true,\n                                },\n                            ],\n                        });\n                        const itemView = new Djblets.Config.ListItemView({\n                            model: item,\n                        });\n\n                        itemView.render();\n\n                        const $action = itemView\n                            .$('.config-forms-list-action-mycheckbox');\n\n                        expect($action.prop('disabled')).toBe(true);\n                    });\n\n                    it('value == false', function() {\n                        var item = new Djblets.Config.ListItem({\n                                text: 'Label',\n                                isDisabled: false,\n                                actions: [\n                                    {\n                                        id: 'mycheckbox',\n                                        type: 'checkbox',\n                                        label: 'Checkbox',\n                                        enabledPropName: 'isDisabled',\n                                        enabledPropInverse: true\n                                    }\n                                ]\n                            }),\n                            itemView = new Djblets.Config.ListItemView({\n                                model: item\n                            }),\n                            $action;\n\n                        itemView.render();\n\n                        $action =\n                            itemView.$('.config-forms-list-action-mycheckbox');\n\n                        expect($action.prop('disabled')).toBe(false);\n                    });\n                });\n            });\n        });\n    });\n\n    describe('Action handlers', function() {\n        it('Buttons', function() {\n            var item = new Djblets.Config.ListItem({\n                text: 'Label',\n                actions: [\n                    {\n                        id: 'mybutton',\n                        label: 'Button',\n                    },\n                ],\n            });\n            const itemView = new Djblets.Config.ListItemView({\n                model: item\n            });\n\n            itemView.actionHandlers = {\n                mybutton: '_onMyButtonClick'\n            };\n            itemView._onMyButtonClick = () => {};\n            spyOn(itemView, '_onMyButtonClick');\n\n            itemView.render();\n\n            const $button = itemView.$(\n                'button.djblets-c-config-forms-list__item-action');\n            expect($button.length).toBe(1);\n            $button.click();\n\n            expect(itemView._onMyButtonClick).toHaveBeenCalled();\n        });\n\n        it('Checkboxes', function() {\n            const item = new Djblets.Config.ListItem({\n                text: 'Label',\n                checkboxAttr: false,\n                actions: [\n                    {\n                        id: 'mycheckbox',\n                        type: 'checkbox',\n                        label: 'Checkbox',\n                        propName: 'checkboxAttr',\n                    },\n                ],\n            });\n            const itemView = new Djblets.Config.ListItemView({\n                model: item,\n            });\n\n            itemView.actionHandlers = {\n                mybutton: '_onMyButtonClick',\n            };\n            itemView._onMyButtonClick = () => {};\n            spyOn(itemView, '_onMyButtonClick');\n\n            itemView.render();\n\n            const $checkbox = itemView.$('input[type=checkbox]');\n            expect($checkbox.length).toBe(1);\n            expect($checkbox.prop('checked')).toBe(false);\n            $checkbox\n                .prop('checked', true)\n                .triggerHandler('change');\n\n            expect(item.get('checkboxAttr')).toBe(true);\n        });\n    });\n});\n"]}