{"version":3,"sources":["listItemView.es6.js"],"names":[],"mappings":"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","file":"listItemView.js","sourcesContent":["/**\n * Display a list item for a config page.\n *\n * The list item will show information on the item and any actions that can\n * be invoked.\n *\n * By default, this will show the text from the ListItem model, linking it\n * if the model has an editURL attribute. This can be customized by subclasses\n * by overriding `template`.\n */\nDjblets.Config.ListItemView = Backbone.View.extend({\n    tagName: 'li',\n    className: 'djblets-c-config-forms-list__item',\n    iconBaseClassName: 'djblets-icon',\n\n    /**\n     * A mapping of item states to CSS classes.\n     *\n     * Subclasses can extend this to provide custom CSS classes, or support\n     * custom item states.\n     */\n    itemStateClasses: {\n        disabled: '-is-disabled',\n        enabled: '-is-enabled',\n        error: '-has-error',\n    },\n\n    actionHandlers: {},\n\n    template: _.template(dedent`\n        <% if (editURL) { %>\n        <a href=\"<%- editURL %>\"><%- text %></a>\n        <% } else { %>\n        <%- text %>\n        <% } %>\n    `),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.listenTo(this.model, 'actionsChanged', this.render);\n        this.listenTo(this.model, 'request', this.showSpinner);\n        this.listenTo(this.model, 'sync', this.hideSpinner);\n        this.listenTo(this.model, 'destroy', this.remove);\n\n        this.$spinnerParent = null;\n        this.$spinner = null;\n    },\n\n    /**\n     * Render the view.\n     *\n     * This will be called every time the list of actions change for\n     * the item.\n     *\n     * Returns:\n     *     Djblets.Config.ListItemView:\n     *     This view.\n     */\n    render() {\n        const model = this.model;\n\n        this.$el\n            .empty()\n            .append(this.template(_.defaults(\n                model.attributes,\n                this.getRenderContext()\n            )));\n\n        this._$itemState =\n            this.$('.djblets-c-config-forms-list__item-state');\n\n        this.listenTo(model, 'change:itemState', this._onItemStateChanged);\n        this._onItemStateChanged();\n\n        this.addActions(this.getActionsParent());\n\n        return this;\n    },\n\n    /**\n     * Return additional render context.\n     *\n     * By default this returns an empty object. Subclasses can use this to\n     * provide additional values to :js:attr:`template` when it is rendered.\n     *\n     * Returns:\n     *     object:\n     *     Additional rendering context for the template.\n     */\n    getRenderContext() {\n        return {};\n    },\n\n    /**\n     * Remove the item.\n     *\n     * This will fade out the item, and then remove it from view.\n     */\n    remove() {\n        this.$el.fadeOut('normal',\n                         () => Backbone.View.prototype.remove.call(this));\n    },\n\n    /**\n     * Return the container for the actions.\n     *\n     * This defaults to being this element, but it can be overridden to\n     * return a more specific element.\n     *\n     * Returns:\n     *     jQuery:\n     *     The container for the actions.\n     */\n    getActionsParent() {\n        return this.$el;\n    },\n\n    /**\n     * Display a spinner on the item.\n     *\n     * This can be used to show that the item is being loaded from the\n     * server.\n     */\n    showSpinner() {\n        if (this.$spinner) {\n            return;\n        }\n\n        this.$el.attr('aria-busy', 'true');\n        this.$spinner = $('<span>')\n            .addClass('djblets-o-spinner')\n            .attr('aria-hidden', 'true')\n            .prependTo(this.$spinnerParent)\n            .hide()\n            .css('visibility', 'visible')\n            .fadeIn();\n    },\n\n    /**\n     * Hide the currently visible spinner.\n     */\n    hideSpinner() {\n        if (!this.$spinner) {\n            return;\n        }\n\n        /*\n         * The slow fadeout does two things:\n         *\n         * 1) It prevents the spinner from disappearing too quickly\n         *    (in combination with the fadeIn above), in case the operation\n         *    is really fast, giving some feedback that something actually\n         *    happened.\n         *\n         * 2) By fading out, it doesn't look like it just simply stops.\n         *    Helps provide a sense of completion.\n         */\n        this.$spinner.fadeOut('slow', () => {\n            this.$spinner.remove();\n            this.$spinner = null;\n        });\n\n        this.$el.removeAttr('aria-busy');\n    },\n\n    /**\n     * Add all registered actions to the view.\n     *\n     * Args:\n     *     $parentEl (jQuery):\n     *         The parent element to add the actions to.\n     */\n    addActions($parentEl) {\n        const $actions = $('<span>')\n            .addClass('djblets-c-config-forms-list__item-actions');\n\n        this.model.actions.forEach(action => {\n            const $action = this._buildActionEl(action)\n                .appendTo($actions);\n\n            if (action.children) {\n                if (action.label) {\n                    $action.append(' &#9662;');\n                }\n\n                /*\n                 * Show the dropdown after we let this event propagate.\n                 */\n                $action.click(() => _.defer(\n                    () => this._showActionDropdown(action, $action)\n                ));\n            }\n        });\n\n        this.$spinnerParent = $actions;\n\n        $actions.prependTo($parentEl);\n    },\n\n    /**\n     * Show a dropdown for a menu action.\n     *\n     * Args:\n     *     action (object):\n     *         The action to show the dropdown for. See\n     *         :js:class:`Djblets.Config.ListItem`. for a list of attributes.\n     *\n     *     $action (jQuery):\n     *         The element that represents the action.\n     */\n    _showActionDropdown(action, $action) {\n        const actionPos = $action.position();\n        const $menu = $('<div/>')\n            .css({\n                minWidth: $action.outerWidth(),\n                position: 'absolute',\n            })\n            .addClass('djblets-c-config-forms-popup-menu')\n            .click(e => e.stopPropagation());\n        const $items = $('<ul/>')\n            .addClass('djblets-c-config-forms-popup-menu__items')\n            .appendTo($menu);\n        const actionLeft = actionPos.left + $action.getExtents('m', 'l');\n\n        action.children.forEach(\n            childAction => $('<li/>')\n                .addClass('djblets-c-config-forms-popup-menu__item ' +\n                          `config-forms-list-action-row-${childAction.id}`)\n                .append(this._buildActionEl(childAction))\n                .appendTo($items)\n        );\n\n        this.trigger('actionMenuPopUp', {\n            action: action,\n            $action: $action,\n            $menu: $menu,\n        });\n\n        $menu.appendTo($action.parent());\n\n        const winWidth = $(window).width();\n        const paneWidth = $menu.width();\n\n        $menu.move(($action.offset().left + paneWidth > winWidth\n                    ? actionLeft + $action.innerWidth() - paneWidth\n                    : actionLeft),\n                   actionPos.top + $action.outerHeight(),\n                   'absolute');\n\n        /* Any click outside this dropdown should close it. */\n        $(document).one('click', () => {\n            this.trigger('actionMenuPopDown', {\n                action: action,\n                $action: $action,\n                $menu: $menu,\n            });\n\n            $menu.remove();\n        });\n    },\n\n    /**\n     * Build the element for an action.\n     *\n     * If the action's type is ``'checkbox'``, a checkbox will be shown.\n     * Otherwise, the action will be shown as a button.\n     *\n     * Args:\n     *     action (object):\n     *         The action to show the dropdown for. See\n     *         :js:class:`Djblets.Config.ListItem` for a list of attributes.\n     */\n    _buildActionEl(action) {\n        const enabled = (action.enabled !== false);\n        const actionHandlerName = (enabled\n                                   ? this.actionHandlers[action.id]\n                                   : null);\n        const isCheckbox = (action.type === 'checkbox');\n        const isRadio = (action.type === 'radio');\n\n        let $action;\n        let $result;\n\n        if (isCheckbox || isRadio) {\n            const inputID = _.uniqueId('action_' + action.type);\n            $action = $('<input/>')\n                .attr({\n                    name: action.name,\n                    type: action.type,\n                    id: inputID\n                });\n            const $label = $('<label>')\n                .attr('for', inputID)\n                .text(action.label);\n\n            if (action.id) {\n                $label.addClass(`config-forms-list-action-label-${action.id}`);\n            }\n\n            $result = $('<span/>')\n                .append($action)\n                .append($label);\n\n            if (action.propName) {\n                if (isCheckbox) {\n                    $action.bindProperty('checked', this.model,\n                                         action.propName);\n                } else if (isRadio) {\n                    $action.bindProperty(\n                        'checked', this.model, action.propName, {\n                            radioValue: action.radioValue\n                        }\n                    );\n                }\n            }\n\n            if (action.enabledPropName) {\n                $action.bindProperty(\n                    'disabled', this.model, action.enabledPropName,\n                    {\n                        inverse: (action.enabledPropInverse !== true)\n                    });\n            }\n\n            if (actionHandlerName) {\n                const actionHandler = _.debounce(\n                    _.bind(this[actionHandlerName], this),\n                    50,\n                    true\n                );\n\n                $action.change(actionHandler);\n\n                if (isRadio && action.dispatchOnClick) {\n                    $action.click(actionHandler);\n                }\n            }\n        } else {\n            if (action.url) {\n                $action = $('<a class=\"btn\" role=\"button\">')\n                    .attr('href', action.url);\n            } else {\n                $action = $('<button type=\"button\">');\n            }\n\n            $result = $action;\n\n            if (action.label) {\n                $action.text(action.label);\n            }\n\n            if (action.ariaLabel) {\n                $action.attr('aria-label', action.ariaLabel);\n            }\n\n            if (action.iconName) {\n                $action.prepend($('<span>')\n                    .addClass(this.iconBaseClassName)\n                    .addClass(`${this.iconBaseClassName}-${action.iconName}`));\n            }\n\n            if (actionHandlerName) {\n                $action.click(evt => {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n\n                    this._onActionButtonClicked(evt, actionHandlerName,\n                                                $action);\n                });\n            }\n        }\n\n        $action.addClass('djblets-c-config-forms-list__item-action');\n\n        if (action.id) {\n            $action.addClass(`config-forms-list-action-${action.id}`);\n        }\n\n        if (action.danger) {\n            $action.addClass('-is-danger');\n        }\n\n        if (action.primary) {\n            $action.addClass('-is-primary');\n        }\n\n        if (!enabled) {\n            $action.prop('disabled', true);\n        }\n\n        return $result;\n    },\n\n    /**\n     * Handle changes to the item state.\n     *\n     * This will update the CSS class used on the item and any relevant text\n     * contained within the item to reflect the current state.\n     */\n    _onItemStateChanged() {\n        const model = this.model;\n        const oldItemState = model.previous('itemState');\n        const itemState = model.get('itemState');\n\n        if (oldItemState) {\n            this.$el.removeClass(this.itemStateClasses[oldItemState]);\n        }\n\n        if (itemState) {\n            this.$el.addClass(this.itemStateClasses[itemState]);\n\n            /*\n             * Note that if we didn't find an element in the template for\n             * this before, this is basically a no-op.\n             */\n            this._$itemState.text(model.itemStateTexts[itemState]);\n        }\n    },\n\n    /**\n     * Handle clicks on a list item action button.\n     *\n     * This will invoke the click handler on the view. If that handler\n     * returns a Promise, this will disable the button, replace its contents\n     * with a spinner, and then wait for the promise to resolve before\n     * setting the button's contents and enabled states back to normal.\n     *\n     * Args:\n     *     evt (jQuery.Event):\n     *         The click event on the button.\n     *\n     *     actionHandlerName (string):\n     *         The name of the action handler function to call.\n     *\n     *     $action (jQuery):\n     *         The action button that was clicked.\n     */\n    _onActionButtonClicked(evt, actionHandlerName, $action) {\n        const promise = this[actionHandlerName].call(this, evt);\n\n        if (promise && typeof promise.then === 'function') {\n            $action.prop('disabled', true);\n\n            const childrenHTML = $action.html();\n            $action.empty();\n\n            const $spinner = $('<span class=\"djblets-o-spinner\">')\n                .appendTo($action);\n\n            /*\n             * This is a promise, so there's an async operation\n             * going on. Set up the spinner.\n             */\n            promise.finally(() => {\n                $spinner.remove();\n                $action.html(childrenHTML);\n                $action.prop('disabled', false);\n            });\n        }\n    },\n});\n"]}