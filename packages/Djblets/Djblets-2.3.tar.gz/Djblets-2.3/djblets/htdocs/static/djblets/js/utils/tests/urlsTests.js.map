{"version":3,"sources":["urlsTests.es6.js"],"names":[],"mappings":"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","file":"urlsTests.js","sourcesContent":["suite('djblets/utils/urls', function() {\n    describe('buildURL', function() {\n        it('With just baseURL', function() {\n            const url = Djblets.buildURL({\n                baseURL: 'https://example.com/abc123/',\n            });\n\n            expect(url).toBe('https://example.com/abc123/');\n        });\n\n        describe('With anchor', function() {\n            it('With leading \"#\"', function() {\n                const url = Djblets.buildURL({\n                    baseURL: 'https://example.com/abc123/',\n                    anchor: '#my-anchor',\n                });\n\n                expect(url).toBe('https://example.com/abc123/#my-anchor');\n            });\n\n            it('Without leading \"#\"', function() {\n                const url = Djblets.buildURL({\n                    baseURL: 'https://example.com/abc123/',\n                    anchor: 'my-anchor',\n                });\n\n                expect(url).toBe('https://example.com/abc123/#my-anchor');\n            });\n        });\n\n        describe('With queryData', function() {\n            describe('As string', function() {\n                it('With leading \"?\"', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: '?a=b&c=d',\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/?a=b&c=d');\n                });\n\n                it('Without leading \"?\"', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: 'a=b&c=d',\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/?a=b&c=d');\n                });\n\n                it('Empty', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: '',\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/');\n                });\n            });\n\n            describe('As object', function() {\n                it('With value', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: {\n                            a: 'b',\n                        },\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/?a=b');\n                });\n\n                it('Empty', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: {},\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/');\n                });\n            });\n\n            describe('As array', function() {\n                it('With value', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: [\n                            {\n                                name: 'a',\n                                value: 'b',\n                            },\n                            {\n                                name: 'c',\n                                value: 'd',\n                            },\n                        ],\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/?a=b&c=d');\n                });\n\n                it('Empty', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: [],\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/');\n                });\n            });\n        });\n\n        it('With all options', function() {\n            const url = Djblets.buildURL({\n                baseURL: 'https://example.com/abc123/',\n                queryData: 'a=b&c=d',\n                anchor: 'my-anchor',\n            });\n\n            expect(url).toBe(\n                'https://example.com/abc123/?a=b&c=d#my-anchor');\n        });\n    });\n\n    describe('parseQueryString', function() {\n        it('Empty query string', function() {\n            expect(Djblets.parseQueryString('')).toEqual({});\n        });\n\n        it('Basic query strings', function() {\n            expect(Djblets.parseQueryString('?a=b&c=d&e=f')).toEqual({\n                a: 'b',\n                c: 'd',\n                e: 'f',\n            });\n        });\n\n        it('Keys without values', function() {\n            expect(Djblets.parseQueryString('?abc=def&ghi')).toEqual({\n                abc: 'def',\n                ghi: null,\n            });\n        });\n\n        describe('Multiple values for keys', function() {\n            it('With allowMultiValue=true', function() {\n                const queryString =\n                    Djblets.parseQueryString('?a=1&a=2&a=3&b=4', {\n                        allowMultiValue: true,\n                    });\n\n                expect(queryString).toEqual({\n                    a: ['1', '2', '3'],\n                    b: '4',\n                });\n            });\n\n            it('Without allowMultiValue=true', function() {\n                expect(Djblets.parseQueryString('?a=1&a=2&a=3&b=4')).toEqual({\n                    a: '3',\n                    b: '4',\n                });\n            });\n        });\n    });\n});\n"]}