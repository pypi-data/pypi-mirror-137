Metadata-Version: 2.1
Name: hcl-model
Version: 0.5.0
Summary: Simple time series forecasting based on multiple linear regression
Home-page: https://git.signintra.com/gdsa/python-libs/hcl-model
Author: Stanislav Khrapov
Author-email: stanislav.khrapov@dbschenker.com
License: mit
Project-URL: Documentation, https://nexus.signintra.com/repository/GDSA-static/packages/hcl-model/docs/index.html
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Requires-Python: >=3.7
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
License-File: LICENSE
License-File: LICENSE.md
License-File: AUTHORS.md
Requires-Dist: sklearn
Requires-Dist: numpy
Requires-Dist: pandas (>=1.1)
Requires-Dist: statsmodels
Requires-Dist: ruptures
Requires-Dist: scipy (>=1.5)
Requires-Dist: workalendar (>=10.0.0)
Provides-Extra: deploy
Requires-Dist: wheel ; extra == 'deploy'
Requires-Dist: build ; extra == 'deploy'
Requires-Dist: twine ; extra == 'deploy'
Provides-Extra: dev
Requires-Dist: black ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'
Provides-Extra: doc
Requires-Dist: mkdocs ; extra == 'doc'
Requires-Dist: pymdown-extensions ; extra == 'doc'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'

# HCL Model

![example workflow](https://github.com/khrapovs/hcl-model/actions/workflows/pytest.yaml/badge.svg)

Simple time series forecasting based on multiple linear regression.

## Installation

```shell
pip install hcl-model
```

## Contribute

Create a virtual environment and activate it
```shell
python -m venv venv
source venv/bin/activate
```
Install the development packages
```shell
pip install -e .[dev]
```
and use pre-commit to make sure that your code is blackified automatically (used the `black` package):
```shell
pre-commit install
```
Run tests:
```shell
pip install -e .[test]
pytest
```
Build documentation (see more details [here](https://www.mkdocs.org/#getting-started)):
```shell
pip install -e .[doc]
mkdocs build
```
or use
```shell
mkdocs serve
```
if you prefer a live, self-refreshing, documentation.

**Note:** Do not push directly to master! Please, submit a MR for review, make sure that Gitlab CI/CD pipelines pass.


