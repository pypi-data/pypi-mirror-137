# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {
    "ROOT_PATH": "test_end_to_end_unet.ipynb",
    "GPU_ID": "test_end_to_end_unet.ipynb",
    "use_berlin_segmentation_test": "test_end_to_end_unet.ipynb",
    "config": "test_end_to_end_unet.ipynb",
    "pipeline": "test_end_to_end_unet.ipynb",
    "module": "test_end_to_end_unet.ipynb",
    "trainer": "test_end_to_end_unet.ipynb",
    "recorder": "test_end_to_end_unet.ipynb",
    "before_train_module_weights": "test_end_to_end_unet.ipynb",
    "after_train_module_weights": "test_end_to_end_unet.ipynb",
    "checkpoint_callback": "test_end_to_end_unet.ipynb",
    "checkpoint_path": "test_end_to_end_unet.ipynb",
    "inference_pipeline": "test_end_to_end_unet.ipynb",
    "inference_module": "test_end_to_end_unet.ipynb",
    "inference_trainer": "test_end_to_end_unet.ipynb",
    "before_load_inference_module_weights": "test_end_to_end_unet.ipynb",
    "pl_checkpoint": "test_end_to_end_unet.ipynb",
    "after_load_inference_module_weights": "test_end_to_end_unet.ipynb",
    "test_samples": "test_end_to_end_unet.ipynb",
    "test_dataset": "test_end_to_end_unet.ipynb",
    "test_dataloader": "test_end_to_end_unet.ipynb",
    "trainer_predictions": "test_end_to_end_unet.ipynb",
    "inference_trainer_predictions": "test_end_to_end_unet.ipynb",
    "mlflow_save_path": "test_end_to_end_unet.ipynb",
    "test_samples_json": "test_end_to_end_unet.ipynb",
    "images_df": "test_end_to_end_unet.ipynb",
    "mlflow_model": "test_end_to_end_unet.ipynb",
    "mlflow_predictions": "test_end_to_end_unet.ipynb",
    "test_samples_with_paths_json": "test_end_to_end_unet.ipynb",
    "source_path": "test_end_to_end_unet.ipynb",
    "model_image": "test_end_to_end_unet.ipynb",
    "port": "test_end_to_end_unet.ipynb",
    "container": "test_end_to_end_unet.ipynb",
}

modules = ["test_end_to_end_unet.py"]

doc_url = "https://Kevin.github.io/test_image_segmentation_end_to_end/"

git_url = "https://github.com/Kevin/test_image_segmentation_end_to_end/tree/master/"


def custom_doc_links(name):
    return None
