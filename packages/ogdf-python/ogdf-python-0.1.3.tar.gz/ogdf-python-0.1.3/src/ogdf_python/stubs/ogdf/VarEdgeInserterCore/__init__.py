# file stubs/ogdf/VarEdgeInserterCore/__init__.py generated from classogdf_1_1_var_edge_inserter_core
import enum
from typing import *
from ogdf_python import ogdf, cpp
std = cpp.std
class VarEdgeInserterCore(ogdf.Timeouter):

	c_bigM : int = ...

	m_compV : NodeArray[SList[  int ] ] = ...

	m_edgeB : Array[SList[edge] ] = ...

	m_GtoBC : NodeArray[node] = ...

	m_nodeB : Array[SList[node] ] = ...

	m_pCost : EdgeArray[  int ] = ...

	m_pEip : SList[adjEntry] = ...

	m_pForbidden : EdgeArray[ bool ] = ...

	m_pr : PlanRepLight = ...

	m_pSubgraph : EdgeArray[  int ] = ...

	#: Runs of remove-reinsert method.
	m_runsPostprocessing : int = ...

	m_s : node = ...

	m_st : edge = ...

	m_t : node = ...

	m_v1 : node = ...

	m_v2 : node = ...

	def __init__(self, pr : PlanRepLight, pCostOrig : EdgeArray[  int ], pForbiddenOrig : EdgeArray[ bool ], pEdgeSubgraphs : EdgeArray[  int ]) -> None:
		...

	def __destruct__(self) -> None:
		...

	def call(self, origEdges : Array[edge], rrPost : RemoveReinsertType, percentMostCrossed : float) -> Module.ReturnType:
		...

	def callPostprocessing(self, origEdges : Array[edge], rrPost : RemoveReinsertType, percentMostCrossed : float) -> Module.ReturnType:
		...

	def runsPostprocessing(self) -> int:
		...

	def blockInsert(self, G : BiconnectedComponent, s : node, t : node, L : List[adjEntry]) -> None:
		...

	def buildSubpath(self, v : node, eIn : edge, eOut : edge, L : List[adjEntry], Exp : ExpandedGraph, s : node, t : node) -> None:
		...

	def costCrossed(self, eOrig : edge) -> int:
		...

	def createBlock(self) -> BiconnectedComponent:
		...

	def createExpandedGraph(self, BC : BiconnectedComponent, T : StaticSPQRTree) -> ExpandedGraph:
		...

	def dfsComp(self, i : int, parent : node) -> node:
		...

	def dfsVertex(self, v : node, parent : int) -> bool:
		...

	def insert(self, s : node, t : node, eip : SList[adjEntry]) -> None:
		...

	def pathSearch(self, v : node, parent : edge, path : List[edge]) -> bool:
		...

	def storeTypeOfCurrentEdge(self, eOrig : edge) -> None:
		...
