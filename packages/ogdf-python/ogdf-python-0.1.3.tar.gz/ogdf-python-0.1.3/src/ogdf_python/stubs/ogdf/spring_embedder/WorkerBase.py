# file stubs/ogdf/spring_embedder/WorkerBase.py generated from classogdf_1_1spring__embedder_1_1_worker_base
import enum
from typing import *
from ogdf_python import ogdf, cpp
std = cpp.std
NodeInfo = TypeVar('NodeInfo')

Master = TypeVar('Master')

class WorkerBase(Generic[Master, NodeInfo]):

	"""Common base class forogdf::SpringEmbedderExact::Workerandogdf::SpringEmbedderGridVariant::Worker."""

	m_hsum : float = ...

	m_id : int = ...

	m_master : Master = ...

	m_maxForce : float = ...

	m_sumForces : float = ...

	m_sumLengths : float = ...

	m_vStart : node = ...

	m_vStartIndex : int = ...

	m_vStop : node = ...

	m_vStopIndex : int = ...

	m_wsum : float = ...

	m_xmax : float = ...

	m_xmin : float = ...

	m_ymax : float = ...

	m_ymin : float = ...

	def __init__(self, id : int, master : Master, vStartIndex : int, vStopIndex : int, vStart : node, vStop : node) -> None:
		...

	def __destruct__(self) -> None:
		...

	def __call__(self) -> None:
		...

	def finalScaling(self, vInfo : Array[ NodeInfo ], adjLists : Array[  int ]) -> None:
		...

	def scaling(self, vInfo : Array[ NodeInfo ], adjLists : Array[  int ]) -> None:
		...

	def sumUpLengths(self, vInfo : Array[ NodeInfo ], adjLists : Array[  int ]) -> float:
		...
