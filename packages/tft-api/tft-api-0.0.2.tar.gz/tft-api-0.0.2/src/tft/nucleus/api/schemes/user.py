# Copyright Contributors to the Testing Farm project.
# SPDX-License-Identifier: Apache-2.0
"""
The module provides schemes of test requests
"""
import uuid
from datetime import datetime
from typing import List

from pydantic import BaseModel, Field  # pylint: disable=no-name-in-module

from .test_request import Request


class User(BaseModel):
    """
    User schema. Should be the same as database model
    """

    id: uuid.UUID = Field(
        ...,
        description=(
            'A unique identification of the user. Uses UUID format as defined in '
            '[RFC 4122](https://tools.ietf.org/html/rfc4122). Generated by Testing Farm.'
        ),
    )
    name: str = Field(..., description=('A name of the user.'))
    api_key: str = Field(..., description=('Secret key used for authentication to the API endpoint.'))
    enabled: bool = Field(True, description=('Flag indicating if the user is enabled.'))
    requests: List[Request] = Field([], description=('A list of user test requests.'))
    created: datetime = Field(..., description=('Date/time of creation of the request in RFC 3339 format.'))
    updated: datetime = Field(..., description=('Date/time of last update of the request in RFC 3339 format.'))

    class Config:
        """
        https://fastapi.tiangolo.com/tutorial/sql-databases/#use-pydantics-orm_mode
        """

        orm_mode = True


class UserCreateUpdateIn(BaseModel):
    """
    Create user API request.
    """

    api_key: str = Field(..., description=('An unique identifier used to authenticate a client.'))
    name: str = Field(..., description=('A name of the user.'))
    user_api_key: str = Field(..., description=('Secret key of the user used for authentication to the API endpoint.'))
    enabled: bool = Field(True, description=('Flag indicating if the user is enabled.'))


class UserCreateGetUpdateOut(BaseModel):
    """
    Create user API response.
    """

    id: uuid.UUID = Field(
        ...,
        description=(
            'A unique identification of the user. Uses UUID format as defined in '
            '[RFC 4122](https://tools.ietf.org/html/rfc4122). Generated by Testing Farm.'
        ),
    )
    name: str = Field(..., description=('A name of the user.'))
    api_key: str = Field(..., description=('Secret key used for authentication to the API endpoint.'))
    enabled: bool = Field(..., description=('Flag indicating if the user is enabled.'))
    created: datetime = Field(..., description=('Date/time of creation of the request in RFC 3339 format.'))
    updated: datetime = Field(..., description=('Date/time of last update of the request in RFC 3339 format.'))
