Metadata-Version: 2.1
Name: types-aiobotocore-panorama
Version: 2.1.0.post1
Summary: Type annotations for aiobotocore.Panorama 2.1.0 service generated by mypy-boto3-builder 6.4.2
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: aiobotocore panorama type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown

<a id="mypy-boto3-panorama"></a>

# mypy-boto3-panorama

[![PyPI - types-aiobotocore-panorama](https://img.shields.io/pypi/v/types-aiobotocore-panorama.svg?color=blue)](https://pypi.org/project/types-aiobotocore-panorama)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-panorama.svg?color=blue)](https://pypi.org/project/types-aiobotocore-panorama)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-panorama?color=blue)](https://pypistats.org/packages/types-aiobotocore-panorama)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[boto3.Panorama 1.20.47](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/panorama.html#Panorama)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 6.4.2](https://github.com/vemel/mypy_boto3_builder).

More information can be found on
[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
[types-aiobotocore-panorama docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_panorama/)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/main/demo.gif)

- [mypy-boto3-panorama](#mypy-boto3-panorama)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Literals](#literals)
    - [Typed dictionaries](#typed-dictionaries)
  - [Versioning](#versioning)
  - [Documentation](#documentation)
  - [Support and contributing](#support-and-contributing)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `Panorama`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `Panorama` service.

```bash
# install with aiobotocore type annotations
python -m pip install 'types-aiobotocore[panorama]'

# Lite version does not provide session.create_client overloads
# it is more RAM-friendly, but requires explicit type annotations
python -m pip install 'types-aiobotocore-lite[panorama]'

# standalone installation
python -m pip install types-aiobotocore-panorama
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[panorama]` in your environment:
  `python -m pip install 'types-aiobotocore[panorama]'`

Both type checking and auto-complete should work for `Panorama` service. No
explicit type annotations required, write your `boto3` code as usual.

<a id="pycharm"></a>

### PyCharm

- Install `types-aiobotocore[panorama]` in your environment:
  `python -m pip install 'types-aiobotocore[panorama]'`

Both type checking and auto-complete should work for `Panorama` service. No
explicit type annotations required, write your `aiobotocore` code as usual.
Auto-complete can be slow on big projects or if you have a lot of installed
`types-aiobotocore` submodules.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[panorama]` in your environment:
  `python -m pip install 'types-aiobotocore[panorama]'`
- Run `mypy` as usual

Type checking should work for `Panorama` service. No explicit type annotations
required, write your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `types-aiobotocore[panorama]` in your environment:
  `python -m pip install 'types-aiobotocore[panorama]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `Panorama` service. No explicit type annotations
required, write your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`PanoramaClient` provides annotations for `session.create_client("panorama")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_panorama import PanoramaClient

session = get_session()
async with session.create_client("panorama") as client:
    client: PanoramaClient
    # now client usage is checked by mypy and IDE should provide code auto-complete
```

<a id="literals"></a>

### Literals

`types_aiobotocore_panorama.literals` module contains literals extracted from
shapes that can be used in user code for type checking.

```python
from types_aiobotocore_panorama.literals import (
    ApplicationInstanceHealthStatusType,
    ApplicationInstanceStatusType,
    ConnectionTypeType,
    DeviceConnectionStatusType,
    DeviceStatusType,
    DeviceTypeType,
    JobResourceTypeType,
    JobTypeType,
    NetworkConnectionStatusType,
    NodeCategoryType,
    NodeFromTemplateJobStatusType,
    NodeInstanceStatusType,
    PackageImportJobStatusType,
    PackageImportJobTypeType,
    PackageVersionStatusType,
    PortTypeType,
    StatusFilterType,
    TemplateTypeType,
    UpdateProgressType,
    ServiceName,
)

def check_value(value: ApplicationInstanceHealthStatusType) -> bool:
    ...
```

<a id="typed-dictionaries"></a>

### Typed dictionaries

`types_aiobotocore_panorama.type_defs` module contains structures and shapes
assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_panorama.type_defs import (
    ApplicationInstanceTypeDef,
    CreateApplicationInstanceRequestRequestTypeDef,
    CreateApplicationInstanceResponseTypeDef,
    CreateJobForDevicesRequestRequestTypeDef,
    CreateJobForDevicesResponseTypeDef,
    CreateNodeFromTemplateJobRequestRequestTypeDef,
    CreateNodeFromTemplateJobResponseTypeDef,
    CreatePackageImportJobRequestRequestTypeDef,
    CreatePackageImportJobResponseTypeDef,
    CreatePackageRequestRequestTypeDef,
    CreatePackageResponseTypeDef,
    DeleteDeviceRequestRequestTypeDef,
    DeleteDeviceResponseTypeDef,
    DeletePackageRequestRequestTypeDef,
    DeregisterPackageVersionRequestRequestTypeDef,
    DescribeApplicationInstanceDetailsRequestRequestTypeDef,
    DescribeApplicationInstanceDetailsResponseTypeDef,
    DescribeApplicationInstanceRequestRequestTypeDef,
    DescribeApplicationInstanceResponseTypeDef,
    DescribeDeviceJobRequestRequestTypeDef,
    DescribeDeviceJobResponseTypeDef,
    DescribeDeviceRequestRequestTypeDef,
    DescribeDeviceResponseTypeDef,
    DescribeNodeFromTemplateJobRequestRequestTypeDef,
    DescribeNodeFromTemplateJobResponseTypeDef,
    DescribeNodeRequestRequestTypeDef,
    DescribeNodeResponseTypeDef,
    DescribePackageImportJobRequestRequestTypeDef,
    DescribePackageImportJobResponseTypeDef,
    DescribePackageRequestRequestTypeDef,
    DescribePackageResponseTypeDef,
    DescribePackageVersionRequestRequestTypeDef,
    DescribePackageVersionResponseTypeDef,
    DeviceJobConfigTypeDef,
    DeviceJobTypeDef,
    DeviceTypeDef,
    EthernetPayloadTypeDef,
    EthernetStatusTypeDef,
    JobResourceTagsTypeDef,
    JobTypeDef,
    ListApplicationInstanceDependenciesRequestRequestTypeDef,
    ListApplicationInstanceDependenciesResponseTypeDef,
    ListApplicationInstanceNodeInstancesRequestRequestTypeDef,
    ListApplicationInstanceNodeInstancesResponseTypeDef,
    ListApplicationInstancesRequestRequestTypeDef,
    ListApplicationInstancesResponseTypeDef,
    ListDevicesJobsRequestRequestTypeDef,
    ListDevicesJobsResponseTypeDef,
    ListDevicesRequestRequestTypeDef,
    ListDevicesResponseTypeDef,
    ListNodeFromTemplateJobsRequestRequestTypeDef,
    ListNodeFromTemplateJobsResponseTypeDef,
    ListNodesRequestRequestTypeDef,
    ListNodesResponseTypeDef,
    ListPackageImportJobsRequestRequestTypeDef,
    ListPackageImportJobsResponseTypeDef,
    ListPackagesRequestRequestTypeDef,
    ListPackagesResponseTypeDef,
    ListTagsForResourceRequestRequestTypeDef,
    ListTagsForResourceResponseTypeDef,
    ManifestOverridesPayloadTypeDef,
    ManifestPayloadTypeDef,
    NetworkPayloadTypeDef,
    NetworkStatusTypeDef,
    NodeFromTemplateJobTypeDef,
    NodeInputPortTypeDef,
    NodeInstanceTypeDef,
    NodeInterfaceTypeDef,
    NodeOutputPortTypeDef,
    NodeTypeDef,
    OTAJobConfigTypeDef,
    OutPutS3LocationTypeDef,
    PackageImportJobInputConfigTypeDef,
    PackageImportJobOutputConfigTypeDef,
    PackageImportJobOutputTypeDef,
    PackageImportJobTypeDef,
    PackageListItemTypeDef,
    PackageObjectTypeDef,
    PackageVersionInputConfigTypeDef,
    PackageVersionOutputConfigTypeDef,
    ProvisionDeviceRequestRequestTypeDef,
    ProvisionDeviceResponseTypeDef,
    RegisterPackageVersionRequestRequestTypeDef,
    RemoveApplicationInstanceRequestRequestTypeDef,
    ResponseMetadataTypeDef,
    S3LocationTypeDef,
    StaticIpConnectionInfoTypeDef,
    StorageLocationTypeDef,
    TagResourceRequestRequestTypeDef,
    UntagResourceRequestRequestTypeDef,
    UpdateDeviceMetadataRequestRequestTypeDef,
    UpdateDeviceMetadataResponseTypeDef,
)

def get_structure() -> ApplicationInstanceTypeDef:
    return {
      ...
    }
```

<a id="versioning"></a>

## Versioning

`types-aiobotocore-panorama` version is the same as related `boto3` version and
follows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

<a id="documentation"></a>

## Documentation

All type annotations can be found in
[types-aiobotocore-panorama docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_panorama/)

<a id="support-and-contributing"></a>

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder/issues/)
repository.


