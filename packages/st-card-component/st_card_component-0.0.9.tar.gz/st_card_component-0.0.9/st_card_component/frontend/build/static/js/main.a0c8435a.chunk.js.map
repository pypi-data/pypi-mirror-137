{"version":3,"sources":["CardComponent.tsx","index.tsx"],"names":["ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","CardComponent","state","active","toggleActive","console","log","currentActive","setState","render","title","args","context","highlight_start","highlight_end","score","url","pre_highlight","slice","highlight","post_highlight","style","paddingTop","paddingBottom","whiteSpace","Card","variant","CardHeader","subheader","CardContent","Typography","fontWeight","CardActions","disableSpacing","disabled","aria-label","href","target","onClick","aria-expanded","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"qXAqBMA,EAAaC,aAAO,SAACC,GACIA,EAArBC,OAAR,IAAmBC,EAAnB,YAA6BF,EAA7B,GACA,OAAO,kBAACG,EAAA,EAAeD,KAFNH,EAGhB,gBAAGK,EAAH,EAAGA,MAAH,MAAwB,CACzBC,UADC,EAAUJ,OAC2B,iBAAjB,eACrBK,WAAY,OACZC,WAAYH,EAAMI,YAAYC,OAAO,YAAa,CAChDC,SAAUN,EAAMI,YAAYE,SAASC,eAQnCC,E,4MACJC,MAAQ,CAAEC,QAAQ,G,EAElBC,aAAe,WACbC,QAAQC,IAAI,EAAKJ,OACjB,IAAMK,EAAgB,EAAKL,MAAMC,OACjC,EAAKK,SAAS,CAAEL,QAASI,IACzBF,QAAQC,IAAI,EAAKJ,Q,EAGZO,OAAS,WAEd,IAAMC,EAAQ,EAAKrB,MAAMsB,KAAX,MACRC,EAAU,EAAKvB,MAAMsB,KAAX,QACVE,EAAkB,EAAKxB,MAAMsB,KAAX,gBAClBG,EAAgB,EAAKzB,MAAMsB,KAAX,cAChBI,EAAQ,EAAK1B,MAAMsB,KAAX,MACRK,EAAM,EAAK3B,MAAMsB,KAAX,IACU,EAAKtB,MAAMsB,KAAX,eAEpB,EAAKP,eAEK,EAAKf,MAAMsB,KAAX,IAAZ,IACMrB,EAAS,EAAKY,MAAMC,OAGpBc,EAAgBL,EAAQM,MAAM,EAAGL,GACjCM,EAAYP,EAAQM,MAAML,EAAiBC,GAC3CM,EAAiBR,EAAQM,MAAMJ,GAGrC,OACE,yBAAKO,MAAO,CACVC,WAAY,SACZC,cAAe,SACfC,WAAY,aAGV,kBAACC,EAAA,EAAD,CAAMC,QAAQ,YACZ,kBAACC,EAAA,EAAD,CACEjB,MAAOA,EACPkB,UAAWb,IAEb,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYJ,QAAQ,SAChBpC,EAAW2B,EAAkB,GAC/B,0BACEI,MAAO,CACLU,WAAYzC,EAAS,OAAS,WAG/B6B,GAED7B,EAAW8B,EAAmB,KAGpC,kBAACY,EAAA,EAAD,CAAaC,gBAAc,GACzB,kBAACzC,EAAA,EAAD,CACE0C,SAAU,EAAK7C,MAAM6C,SACrBC,aAAW,kBACXC,KAAMpB,EACNqB,OAAO,WAEP,kBAAC,IAAD,OAEF,kBAAC,EAAD,CACE/C,OAAQA,EACRgD,QAAS,EAAKlC,aACd8B,SAAU,EAAK7C,MAAM6C,SACrBK,gBAAejD,EACf6C,aAAW,aAEX,kBAAC,IAAD,W,yBAxEYK,KAsFbC,cAAwBxC,GCtHvCyC,IAASjC,OACP,kBAAC,IAAMkC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a0c8435a.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode, useEffect } from \"react\"\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport { CardActions, Collapse } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport { Typography } from \"@mui/material\";\n\n\n// these handle the expansion animation\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n};\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass CardComponent extends StreamlitComponentBase<any> {\n  state = { active: false };\n\n  toggleActive = () => {\n    console.log(this.state)\n    const currentActive = this.state.active;\n    this.setState({ active: !currentActive })\n    console.log(this.state)\n  };\n\n  public render = (): ReactNode => {\n    // pull in context ID, text, and score\n    const title = this.props.args[\"title\"]\n    const context = this.props.args[\"context\"]\n    const highlight_start = this.props.args[\"highlight_start\"]\n    const highlight_end = this.props.args[\"highlight_end\"]\n    const score = this.props.args[\"score\"]\n    const url = this.props.args[\"url\"]\n    const default_state = this.props.args[\"default_state\"]\n    if (default_state) {\n      this.toggleActive()\n    }\n    const key = this.props.args[\"key\"]\n    const expand = this.state.active\n\n    // extract highlight span\n    const pre_highlight = context.slice(0, highlight_start)\n    const highlight = context.slice(highlight_start, highlight_end)\n    const post_highlight = context.slice(highlight_end)\n\n    // create the card\n    return (\n      <div style={{\n        paddingTop: \"0.5rem\",\n        paddingBottom: \"0.5rem\",\n        whiteSpace: \"pre-wrap\"\n        }}\n      >\n          <Card variant=\"outlined\">\n            <CardHeader\n              title={title}\n              subheader={score}\n            />\n            <CardContent>\n              <Typography variant=\"body2\">\n                {(expand) ? (pre_highlight) : (\"\")}\n                <span\n                  style={{\n                    fontWeight: expand ? \"bold\" : \"normal\"\n                  }}\n                >\n                  {highlight}\n                </span>\n                {(expand) ? (post_highlight) : (\"\")}\n              </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n              <IconButton\n                disabled={this.props.disabled}\n                aria-label=\"open source url\"\n                href={url}\n                target=\"_PARENT\"\n              >\n                <LaunchIcon />\n              </IconButton>\n              <ExpandMore\n                expand={expand}\n                onClick={this.toggleActive}\n                disabled={this.props.disabled}\n                aria-expanded={expand}\n                aria-label=\"show more\"\n              >\n                <ExpandMoreIcon />\n              </ExpandMore>\n            </CardActions>\n          </Card>\n      </div>\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(CardComponent)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CardComponent from \"./CardComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <CardComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}