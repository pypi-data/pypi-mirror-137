auto_cancellation: false
env:
  PATH: ${HOME}/.local/bin:${PATH}
  PIP_CACHE: ${HOME}/.cache/pip
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  COVERAGE: false
  CI_NAME: cirrus-ci
  CI_BRANCH: ${CIRRUS_BRANCH}
  CI_PULL_REQUEST: ${CIRRUS_PR}
  CI_BUILD_NUMBER: ${CIRRUS_BUILD_ID}
  CI_BUILD_URL: https://cirrus-ci.com/build/${CIRRUS_BUILD_ID}
.regular_task_template:
  pip_cache:
    folder: $PIP_CACHE
  tox_install_script:
  - python -m pip install --upgrade pip setuptools tox
  prepare_script:
  - git config --global user.email "you@example.com"
  - git config --global user.name "Your Name"
  clean_workspace_script:
  - rm -rf .coverage junit-*.xml .tox
  build_script:
  - python -m tox -e build
  test_script:
  - python -m tox -- -rfEx --durations 10 --color yes
.clone_script: |
  if [ -z "$CIRRUS_PR" ]; then
    git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
    git reset --hard $CIRRUS_CHANGE_IN_REPO
  else
    git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
    git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
    git reset --hard $CIRRUS_CHANGE_IN_REPO
  fi
linux_mac_task:
  clone_script: |
    if [ -z "$CIRRUS_PR" ]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
  matrix:
  - name: test (Linux - 3.6)
    container:
      image: python:3.6-buster
  - name: test (Linux - 3.7)
    container:
      image: python:3.7-buster
  - name: test (Linux - 3.8)
    container:
      image: python:3.8-buster
  - name: test (Linux - 3.9)
    container:
      image: python:3.9-buster
  - name: test (Linux - Anaconda)
    container:
      image: continuumio/anaconda3:2021.05
    extra_install_script:
    - conda install -y -c conda-forge virtualenv build setuptools setuptools-scm pip tox
  - name: test (OS X)
    macos_instance:
      image: big-sur-xcode
    env:
      PYTHON_VERSION: 3.7
      PATH: ${HOME}/.local/bin:${HOME}/Library/Python/${PYTHON_VERSION}/bin:/usr/local/opt/python/libexec/bin:${PATH}
      PIP_CACHE: ${HOME}/Library/Caches/pip
    brew_cache:
      folder: $HOME/Library/Caches/Homebrew
    install_script:
    - brew install python
windows_task:
  name: test (Windows)
  tools_cache:
    folder: C:\tools
    fingerprint_script:
    - ps: echo "$env:CIRRUS_OS - nuget v6.0.0 - git 2.34.1"
    populate_script:
    - ps: (mkdir 'C:\tools')
    - ps: Invoke-WebRequest -OutFile 'C:\tools\nuget.exe' 'https://dist.nuget.org/win-x86-commandline/v6.0.0/nuget.exe'
    - ps: nuget install GitForWindows -Version 2.34.1 -NonInteractive -OutputDirectory C:\tools
  workaround_git_script:
  - git config --system core.longpaths true
  clone_script: CMD.exe /C ECHO ON & IF NOT DEFINED CIRRUS_PR ( git clone --recursive --branch=%CIRRUS_BRANCH% https://x-access-token:%CIRRUS_REPO_CLONE_TOKEN%@github.com/%CIRRUS_REPO_FULL_NAME%.git %CIRRUS_WORKING_DIR% & git reset --hard %CIRRUS_CHANGE_IN_REPO% ) ELSE ( git clone --recursive https://x-access-token:%CIRRUS_REPO_CLONE_TOKEN%@github.com/%CIRRUS_REPO_FULL_NAME%.git %CIRRUS_WORKING_DIR% & git fetch origin pull/%CIRRUS_PR%/head:pull/%CIRRUS_PR% & git reset --hard %CIRRUS_CHANGE_IN_REPO% )
  windows_container:
    image: python:3.8-windowsservercore
    os_version: 2019
  env:
    PYTHON_HOME: C:\Python
    PYTHON_APPDATA: '%APPDATA%\Python\Python38'
    GIT_HOME: C:\tools\GitForWindows.2.34.1\tools
    HOME: '%USERPROFILE%'
    USERNAME: ContainerAdministrator
    PATH: '%HOME%\.local\bin\;%PYTHON_APPDATA%\Scripts\;%PYTHON_HOME%\;%PYTHON_HOME%\Scripts\;C:\tools\;%GIT_HOME%\cmd\;%PATH%'
    PIP_CACHE: '%LocalAppData%\pip\Cache'
    PIP_TRUSTED_HOST: pypi.org pypi.python.org files.pythonhosted.org
    PIP_CONFIG_FILE: '%AppData%\pip\pip.ini'
    COVERAGE: "NO"
  pip_cache:
    folder: '%PIP_CACHE%'
  install_script:
  - REG ADD "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem" /v LongPathsEnabled /t REG_DWORD /d 1 /f
  - REG ADD "HKEY_CURRENT_USER\Software\Microsoft\Command Processor" /v Autorun /t REG_SZ /d "@chcp 65001>nul" /f
  - python -m ensurepip
  - python -m pip install --upgrade --user pip setuptools certifi tox
  prepare_script:
  - git config --global user.email "you@example.com"
  - git config --global user.name "Your Name"
  clean_workspace_script:
  - ps: (rm -Recurse -Force -ErrorAction SilentlyContinue .tox,junit-*.xml)
  build_script:
  - python -m tox -e build
  test_script:
  - python -m tox -- -rfEx --durations 10 --color yes
