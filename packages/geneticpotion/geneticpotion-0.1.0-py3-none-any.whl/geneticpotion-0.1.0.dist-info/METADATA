Metadata-Version: 2.1
Name: geneticpotion
Version: 0.1.0
Summary: Linear Classificator enhancer based on genetic algorithm
Home-page: https://github.com/comptech-winter-school/genetic-potioncraft
Author: Kosaretskiy E. Geraskin S. Svetova K. Shperling S. Valeriya Novikova V.
Author-email: megametagross@outlook.de
License: UNKNOWN
Project-URL: Bug Tracker, https://github.com/comptech-winter-school/genetic-potioncraft/issues
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: deap
Requires-Dist: geppy
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: python-math
Requires-Dist: scikit-learn

# Генетическое зельеварение
Продукт "[Генетическое зельеварение](https://github.com/comptech-winter-school/genetic-potioncraft)" проект в рамках зимней школы [CompTech School 2022](https://comptechschool.com/2022/projects/genetic_algorithm)

## Назначение
Продукт "[Генетическое зельеварение](https://github.com/comptech-winter-school/genetic-potioncraft)" в рамках зимней школы [CompTech School 2022](https://comptechschool.com/2022/projects/genetic_algorithm) разрабатывается с целью улучшения работы линейной модели классификации, на основе использования генетического алгоритма.

## Папки репозитория
* ___[docs](https://github.com/comptech-winter-school/genetic-potioncraft/tree/main/docs)___ - папка, содержащая документацию проекта;
* ___main.py___ - файл, содержащий алгоритм.

## Обзор продукта 
Алгоритм, создающий признаки, которые улучшают результаты работы линейной модели классификации. Данный алгоритм является эффективным способом оптимизации решений с большим числом параметров. Идея заключается в комбинировании существующих параметров, путем создания новых, с возможностью дальнейшей визуализации.

## Структура продукта

* Сначала формируется начальное поколение - популяция деревьев. 
* Затем осуществляется селекция, то есть выбор подходящих индивидов на основе fitness-функции. 
* Затем на стадии рекомбинации происходит обмен частями деревьев. 
* На этапе мутаций случайно меняются части деревьев и на выходе получается новая популяция. 
* Если цель не была достигнута, то операции повторяются сначала до ее достижения.

![image](https://user-images.githubusercontent.com/98469155/152510658-a4e324a3-9875-4a6a-8319-a5d955f3f83b.png)

## Применение

* Любая область, где могут быть применены методы машинного обучения для обработки данных. От банковской сферы до медицины. 
* Может быть применен для решения различных комбинаторных задач, к которым относятся задачи компоновки, задачи на графах и прочие. 
* Применяется для ускорения настройки нейронных сетей.

## Уcтановка и настройка
Порядок установки и настройки описан в документе [руководство пользователя](https://github.com/comptech-winter-school/genetic-potioncraft/blob/main/docs/source/user_guide.md)

## Роли в команде
* Косарецкий Егор - Data Scientist
* Гераскин Степан - Data Scientist
* Кристина Светова - Визуализатор
* Шперлинг Софья - Data Scientist
* Валерия - Data Scientist
* Новикова Валентина - Технический писатель

## Куратор
[Радеев Никита Андреевич](https://t.me/rdvnkt), Machine Learning Engineer,
Новосибирский Исследовательский центр
ООО "Техкомпания Хуавей"


