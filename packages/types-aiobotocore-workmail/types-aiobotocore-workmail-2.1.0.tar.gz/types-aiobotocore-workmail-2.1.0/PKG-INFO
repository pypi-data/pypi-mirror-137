Metadata-Version: 2.1
Name: types-aiobotocore-workmail
Version: 2.1.0
Summary: Type annotations for aiobotocore.WorkMail 2.1.0 service generated by mypy-boto3-builder 6.4.2
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: aiobotocore workmail type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown

<a id="mypy-boto3-workmail"></a>

# mypy-boto3-workmail

[![PyPI - types-aiobotocore-workmail](https://img.shields.io/pypi/v/types-aiobotocore-workmail.svg?color=blue)](https://pypi.org/project/types-aiobotocore-workmail)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-workmail.svg?color=blue)](https://pypi.org/project/types-aiobotocore-workmail)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-workmail?color=blue)](https://pypistats.org/packages/types-aiobotocore-workmail)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[boto3.WorkMail 1.20.47](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/workmail.html#WorkMail)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 6.4.2](https://github.com/vemel/mypy_boto3_builder).

More information can be found on
[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
[types-aiobotocore-workmail docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_workmail/)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/main/demo.gif)

- [mypy-boto3-workmail](#mypy-boto3-workmail)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `WorkMail`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `WorkMail` service.

```bash
python -m pip install types-aiobotocore[workmail]
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[workmail]` in your environment:
  `python -m pip install 'types-aiobotocore[workmail]'`

Both type checking and auto-complete should work for `WorkMail` service. No
explicit type annotations required, write your `boto3` code as usual.

<a id="pycharm"></a>

### PyCharm

- Install `types-aiobotocore[workmail]` in your environment:
  `python -m pip install 'types-aiobotocore[workmail]'`

Both type checking and auto-complete should work for `WorkMail` service. No
explicit type annotations required, write your `aiobotocore` code as usual.
Auto-complete can be slow on big projects or if you have a lot of installed
`types-aiobotocore` submodules.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[workmail]` in your environment:
  `python -m pip install 'types-aiobotocore[workmail]'`
- Run `mypy` as usual

Type checking should work for `WorkMail` service. No explicit type annotations
required, write your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `types-aiobotocore[workmail]` in your environment:
  `python -m pip install 'types-aiobotocore[workmail]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `WorkMail` service. No explicit type annotations
required, write your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`WorkMailClient` provides annotations for `session.create_client("workmail")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_workmail import WorkMailClient

session = get_session()
with async session.create_client("workmail") as client:
    client: WorkMailClient
    # now client usage is checked by mypy and IDE should provide code auto-complete
```

<a id="paginators-annotations"></a>

### Paginators annotations

`types_aiobotocore_workmail.paginator` module contains type annotations for all
paginators.

````python
from aiobotocore.session import get_session

from types_aiobotocore_workmail import WorkMailClient
from types_aiobotocore_workmail.paginator import (
    ListAliasesPaginator,
    ListGroupMembersPaginator,
    ListGroupsPaginator,
    ListMailboxPermissionsPaginator,
    ListOrganizationsPaginator,
    ListResourceDelegatesPaginator,
    ListResourcesPaginator,
    ListUsersPaginator,
)

session = get_session()
with async session.create_client("workmail") as client:
    client: WorkMailClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        list_aliases_paginator: ListAliasesPaginator = client.get_paginator("list_aliases")
        list_group_members_paginator: ListGroupMembersPaginator = client.get_paginator("list_group_members")
        list_groups_paginator: ListGroupsPaginator = client.get_paginator("list_groups")
        list_mailbox_permissions_paginator: ListMailboxPermissionsPaginator = client.get_paginator("list_mailbox_permissions")
        list_organizations_paginator: ListOrganizationsPaginator = client.get_paginator("list_organizations")
        list_resource_delegates_paginator: ListResourceDelegatesPaginator = client.get_paginator("list_resource_delegates")
        list_resources_paginator: ListResourcesPaginator = client.get_paginator("list_resources")
        list_users_paginator: ListUsersPaginator = client.get_paginator("list_users")
    ```







### Literals

`types_aiobotocore_workmail.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from types_aiobotocore_workmail.literals import (
    AccessControlRuleEffectType,
    DnsRecordVerificationStatusType,
    EntityStateType,
    FolderNameType,
    ListAliasesPaginatorName,
    ListGroupMembersPaginatorName,
    ListGroupsPaginatorName,
    ListMailboxPermissionsPaginatorName,
    ListOrganizationsPaginatorName,
    ListResourceDelegatesPaginatorName,
    ListResourcesPaginatorName,
    ListUsersPaginatorName,
    MailboxExportJobStateType,
    MemberTypeType,
    MobileDeviceAccessRuleEffectType,
    PermissionTypeType,
    ResourceTypeType,
    RetentionActionType,
    UserRoleType,
    ServiceName,
    PaginatorName,
)

def check_value(value: AccessControlRuleEffectType) -> bool:
    ...
````

### Typed dictionaries

`types_aiobotocore_workmail.type_defs` module contains structures and shapes
assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_workmail.type_defs import (
    AccessControlRuleTypeDef,
    AssociateDelegateToResourceRequestRequestTypeDef,
    AssociateMemberToGroupRequestRequestTypeDef,
    BookingOptionsTypeDef,
    CancelMailboxExportJobRequestRequestTypeDef,
    CreateAliasRequestRequestTypeDef,
    CreateGroupRequestRequestTypeDef,
    CreateGroupResponseTypeDef,
    CreateMobileDeviceAccessRuleRequestRequestTypeDef,
    CreateMobileDeviceAccessRuleResponseTypeDef,
    CreateOrganizationRequestRequestTypeDef,
    CreateOrganizationResponseTypeDef,
    CreateResourceRequestRequestTypeDef,
    CreateResourceResponseTypeDef,
    CreateUserRequestRequestTypeDef,
    CreateUserResponseTypeDef,
    DelegateTypeDef,
    DeleteAccessControlRuleRequestRequestTypeDef,
    DeleteAliasRequestRequestTypeDef,
    DeleteGroupRequestRequestTypeDef,
    DeleteMailboxPermissionsRequestRequestTypeDef,
    DeleteMobileDeviceAccessOverrideRequestRequestTypeDef,
    DeleteMobileDeviceAccessRuleRequestRequestTypeDef,
    DeleteOrganizationRequestRequestTypeDef,
    DeleteOrganizationResponseTypeDef,
    DeleteResourceRequestRequestTypeDef,
    DeleteRetentionPolicyRequestRequestTypeDef,
    DeleteUserRequestRequestTypeDef,
    DeregisterFromWorkMailRequestRequestTypeDef,
    DeregisterMailDomainRequestRequestTypeDef,
    DescribeGroupRequestRequestTypeDef,
    DescribeGroupResponseTypeDef,
    DescribeInboundDmarcSettingsRequestRequestTypeDef,
    DescribeInboundDmarcSettingsResponseTypeDef,
    DescribeMailboxExportJobRequestRequestTypeDef,
    DescribeMailboxExportJobResponseTypeDef,
    DescribeOrganizationRequestRequestTypeDef,
    DescribeOrganizationResponseTypeDef,
    DescribeResourceRequestRequestTypeDef,
    DescribeResourceResponseTypeDef,
    DescribeUserRequestRequestTypeDef,
    DescribeUserResponseTypeDef,
    DisassociateDelegateFromResourceRequestRequestTypeDef,
    DisassociateMemberFromGroupRequestRequestTypeDef,
    DnsRecordTypeDef,
    DomainTypeDef,
    FolderConfigurationTypeDef,
    GetAccessControlEffectRequestRequestTypeDef,
    GetAccessControlEffectResponseTypeDef,
    GetDefaultRetentionPolicyRequestRequestTypeDef,
    GetDefaultRetentionPolicyResponseTypeDef,
    GetMailDomainRequestRequestTypeDef,
    GetMailDomainResponseTypeDef,
    GetMailboxDetailsRequestRequestTypeDef,
    GetMailboxDetailsResponseTypeDef,
    GetMobileDeviceAccessEffectRequestRequestTypeDef,
    GetMobileDeviceAccessEffectResponseTypeDef,
    GetMobileDeviceAccessOverrideRequestRequestTypeDef,
    GetMobileDeviceAccessOverrideResponseTypeDef,
    GroupTypeDef,
    ListAccessControlRulesRequestRequestTypeDef,
    ListAccessControlRulesResponseTypeDef,
    ListAliasesRequestRequestTypeDef,
    ListAliasesResponseTypeDef,
    ListGroupMembersRequestRequestTypeDef,
    ListGroupMembersResponseTypeDef,
    ListGroupsRequestRequestTypeDef,
    ListGroupsResponseTypeDef,
    ListMailDomainsRequestRequestTypeDef,
    ListMailDomainsResponseTypeDef,
    ListMailboxExportJobsRequestRequestTypeDef,
    ListMailboxExportJobsResponseTypeDef,
    ListMailboxPermissionsRequestRequestTypeDef,
    ListMailboxPermissionsResponseTypeDef,
    ListMobileDeviceAccessOverridesRequestRequestTypeDef,
    ListMobileDeviceAccessOverridesResponseTypeDef,
    ListMobileDeviceAccessRulesRequestRequestTypeDef,
    ListMobileDeviceAccessRulesResponseTypeDef,
    ListOrganizationsRequestRequestTypeDef,
    ListOrganizationsResponseTypeDef,
    ListResourceDelegatesRequestRequestTypeDef,
    ListResourceDelegatesResponseTypeDef,
    ListResourcesRequestRequestTypeDef,
    ListResourcesResponseTypeDef,
    ListTagsForResourceRequestRequestTypeDef,
    ListTagsForResourceResponseTypeDef,
    ListUsersRequestRequestTypeDef,
    ListUsersResponseTypeDef,
    MailDomainSummaryTypeDef,
    MailboxExportJobTypeDef,
    MemberTypeDef,
    MobileDeviceAccessMatchedRuleTypeDef,
    MobileDeviceAccessOverrideTypeDef,
    MobileDeviceAccessRuleTypeDef,
    OrganizationSummaryTypeDef,
    PaginatorConfigTypeDef,
    PermissionTypeDef,
    PutAccessControlRuleRequestRequestTypeDef,
    PutInboundDmarcSettingsRequestRequestTypeDef,
    PutMailboxPermissionsRequestRequestTypeDef,
    PutMobileDeviceAccessOverrideRequestRequestTypeDef,
    PutRetentionPolicyRequestRequestTypeDef,
    RegisterMailDomainRequestRequestTypeDef,
    RegisterToWorkMailRequestRequestTypeDef,
    ResetPasswordRequestRequestTypeDef,
    ResourceTypeDef,
    ResponseMetadataTypeDef,
    StartMailboxExportJobRequestRequestTypeDef,
    StartMailboxExportJobResponseTypeDef,
    TagResourceRequestRequestTypeDef,
    TagTypeDef,
    UntagResourceRequestRequestTypeDef,
    UpdateDefaultMailDomainRequestRequestTypeDef,
    UpdateMailboxQuotaRequestRequestTypeDef,
    UpdateMobileDeviceAccessRuleRequestRequestTypeDef,
    UpdatePrimaryEmailAddressRequestRequestTypeDef,
    UpdateResourceRequestRequestTypeDef,
    UserTypeDef,
)

def get_structure() -> AccessControlRuleTypeDef:
    return {
      ...
    }
```

## Versioning

`types-aiobotocore-workmail` version is the same as related `boto3` version and
follows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

## Documentation

All type annotations can be found in
[types-aiobotocore-workmail docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_workmail/)

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder/issues/)
repository.


