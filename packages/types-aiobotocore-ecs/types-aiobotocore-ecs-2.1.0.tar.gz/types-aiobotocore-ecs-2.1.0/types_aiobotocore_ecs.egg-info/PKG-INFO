Metadata-Version: 2.1
Name: types-aiobotocore-ecs
Version: 2.1.0
Summary: Type annotations for aiobotocore.ECS 2.1.0 service generated by mypy-boto3-builder 6.4.2
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: aiobotocore ecs type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown

<a id="mypy-boto3-ecs"></a>

# mypy-boto3-ecs

[![PyPI - types-aiobotocore-ecs](https://img.shields.io/pypi/v/types-aiobotocore-ecs.svg?color=blue)](https://pypi.org/project/types-aiobotocore-ecs)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-ecs.svg?color=blue)](https://pypi.org/project/types-aiobotocore-ecs)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-ecs?color=blue)](https://pypistats.org/packages/types-aiobotocore-ecs)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[boto3.ECS 1.20.47](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ecs.html#ECS)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 6.4.2](https://github.com/vemel/mypy_boto3_builder).

More information can be found on
[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
[types-aiobotocore-ecs docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_ecs/)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/main/demo.gif)

- [mypy-boto3-ecs](#mypy-boto3-ecs)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)
    - [Literals](#literals)
    - [Typed dictionaries](#typed-dictionaries)
  - [Versioning](#versioning)
  - [Documentation](#documentation)
  - [Support and contributing](#support-and-contributing)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `ECS`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `ECS` service.

```bash
python -m pip install types-aiobotocore[ecs]
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[ecs]` in your environment:
  `python -m pip install 'types-aiobotocore[ecs]'`

Both type checking and auto-complete should work for `ECS` service. No explicit
type annotations required, write your `boto3` code as usual.

<a id="pycharm"></a>

### PyCharm

- Install `types-aiobotocore[ecs]` in your environment:
  `python -m pip install 'types-aiobotocore[ecs]'`

Both type checking and auto-complete should work for `ECS` service. No explicit
type annotations required, write your `aiobotocore` code as usual.
Auto-complete can be slow on big projects or if you have a lot of installed
`types-aiobotocore` submodules.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[ecs]` in your environment:
  `python -m pip install 'types-aiobotocore[ecs]'`
- Run `mypy` as usual

Type checking should work for `ECS` service. No explicit type annotations
required, write your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `types-aiobotocore[ecs]` in your environment:
  `python -m pip install 'types-aiobotocore[ecs]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `ECS` service. No explicit type annotations
required, write your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`ECSClient` provides annotations for `session.create_client("ecs")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_ecs import ECSClient

session = get_session()
with async session.create_client("ecs") as client:
    client: ECSClient
    # now client usage is checked by mypy and IDE should provide code auto-complete
```

<a id="paginators-annotations"></a>

### Paginators annotations

`types_aiobotocore_ecs.paginator` module contains type annotations for all
paginators.

````python
from aiobotocore.session import get_session

from types_aiobotocore_ecs import ECSClient
from types_aiobotocore_ecs.paginator import (
    ListAccountSettingsPaginator,
    ListAttributesPaginator,
    ListClustersPaginator,
    ListContainerInstancesPaginator,
    ListServicesPaginator,
    ListTaskDefinitionFamiliesPaginator,
    ListTaskDefinitionsPaginator,
    ListTasksPaginator,
)

session = get_session()
with async session.create_client("ecs") as client:
    client: ECSClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        list_account_settings_paginator: ListAccountSettingsPaginator = client.get_paginator("list_account_settings")
        list_attributes_paginator: ListAttributesPaginator = client.get_paginator("list_attributes")
        list_clusters_paginator: ListClustersPaginator = client.get_paginator("list_clusters")
        list_container_instances_paginator: ListContainerInstancesPaginator = client.get_paginator("list_container_instances")
        list_services_paginator: ListServicesPaginator = client.get_paginator("list_services")
        list_task_definition_families_paginator: ListTaskDefinitionFamiliesPaginator = client.get_paginator("list_task_definition_families")
        list_task_definitions_paginator: ListTaskDefinitionsPaginator = client.get_paginator("list_task_definitions")
        list_tasks_paginator: ListTasksPaginator = client.get_paginator("list_tasks")
    ```


### Waiters annotations

`types_aiobotocore_ecs.waiter` module contains type annotations for all waiters.

```python
from aiobotocore.session import get_session

from types_aiobotocore_ecs.client import ECSClient
from types_aiobotocore_ecs.waiter import (
    ServicesInactiveWaiter,
    ServicesStableWaiter,
    TasksRunningWaiter,
    TasksStoppedWaiter,
)

session = get_session()
with async session.create_client("ecs") as client:
    client: ECSClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        services_inactive_waiter: ServicesInactiveWaiter = client.get_waiter("services_inactive")
        services_stable_waiter: ServicesStableWaiter = client.get_waiter("services_stable")
        tasks_running_waiter: TasksRunningWaiter = client.get_waiter("tasks_running")
        tasks_stopped_waiter: TasksStoppedWaiter = client.get_waiter("tasks_stopped")
    ```





<a id="literals"></a>

### Literals

`types_aiobotocore_ecs.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from types_aiobotocore_ecs.literals import (
    AgentUpdateStatusType,
    AssignPublicIpType,
    CPUArchitectureType,
    CapacityProviderFieldType,
    CapacityProviderStatusType,
    CapacityProviderUpdateStatusType,
    ClusterFieldType,
    ClusterSettingNameType,
    CompatibilityType,
    ConnectivityType,
    ContainerConditionType,
    ContainerInstanceFieldType,
    ContainerInstanceStatusType,
    DeploymentControllerTypeType,
    DeploymentRolloutStateType,
    DesiredStatusType,
    DeviceCgroupPermissionType,
    EFSAuthorizationConfigIAMType,
    EFSTransitEncryptionType,
    EnvironmentFileTypeType,
    ExecuteCommandLoggingType,
    FirelensConfigurationTypeType,
    HealthStatusType,
    InstanceHealthCheckStateType,
    InstanceHealthCheckTypeType,
    IpcModeType,
    LaunchTypeType,
    ListAccountSettingsPaginatorName,
    ListAttributesPaginatorName,
    ListClustersPaginatorName,
    ListContainerInstancesPaginatorName,
    ListServicesPaginatorName,
    ListTaskDefinitionFamiliesPaginatorName,
    ListTaskDefinitionsPaginatorName,
    ListTasksPaginatorName,
    LogDriverType,
    ManagedAgentNameType,
    ManagedScalingStatusType,
    ManagedTerminationProtectionType,
    NetworkModeType,
    OSFamilyType,
    PidModeType,
    PlacementConstraintTypeType,
    PlacementStrategyTypeType,
    PlatformDeviceTypeType,
    PropagateTagsType,
    ProxyConfigurationTypeType,
    ResourceTypeType,
    ScaleUnitType,
    SchedulingStrategyType,
    ScopeType,
    ServiceFieldType,
    ServicesInactiveWaiterName,
    ServicesStableWaiterName,
    SettingNameType,
    SortOrderType,
    StabilityStatusType,
    TargetTypeType,
    TaskDefinitionFamilyStatusType,
    TaskDefinitionFieldType,
    TaskDefinitionPlacementConstraintTypeType,
    TaskDefinitionStatusType,
    TaskFieldType,
    TaskSetFieldType,
    TaskStopCodeType,
    TasksRunningWaiterName,
    TasksStoppedWaiterName,
    TransportProtocolType,
    UlimitNameType,
    ServiceName,
    PaginatorName,
    WaiterName,
)

def check_value(value: AgentUpdateStatusType) -> bool:
    ...
````

<a id="typed-dictionaries"></a>

### Typed dictionaries

`types_aiobotocore_ecs.type_defs` module contains structures and shapes
assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_ecs.type_defs import (
    AttachmentStateChangeTypeDef,
    AttachmentTypeDef,
    AttributeTypeDef,
    AutoScalingGroupProviderTypeDef,
    AutoScalingGroupProviderUpdateTypeDef,
    AwsVpcConfigurationTypeDef,
    CapacityProviderStrategyItemTypeDef,
    CapacityProviderTypeDef,
    ClusterConfigurationTypeDef,
    ClusterSettingTypeDef,
    ClusterTypeDef,
    ContainerDefinitionTypeDef,
    ContainerDependencyTypeDef,
    ContainerInstanceHealthStatusTypeDef,
    ContainerInstanceTypeDef,
    ContainerOverrideTypeDef,
    ContainerStateChangeTypeDef,
    ContainerTypeDef,
    CreateCapacityProviderRequestRequestTypeDef,
    CreateCapacityProviderResponseTypeDef,
    CreateClusterRequestRequestTypeDef,
    CreateClusterResponseTypeDef,
    CreateServiceRequestRequestTypeDef,
    CreateServiceResponseTypeDef,
    CreateTaskSetRequestRequestTypeDef,
    CreateTaskSetResponseTypeDef,
    DeleteAccountSettingRequestRequestTypeDef,
    DeleteAccountSettingResponseTypeDef,
    DeleteAttributesRequestRequestTypeDef,
    DeleteAttributesResponseTypeDef,
    DeleteCapacityProviderRequestRequestTypeDef,
    DeleteCapacityProviderResponseTypeDef,
    DeleteClusterRequestRequestTypeDef,
    DeleteClusterResponseTypeDef,
    DeleteServiceRequestRequestTypeDef,
    DeleteServiceResponseTypeDef,
    DeleteTaskSetRequestRequestTypeDef,
    DeleteTaskSetResponseTypeDef,
    DeploymentCircuitBreakerTypeDef,
    DeploymentConfigurationTypeDef,
    DeploymentControllerTypeDef,
    DeploymentTypeDef,
    DeregisterContainerInstanceRequestRequestTypeDef,
    DeregisterContainerInstanceResponseTypeDef,
    DeregisterTaskDefinitionRequestRequestTypeDef,
    DeregisterTaskDefinitionResponseTypeDef,
    DescribeCapacityProvidersRequestRequestTypeDef,
    DescribeCapacityProvidersResponseTypeDef,
    DescribeClustersRequestRequestTypeDef,
    DescribeClustersResponseTypeDef,
    DescribeContainerInstancesRequestRequestTypeDef,
    DescribeContainerInstancesResponseTypeDef,
    DescribeServicesRequestRequestTypeDef,
    DescribeServicesResponseTypeDef,
    DescribeTaskDefinitionRequestRequestTypeDef,
    DescribeTaskDefinitionResponseTypeDef,
    DescribeTaskSetsRequestRequestTypeDef,
    DescribeTaskSetsResponseTypeDef,
    DescribeTasksRequestRequestTypeDef,
    DescribeTasksResponseTypeDef,
    DeviceTypeDef,
    DiscoverPollEndpointRequestRequestTypeDef,
    DiscoverPollEndpointResponseTypeDef,
    DockerVolumeConfigurationTypeDef,
    EFSAuthorizationConfigTypeDef,
    EFSVolumeConfigurationTypeDef,
    EnvironmentFileTypeDef,
    EphemeralStorageTypeDef,
    ExecuteCommandConfigurationTypeDef,
    ExecuteCommandLogConfigurationTypeDef,
    ExecuteCommandRequestRequestTypeDef,
    ExecuteCommandResponseTypeDef,
    FSxWindowsFileServerAuthorizationConfigTypeDef,
    FSxWindowsFileServerVolumeConfigurationTypeDef,
    FailureTypeDef,
    FirelensConfigurationTypeDef,
    HealthCheckTypeDef,
    HostEntryTypeDef,
    HostVolumePropertiesTypeDef,
    InferenceAcceleratorOverrideTypeDef,
    InferenceAcceleratorTypeDef,
    InstanceHealthCheckResultTypeDef,
    KernelCapabilitiesTypeDef,
    KeyValuePairTypeDef,
    LinuxParametersTypeDef,
    ListAccountSettingsRequestRequestTypeDef,
    ListAccountSettingsResponseTypeDef,
    ListAttributesRequestRequestTypeDef,
    ListAttributesResponseTypeDef,
    ListClustersRequestRequestTypeDef,
    ListClustersResponseTypeDef,
    ListContainerInstancesRequestRequestTypeDef,
    ListContainerInstancesResponseTypeDef,
    ListServicesRequestRequestTypeDef,
    ListServicesResponseTypeDef,
    ListTagsForResourceRequestRequestTypeDef,
    ListTagsForResourceResponseTypeDef,
    ListTaskDefinitionFamiliesRequestRequestTypeDef,
    ListTaskDefinitionFamiliesResponseTypeDef,
    ListTaskDefinitionsRequestRequestTypeDef,
    ListTaskDefinitionsResponseTypeDef,
    ListTasksRequestRequestTypeDef,
    ListTasksResponseTypeDef,
    LoadBalancerTypeDef,
    LogConfigurationTypeDef,
    ManagedAgentStateChangeTypeDef,
    ManagedAgentTypeDef,
    ManagedScalingTypeDef,
    MountPointTypeDef,
    NetworkBindingTypeDef,
    NetworkConfigurationTypeDef,
    NetworkInterfaceTypeDef,
    PaginatorConfigTypeDef,
    PlacementConstraintTypeDef,
    PlacementStrategyTypeDef,
    PlatformDeviceTypeDef,
    PortMappingTypeDef,
    ProxyConfigurationTypeDef,
    PutAccountSettingDefaultRequestRequestTypeDef,
    PutAccountSettingDefaultResponseTypeDef,
    PutAccountSettingRequestRequestTypeDef,
    PutAccountSettingResponseTypeDef,
    PutAttributesRequestRequestTypeDef,
    PutAttributesResponseTypeDef,
    PutClusterCapacityProvidersRequestRequestTypeDef,
    PutClusterCapacityProvidersResponseTypeDef,
    RegisterContainerInstanceRequestRequestTypeDef,
    RegisterContainerInstanceResponseTypeDef,
    RegisterTaskDefinitionRequestRequestTypeDef,
    RegisterTaskDefinitionResponseTypeDef,
    RepositoryCredentialsTypeDef,
    ResourceRequirementTypeDef,
    ResourceTypeDef,
    ResponseMetadataTypeDef,
    RunTaskRequestRequestTypeDef,
    RunTaskResponseTypeDef,
    RuntimePlatformTypeDef,
    ScaleTypeDef,
    SecretTypeDef,
    ServiceEventTypeDef,
    ServiceRegistryTypeDef,
    ServiceTypeDef,
    SessionTypeDef,
    SettingTypeDef,
    StartTaskRequestRequestTypeDef,
    StartTaskResponseTypeDef,
    StopTaskRequestRequestTypeDef,
    StopTaskResponseTypeDef,
    SubmitAttachmentStateChangesRequestRequestTypeDef,
    SubmitAttachmentStateChangesResponseTypeDef,
    SubmitContainerStateChangeRequestRequestTypeDef,
    SubmitContainerStateChangeResponseTypeDef,
    SubmitTaskStateChangeRequestRequestTypeDef,
    SubmitTaskStateChangeResponseTypeDef,
    SystemControlTypeDef,
    TagResourceRequestRequestTypeDef,
    TagTypeDef,
    TaskDefinitionPlacementConstraintTypeDef,
    TaskDefinitionTypeDef,
    TaskOverrideTypeDef,
    TaskSetTypeDef,
    TaskTypeDef,
    TmpfsTypeDef,
    UlimitTypeDef,
    UntagResourceRequestRequestTypeDef,
    UpdateCapacityProviderRequestRequestTypeDef,
    UpdateCapacityProviderResponseTypeDef,
    UpdateClusterRequestRequestTypeDef,
    UpdateClusterResponseTypeDef,
    UpdateClusterSettingsRequestRequestTypeDef,
    UpdateClusterSettingsResponseTypeDef,
    UpdateContainerAgentRequestRequestTypeDef,
    UpdateContainerAgentResponseTypeDef,
    UpdateContainerInstancesStateRequestRequestTypeDef,
    UpdateContainerInstancesStateResponseTypeDef,
    UpdateServicePrimaryTaskSetRequestRequestTypeDef,
    UpdateServicePrimaryTaskSetResponseTypeDef,
    UpdateServiceRequestRequestTypeDef,
    UpdateServiceResponseTypeDef,
    UpdateTaskSetRequestRequestTypeDef,
    UpdateTaskSetResponseTypeDef,
    VersionInfoTypeDef,
    VolumeFromTypeDef,
    VolumeTypeDef,
    WaiterConfigTypeDef,
)

def get_structure() -> AttachmentStateChangeTypeDef:
    return {
      ...
    }
```

<a id="versioning"></a>

## Versioning

`types-aiobotocore-ecs` version is the same as related `boto3` version and
follows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

<a id="documentation"></a>

## Documentation

All type annotations can be found in
[types-aiobotocore-ecs docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_ecs/)

<a id="support-and-contributing"></a>

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder/issues/)
repository.


