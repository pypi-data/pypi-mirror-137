[tool.poetry]
name = "funk-lines"
version = "0.1.0"
description = "Funk Lines"
authors = ["Federico Oberndorfer <federico.ober@hotmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/federicober/funk-lines"
repository = "https://github.com/federicober/funk-lines"
documentation = "https://funk-lines.readthedocs.io"
classifiers = [
    "Programming Language :: Python :: 3.10",
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry.urls]
Changelog = "https://github.com/federicober/funk-lines/releases"

[tool.poetry.dependencies]
python = "^3.10.2"
rich = "^11.1.0"
typer = "^0.4.0"

[tool.poetry.dev-dependencies]
pytest = "^7.0.0"
coverage = {extras = ["toml"], version = "^5.2"}
safety = "^1.10.3"
mypy = "^0.931"
flake8 = "^4.0.1"
isort = "^5.10.1"
pylint = "^2.12.2"
bandit = "^1.7.2"
black = "^22.1.0"
types-setuptools = "^57.4.8"
pytest-cov = "^3.0.0"

[tool.poetry.scripts]
funk-lines = "funk_lines.__main__:app"

[tool.pytest.ini_options]
addopts = [
    "--cov=funk_lines",
    "--cov-report=term-missing",
    "--quiet"
]
testpaths = ["tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["funk_lines"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "if t.TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError()",
]

[tool.black]
line-length = 100

exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''
[tool.isort]
profile = "black"
known_first_party = "funk_lines"
line_length = 100
src_paths = ["src", "tests"]

[tool.mypy]
show_error_codes = true
strict = true
exclude = [
    "venv",
    ".venv",
]
