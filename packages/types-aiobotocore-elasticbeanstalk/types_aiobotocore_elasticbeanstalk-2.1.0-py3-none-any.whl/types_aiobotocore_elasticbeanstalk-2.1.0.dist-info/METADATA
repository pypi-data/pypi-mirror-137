Metadata-Version: 2.1
Name: types-aiobotocore-elasticbeanstalk
Version: 2.1.0
Summary: Type annotations for aiobotocore.ElasticBeanstalk 2.1.0 service generated by mypy-boto3-builder 6.4.2
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: aiobotocore elasticbeanstalk type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions ; python_version < "3.9"

<a id="mypy-boto3-elasticbeanstalk"></a>

# mypy-boto3-elasticbeanstalk

[![PyPI - types-aiobotocore-elasticbeanstalk](https://img.shields.io/pypi/v/types-aiobotocore-elasticbeanstalk.svg?color=blue)](https://pypi.org/project/types-aiobotocore-elasticbeanstalk)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-elasticbeanstalk.svg?color=blue)](https://pypi.org/project/types-aiobotocore-elasticbeanstalk)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-elasticbeanstalk?color=blue)](https://pypistats.org/packages/types-aiobotocore-elasticbeanstalk)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[boto3.ElasticBeanstalk 1.20.47](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/elasticbeanstalk.html#ElasticBeanstalk)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 6.4.2](https://github.com/vemel/mypy_boto3_builder).

More information can be found on
[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
[types-aiobotocore-elasticbeanstalk docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_elasticbeanstalk/)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/main/demo.gif)

- [mypy-boto3-elasticbeanstalk](#mypy-boto3-elasticbeanstalk)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)
    - [Literals](#literals)
    - [Typed dictionaries](#typed-dictionaries)
  - [Versioning](#versioning)
  - [Documentation](#documentation)
  - [Support and contributing](#support-and-contributing)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `ElasticBeanstalk`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `ElasticBeanstalk` service.

```bash
python -m pip install types-aiobotocore[elasticbeanstalk]
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[elasticbeanstalk]` in your environment:
  `python -m pip install 'types-aiobotocore[elasticbeanstalk]'`

Both type checking and auto-complete should work for `ElasticBeanstalk`
service. No explicit type annotations required, write your `boto3` code as
usual.

<a id="pycharm"></a>

### PyCharm

- Install `types-aiobotocore[elasticbeanstalk]` in your environment:
  `python -m pip install 'types-aiobotocore[elasticbeanstalk]'`

Both type checking and auto-complete should work for `ElasticBeanstalk`
service. No explicit type annotations required, write your `aiobotocore` code
as usual. Auto-complete can be slow on big projects or if you have a lot of
installed `types-aiobotocore` submodules.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[elasticbeanstalk]` in your environment:
  `python -m pip install 'types-aiobotocore[elasticbeanstalk]'`
- Run `mypy` as usual

Type checking should work for `ElasticBeanstalk` service. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `types-aiobotocore[elasticbeanstalk]` in your environment:
  `python -m pip install 'types-aiobotocore[elasticbeanstalk]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `ElasticBeanstalk` service. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`ElasticBeanstalkClient` provides annotations for
`session.create_client("elasticbeanstalk")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_elasticbeanstalk import ElasticBeanstalkClient

session = get_session()
with async session.create_client("elasticbeanstalk") as client:
    client: ElasticBeanstalkClient
    # now client usage is checked by mypy and IDE should provide code auto-complete
```

<a id="paginators-annotations"></a>

### Paginators annotations

`types_aiobotocore_elasticbeanstalk.paginator` module contains type annotations
for all paginators.

````python
from aiobotocore.session import get_session

from types_aiobotocore_elasticbeanstalk import ElasticBeanstalkClient
from types_aiobotocore_elasticbeanstalk.paginator import (
    DescribeApplicationVersionsPaginator,
    DescribeEnvironmentManagedActionHistoryPaginator,
    DescribeEnvironmentsPaginator,
    DescribeEventsPaginator,
    ListPlatformVersionsPaginator,
)

session = get_session()
with async session.create_client("elasticbeanstalk") as client:
    client: ElasticBeanstalkClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        describe_application_versions_paginator: DescribeApplicationVersionsPaginator = client.get_paginator("describe_application_versions")
        describe_environment_managed_action_history_paginator: DescribeEnvironmentManagedActionHistoryPaginator = client.get_paginator("describe_environment_managed_action_history")
        describe_environments_paginator: DescribeEnvironmentsPaginator = client.get_paginator("describe_environments")
        describe_events_paginator: DescribeEventsPaginator = client.get_paginator("describe_events")
        list_platform_versions_paginator: ListPlatformVersionsPaginator = client.get_paginator("list_platform_versions")
    ```


### Waiters annotations

`types_aiobotocore_elasticbeanstalk.waiter` module contains type annotations for all waiters.

```python
from aiobotocore.session import get_session

from types_aiobotocore_elasticbeanstalk.client import ElasticBeanstalkClient
from types_aiobotocore_elasticbeanstalk.waiter import (
    EnvironmentExistsWaiter,
    EnvironmentTerminatedWaiter,
    EnvironmentUpdatedWaiter,
)

session = get_session()
with async session.create_client("elasticbeanstalk") as client:
    client: ElasticBeanstalkClient

    # Explicit type annotations are optional here
    # Type should be correctly discovered by mypy and IDEs
    # VSCode requires explicit type annotations
        environment_exists_waiter: EnvironmentExistsWaiter = client.get_waiter("environment_exists")
        environment_terminated_waiter: EnvironmentTerminatedWaiter = client.get_waiter("environment_terminated")
        environment_updated_waiter: EnvironmentUpdatedWaiter = client.get_waiter("environment_updated")
    ```





<a id="literals"></a>

### Literals

`types_aiobotocore_elasticbeanstalk.literals` module contains literals extracted from shapes
that can be used in user code for type checking.

```python
from types_aiobotocore_elasticbeanstalk.literals import (
    ActionHistoryStatusType,
    ActionStatusType,
    ActionTypeType,
    ApplicationVersionStatusType,
    ComputeTypeType,
    ConfigurationDeploymentStatusType,
    ConfigurationOptionValueTypeType,
    DescribeApplicationVersionsPaginatorName,
    DescribeEnvironmentManagedActionHistoryPaginatorName,
    DescribeEnvironmentsPaginatorName,
    DescribeEventsPaginatorName,
    EnvironmentExistsWaiterName,
    EnvironmentHealthAttributeType,
    EnvironmentHealthStatusType,
    EnvironmentHealthType,
    EnvironmentInfoTypeType,
    EnvironmentStatusType,
    EnvironmentTerminatedWaiterName,
    EnvironmentUpdatedWaiterName,
    EventSeverityType,
    FailureTypeType,
    InstancesHealthAttributeType,
    ListPlatformVersionsPaginatorName,
    PlatformStatusType,
    SourceRepositoryType,
    SourceTypeType,
    ValidationSeverityType,
    ServiceName,
    PaginatorName,
    WaiterName,
)

def check_value(value: ActionHistoryStatusType) -> bool:
    ...
````

<a id="typed-dictionaries"></a>

### Typed dictionaries

`types_aiobotocore_elasticbeanstalk.type_defs` module contains structures and
shapes assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_elasticbeanstalk.type_defs import (
    AbortEnvironmentUpdateMessageRequestTypeDef,
    ApplicationDescriptionMessageTypeDef,
    ApplicationDescriptionTypeDef,
    ApplicationDescriptionsMessageTypeDef,
    ApplicationMetricsTypeDef,
    ApplicationResourceLifecycleConfigTypeDef,
    ApplicationResourceLifecycleDescriptionMessageTypeDef,
    ApplicationVersionDescriptionMessageTypeDef,
    ApplicationVersionDescriptionTypeDef,
    ApplicationVersionDescriptionsMessageTypeDef,
    ApplicationVersionLifecycleConfigTypeDef,
    ApplyEnvironmentManagedActionRequestRequestTypeDef,
    ApplyEnvironmentManagedActionResultTypeDef,
    AssociateEnvironmentOperationsRoleMessageRequestTypeDef,
    AutoScalingGroupTypeDef,
    BuildConfigurationTypeDef,
    BuilderTypeDef,
    CPUUtilizationTypeDef,
    CheckDNSAvailabilityMessageRequestTypeDef,
    CheckDNSAvailabilityResultMessageTypeDef,
    ComposeEnvironmentsMessageRequestTypeDef,
    ConfigurationOptionDescriptionTypeDef,
    ConfigurationOptionSettingTypeDef,
    ConfigurationOptionsDescriptionTypeDef,
    ConfigurationSettingsDescriptionResponseMetadataTypeDef,
    ConfigurationSettingsDescriptionTypeDef,
    ConfigurationSettingsDescriptionsTypeDef,
    ConfigurationSettingsValidationMessagesTypeDef,
    CreateApplicationMessageRequestTypeDef,
    CreateApplicationVersionMessageRequestTypeDef,
    CreateConfigurationTemplateMessageRequestTypeDef,
    CreateEnvironmentMessageRequestTypeDef,
    CreatePlatformVersionRequestRequestTypeDef,
    CreatePlatformVersionResultTypeDef,
    CreateStorageLocationResultMessageTypeDef,
    CustomAmiTypeDef,
    DeleteApplicationMessageRequestTypeDef,
    DeleteApplicationVersionMessageRequestTypeDef,
    DeleteConfigurationTemplateMessageRequestTypeDef,
    DeleteEnvironmentConfigurationMessageRequestTypeDef,
    DeletePlatformVersionRequestRequestTypeDef,
    DeletePlatformVersionResultTypeDef,
    DeploymentTypeDef,
    DescribeAccountAttributesResultTypeDef,
    DescribeApplicationVersionsMessageRequestTypeDef,
    DescribeApplicationsMessageRequestTypeDef,
    DescribeConfigurationOptionsMessageRequestTypeDef,
    DescribeConfigurationSettingsMessageRequestTypeDef,
    DescribeEnvironmentHealthRequestRequestTypeDef,
    DescribeEnvironmentHealthResultTypeDef,
    DescribeEnvironmentManagedActionHistoryRequestRequestTypeDef,
    DescribeEnvironmentManagedActionHistoryResultTypeDef,
    DescribeEnvironmentManagedActionsRequestRequestTypeDef,
    DescribeEnvironmentManagedActionsResultTypeDef,
    DescribeEnvironmentResourcesMessageRequestTypeDef,
    DescribeEnvironmentsMessageRequestTypeDef,
    DescribeEventsMessageRequestTypeDef,
    DescribeInstancesHealthRequestRequestTypeDef,
    DescribeInstancesHealthResultTypeDef,
    DescribePlatformVersionRequestRequestTypeDef,
    DescribePlatformVersionResultTypeDef,
    DisassociateEnvironmentOperationsRoleMessageRequestTypeDef,
    EnvironmentDescriptionResponseMetadataTypeDef,
    EnvironmentDescriptionTypeDef,
    EnvironmentDescriptionsMessageTypeDef,
    EnvironmentInfoDescriptionTypeDef,
    EnvironmentLinkTypeDef,
    EnvironmentResourceDescriptionTypeDef,
    EnvironmentResourceDescriptionsMessageTypeDef,
    EnvironmentResourcesDescriptionTypeDef,
    EnvironmentTierTypeDef,
    EventDescriptionTypeDef,
    EventDescriptionsMessageTypeDef,
    InstanceHealthSummaryTypeDef,
    InstanceTypeDef,
    LatencyTypeDef,
    LaunchConfigurationTypeDef,
    LaunchTemplateTypeDef,
    ListAvailableSolutionStacksResultMessageTypeDef,
    ListPlatformBranchesRequestRequestTypeDef,
    ListPlatformBranchesResultTypeDef,
    ListPlatformVersionsRequestRequestTypeDef,
    ListPlatformVersionsResultTypeDef,
    ListTagsForResourceMessageRequestTypeDef,
    ListenerTypeDef,
    LoadBalancerDescriptionTypeDef,
    LoadBalancerTypeDef,
    ManagedActionHistoryItemTypeDef,
    ManagedActionTypeDef,
    MaxAgeRuleTypeDef,
    MaxCountRuleTypeDef,
    OptionRestrictionRegexTypeDef,
    OptionSpecificationTypeDef,
    PaginatorConfigTypeDef,
    PlatformBranchSummaryTypeDef,
    PlatformDescriptionTypeDef,
    PlatformFilterTypeDef,
    PlatformFrameworkTypeDef,
    PlatformProgrammingLanguageTypeDef,
    PlatformSummaryTypeDef,
    QueueTypeDef,
    RebuildEnvironmentMessageRequestTypeDef,
    RequestEnvironmentInfoMessageRequestTypeDef,
    ResourceQuotaTypeDef,
    ResourceQuotasTypeDef,
    ResourceTagsDescriptionMessageTypeDef,
    ResponseMetadataTypeDef,
    RestartAppServerMessageRequestTypeDef,
    RetrieveEnvironmentInfoMessageRequestTypeDef,
    RetrieveEnvironmentInfoResultMessageTypeDef,
    S3LocationTypeDef,
    SearchFilterTypeDef,
    SingleInstanceHealthTypeDef,
    SolutionStackDescriptionTypeDef,
    SourceBuildInformationTypeDef,
    SourceConfigurationTypeDef,
    StatusCodesTypeDef,
    SwapEnvironmentCNAMEsMessageRequestTypeDef,
    SystemStatusTypeDef,
    TagTypeDef,
    TerminateEnvironmentMessageRequestTypeDef,
    TriggerTypeDef,
    UpdateApplicationMessageRequestTypeDef,
    UpdateApplicationResourceLifecycleMessageRequestTypeDef,
    UpdateApplicationVersionMessageRequestTypeDef,
    UpdateConfigurationTemplateMessageRequestTypeDef,
    UpdateEnvironmentMessageRequestTypeDef,
    UpdateTagsForResourceMessageRequestTypeDef,
    ValidateConfigurationSettingsMessageRequestTypeDef,
    ValidationMessageTypeDef,
    WaiterConfigTypeDef,
)

def get_structure() -> AbortEnvironmentUpdateMessageRequestTypeDef:
    return {
      ...
    }
```

<a id="versioning"></a>

## Versioning

`types-aiobotocore-elasticbeanstalk` version is the same as related `boto3`
version and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/)
format.

<a id="documentation"></a>

## Documentation

All type annotations can be found in
[types-aiobotocore-elasticbeanstalk docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_elasticbeanstalk/)

<a id="support-and-contributing"></a>

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder/issues/)
repository.


