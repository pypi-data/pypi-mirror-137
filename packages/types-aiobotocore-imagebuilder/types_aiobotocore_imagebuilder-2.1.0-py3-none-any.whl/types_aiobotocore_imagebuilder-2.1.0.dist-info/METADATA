Metadata-Version: 2.1
Name: types-aiobotocore-imagebuilder
Version: 2.1.0
Summary: Type annotations for aiobotocore.imagebuilder 2.1.0 service generated by mypy-boto3-builder 6.4.2
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: aiobotocore imagebuilder type-annotations boto3-stubs mypy typeshed autocomplete
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions ; python_version < "3.9"

<a id="mypy-boto3-imagebuilder"></a>

# mypy-boto3-imagebuilder

[![PyPI - types-aiobotocore-imagebuilder](https://img.shields.io/pypi/v/types-aiobotocore-imagebuilder.svg?color=blue)](https://pypi.org/project/types-aiobotocore-imagebuilder)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-imagebuilder.svg?color=blue)](https://pypi.org/project/types-aiobotocore-imagebuilder)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-imagebuilder?color=blue)](https://pypistats.org/packages/types-aiobotocore-imagebuilder)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/main/logo.png)

Type annotations for
[boto3.imagebuilder 1.20.47](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/imagebuilder.html#imagebuilder)
service compatible with [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright) and other tools.

Generated by
[mypy-boto3-builder 6.4.2](https://github.com/vemel/mypy_boto3_builder).

More information can be found on
[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in
[types-aiobotocore-imagebuilder docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_imagebuilder/)

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/main/demo.gif)

- [mypy-boto3-imagebuilder](#mypy-boto3-imagebuilder)
  - [How to install](#how-to-install)
    - [VSCode extension](#vscode-extension)
    - [From PyPI with pip](#from-pypi-with-pip)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Literals](#literals)
    - [Typed dictionaries](#typed-dictionaries)
  - [Versioning](#versioning)
  - [Documentation](#documentation)
  - [Support and contributing](#support-and-contributing)

<a id="how-to-install"></a>

## How to install

<a id="vscode-extension"></a>

### VSCode extension

Add
[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)
extension to your VSCode and run `AWS boto3: Quick Start` command.

Click `Modify` and select `boto3 common` and `imagebuilder`.

<a id="from-pypi-with-pip"></a>

### From PyPI with pip

Install `types-aiobotocore` for `imagebuilder` service.

```bash
python -m pip install types-aiobotocore[imagebuilder]
```

<a id="usage"></a>

## Usage

<a id="vscode"></a>

### VSCode

- Install
  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install
  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `types-aiobotocore[imagebuilder]` in your environment:
  `python -m pip install 'types-aiobotocore[imagebuilder]'`

Both type checking and auto-complete should work for `imagebuilder` service. No
explicit type annotations required, write your `boto3` code as usual.

<a id="pycharm"></a>

### PyCharm

- Install `types-aiobotocore[imagebuilder]` in your environment:
  `python -m pip install 'types-aiobotocore[imagebuilder]'`

Both type checking and auto-complete should work for `imagebuilder` service. No
explicit type annotations required, write your `aiobotocore` code as usual.
Auto-complete can be slow on big projects or if you have a lot of installed
`types-aiobotocore` submodules.

<a id="other-ides"></a>

### Other IDEs

Not tested, but as long as your IDE supports `mypy` or `pyright`, everything
should work.

<a id="mypy"></a>

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `types-aiobotocore[imagebuilder]` in your environment:
  `python -m pip install 'types-aiobotocore[imagebuilder]'`
- Run `mypy` as usual

Type checking should work for `imagebuilder` service. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="pyright"></a>

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `types-aiobotocore[imagebuilder]` in your environment:
  `python -m pip install 'types-aiobotocore[imagebuilder]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `imagebuilder` service. No explicit type
annotations required, write your `aiobotocore` code as usual.

<a id="explicit-type-annotations"></a>

## Explicit type annotations

<a id="client-annotations"></a>

### Client annotations

`imagebuilderClient` provides annotations for
`session.create_client("imagebuilder")`.

```python
from aiobotocore.session import get_session

from types_aiobotocore_imagebuilder import imagebuilderClient

session = get_session()
with async session.create_client("imagebuilder") as client:
    client: imagebuilderClient
    # now client usage is checked by mypy and IDE should provide code auto-complete
```

<a id="literals"></a>

### Literals

`types_aiobotocore_imagebuilder.literals` module contains literals extracted
from shapes that can be used in user code for type checking.

```python
from types_aiobotocore_imagebuilder.literals import (
    ComponentFormatType,
    ComponentStatusType,
    ComponentTypeType,
    ContainerRepositoryServiceType,
    ContainerTypeType,
    EbsVolumeTypeType,
    ImageStatusType,
    ImageTypeType,
    OwnershipType,
    PipelineExecutionStartConditionType,
    PipelineStatusType,
    PlatformType,
    ServiceName,
)

def check_value(value: ComponentFormatType) -> bool:
    ...
```

<a id="typed-dictionaries"></a>

### Typed dictionaries

`types_aiobotocore_imagebuilder.type_defs` module contains structures and
shapes assembled to typed dictionaries for additional type checking.

```python
from types_aiobotocore_imagebuilder.type_defs import (
    AdditionalInstanceConfigurationTypeDef,
    AmiDistributionConfigurationTypeDef,
    AmiTypeDef,
    CancelImageCreationRequestRequestTypeDef,
    CancelImageCreationResponseTypeDef,
    ComponentConfigurationTypeDef,
    ComponentParameterDetailTypeDef,
    ComponentParameterTypeDef,
    ComponentStateTypeDef,
    ComponentSummaryTypeDef,
    ComponentTypeDef,
    ComponentVersionTypeDef,
    ContainerDistributionConfigurationTypeDef,
    ContainerRecipeSummaryTypeDef,
    ContainerRecipeTypeDef,
    ContainerTypeDef,
    CreateComponentRequestRequestTypeDef,
    CreateComponentResponseTypeDef,
    CreateContainerRecipeRequestRequestTypeDef,
    CreateContainerRecipeResponseTypeDef,
    CreateDistributionConfigurationRequestRequestTypeDef,
    CreateDistributionConfigurationResponseTypeDef,
    CreateImagePipelineRequestRequestTypeDef,
    CreateImagePipelineResponseTypeDef,
    CreateImageRecipeRequestRequestTypeDef,
    CreateImageRecipeResponseTypeDef,
    CreateImageRequestRequestTypeDef,
    CreateImageResponseTypeDef,
    CreateInfrastructureConfigurationRequestRequestTypeDef,
    CreateInfrastructureConfigurationResponseTypeDef,
    DeleteComponentRequestRequestTypeDef,
    DeleteComponentResponseTypeDef,
    DeleteContainerRecipeRequestRequestTypeDef,
    DeleteContainerRecipeResponseTypeDef,
    DeleteDistributionConfigurationRequestRequestTypeDef,
    DeleteDistributionConfigurationResponseTypeDef,
    DeleteImagePipelineRequestRequestTypeDef,
    DeleteImagePipelineResponseTypeDef,
    DeleteImageRecipeRequestRequestTypeDef,
    DeleteImageRecipeResponseTypeDef,
    DeleteImageRequestRequestTypeDef,
    DeleteImageResponseTypeDef,
    DeleteInfrastructureConfigurationRequestRequestTypeDef,
    DeleteInfrastructureConfigurationResponseTypeDef,
    DistributionConfigurationSummaryTypeDef,
    DistributionConfigurationTypeDef,
    DistributionTypeDef,
    EbsInstanceBlockDeviceSpecificationTypeDef,
    FilterTypeDef,
    GetComponentPolicyRequestRequestTypeDef,
    GetComponentPolicyResponseTypeDef,
    GetComponentRequestRequestTypeDef,
    GetComponentResponseTypeDef,
    GetContainerRecipePolicyRequestRequestTypeDef,
    GetContainerRecipePolicyResponseTypeDef,
    GetContainerRecipeRequestRequestTypeDef,
    GetContainerRecipeResponseTypeDef,
    GetDistributionConfigurationRequestRequestTypeDef,
    GetDistributionConfigurationResponseTypeDef,
    GetImagePipelineRequestRequestTypeDef,
    GetImagePipelineResponseTypeDef,
    GetImagePolicyRequestRequestTypeDef,
    GetImagePolicyResponseTypeDef,
    GetImageRecipePolicyRequestRequestTypeDef,
    GetImageRecipePolicyResponseTypeDef,
    GetImageRecipeRequestRequestTypeDef,
    GetImageRecipeResponseTypeDef,
    GetImageRequestRequestTypeDef,
    GetImageResponseTypeDef,
    GetInfrastructureConfigurationRequestRequestTypeDef,
    GetInfrastructureConfigurationResponseTypeDef,
    ImagePackageTypeDef,
    ImagePipelineTypeDef,
    ImageRecipeSummaryTypeDef,
    ImageRecipeTypeDef,
    ImageStateTypeDef,
    ImageSummaryTypeDef,
    ImageTestsConfigurationTypeDef,
    ImageTypeDef,
    ImageVersionTypeDef,
    ImportComponentRequestRequestTypeDef,
    ImportComponentResponseTypeDef,
    InfrastructureConfigurationSummaryTypeDef,
    InfrastructureConfigurationTypeDef,
    InstanceBlockDeviceMappingTypeDef,
    InstanceConfigurationTypeDef,
    InstanceMetadataOptionsTypeDef,
    LaunchPermissionConfigurationTypeDef,
    LaunchTemplateConfigurationTypeDef,
    ListComponentBuildVersionsRequestRequestTypeDef,
    ListComponentBuildVersionsResponseTypeDef,
    ListComponentsRequestRequestTypeDef,
    ListComponentsResponseTypeDef,
    ListContainerRecipesRequestRequestTypeDef,
    ListContainerRecipesResponseTypeDef,
    ListDistributionConfigurationsRequestRequestTypeDef,
    ListDistributionConfigurationsResponseTypeDef,
    ListImageBuildVersionsRequestRequestTypeDef,
    ListImageBuildVersionsResponseTypeDef,
    ListImagePackagesRequestRequestTypeDef,
    ListImagePackagesResponseTypeDef,
    ListImagePipelineImagesRequestRequestTypeDef,
    ListImagePipelineImagesResponseTypeDef,
    ListImagePipelinesRequestRequestTypeDef,
    ListImagePipelinesResponseTypeDef,
    ListImageRecipesRequestRequestTypeDef,
    ListImageRecipesResponseTypeDef,
    ListImagesRequestRequestTypeDef,
    ListImagesResponseTypeDef,
    ListInfrastructureConfigurationsRequestRequestTypeDef,
    ListInfrastructureConfigurationsResponseTypeDef,
    ListTagsForResourceRequestRequestTypeDef,
    ListTagsForResourceResponseTypeDef,
    LoggingTypeDef,
    OutputResourcesTypeDef,
    PutComponentPolicyRequestRequestTypeDef,
    PutComponentPolicyResponseTypeDef,
    PutContainerRecipePolicyRequestRequestTypeDef,
    PutContainerRecipePolicyResponseTypeDef,
    PutImagePolicyRequestRequestTypeDef,
    PutImagePolicyResponseTypeDef,
    PutImageRecipePolicyRequestRequestTypeDef,
    PutImageRecipePolicyResponseTypeDef,
    ResponseMetadataTypeDef,
    S3LogsTypeDef,
    ScheduleTypeDef,
    StartImagePipelineExecutionRequestRequestTypeDef,
    StartImagePipelineExecutionResponseTypeDef,
    SystemsManagerAgentTypeDef,
    TagResourceRequestRequestTypeDef,
    TargetContainerRepositoryTypeDef,
    UntagResourceRequestRequestTypeDef,
    UpdateDistributionConfigurationRequestRequestTypeDef,
    UpdateDistributionConfigurationResponseTypeDef,
    UpdateImagePipelineRequestRequestTypeDef,
    UpdateImagePipelineResponseTypeDef,
    UpdateInfrastructureConfigurationRequestRequestTypeDef,
    UpdateInfrastructureConfigurationResponseTypeDef,
)

def get_structure() -> AdditionalInstanceConfigurationTypeDef:
    return {
      ...
    }
```

<a id="versioning"></a>

## Versioning

`types-aiobotocore-imagebuilder` version is the same as related `boto3` version
and follows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.

<a id="documentation"></a>

## Documentation

All type annotations can be found in
[types-aiobotocore-imagebuilder docs](https://vemel.github.io/types_aiobotocore_docs/types_aiobotocore_imagebuilder/)

<a id="support-and-contributing"></a>

## Support and contributing

This package is auto-generated. Please reports any bugs or request new features
in [mypy-boto3-builder](https://github.com/vemel/mypy_boto3_builder/issues/)
repository.


