# Generated by Django 3.2.9 on 2021-12-11 15:52

import uuid

import _socket
import django.contrib.sites.managers
import django.core.validators
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edc_model.models.validators.date
import edc_protocol.validators
import edc_utils.date
import edc_visit_tracking.managers
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("sites", "0002_alter_domain_unique"),
        ("mocca_subject", "0022_auto_20210413_1942"),
    ]

    operations = [
        migrations.AlterModelManagers(
            name="bloodresultslipid",
            managers=[
                ("on_site", django.contrib.sites.managers.CurrentSiteManager()),
                ("objects", edc_visit_tracking.managers.CrfModelManager()),
            ],
        ),
        migrations.RenameField(
            model_name="bloodresultslipid",
            old_name="lipid_assay_datetime",
            new_name="assay_datetime",
        ),
        migrations.RenameField(
            model_name="bloodresultslipid",
            old_name="hdl",
            new_name="hdl_value",
        ),
        migrations.RenameField(
            model_name="bloodresultslipid",
            old_name="ldl",
            new_name="ldl_value",
        ),
        migrations.RenameField(
            model_name="bloodresultslipid",
            old_name="trig",
            new_name="trig_value",
        ),
        migrations.RenameField(
            model_name="historicalbloodresultslipid",
            old_name="lipid_assay_datetime",
            new_name="assay_datetime",
        ),
        migrations.RenameField(
            model_name="historicalbloodresultslipid",
            old_name="hdl",
            new_name="hdl_value",
        ),
        migrations.RenameField(
            model_name="historicalbloodresultslipid",
            old_name="ldl",
            new_name="ldl_value",
        ),
        migrations.RenameField(
            model_name="historicalbloodresultslipid",
            old_name="lipid_requisition",
            new_name="requisition",
        ),
        migrations.RenameField(
            model_name="historicalbloodresultslipid",
            old_name="trig",
            new_name="trig_value",
        ),
        migrations.RenameField(
            model_name="bloodresultslipid",
            old_name="chol",
            new_name="chol_value",
        ),
        migrations.RenameField(
            model_name="historicalbloodresultslipid",
            old_name="chol",
            new_name="chol_value",
        ),
        migrations.RenameField(
            model_name="bloodresultslipid",
            old_name="lipid_requisition",
            new_name="requisition",
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="chol_grade",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Not graded"),
                    (1, "Grade 1"),
                    (2, "Grade 2"),
                    (3, "Grade 3"),
                    (4, "Grade 4"),
                    (5, "Grade 5"),
                ],
                null=True,
                verbose_name="Grade",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="chol_grade_description",
            field=models.CharField(
                blank=True, max_length=250, null=True, verbose_name="Grade description"
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="hdl_grade",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Not graded"),
                    (1, "Grade 1"),
                    (2, "Grade 2"),
                    (3, "Grade 3"),
                    (4, "Grade 4"),
                    (5, "Grade 5"),
                ],
                null=True,
                verbose_name="Grade",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="hdl_grade_description",
            field=models.CharField(
                blank=True, max_length=250, null=True, verbose_name="Grade description"
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="ldl_grade",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Not graded"),
                    (1, "Grade 1"),
                    (2, "Grade 2"),
                    (3, "Grade 3"),
                    (4, "Grade 4"),
                    (5, "Grade 5"),
                ],
                null=True,
                verbose_name="Grade",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="ldl_grade_description",
            field=models.CharField(
                blank=True, max_length=250, null=True, verbose_name="Grade description"
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="trig_grade",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Not graded"),
                    (1, "Grade 1"),
                    (2, "Grade 2"),
                    (3, "Grade 3"),
                    (4, "Grade 4"),
                    (5, "Grade 5"),
                ],
                null=True,
                verbose_name="Grade",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="trig_grade_description",
            field=models.CharField(
                blank=True, max_length=250, null=True, verbose_name="Grade description"
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="chol_grade",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Not graded"),
                    (1, "Grade 1"),
                    (2, "Grade 2"),
                    (3, "Grade 3"),
                    (4, "Grade 4"),
                    (5, "Grade 5"),
                ],
                null=True,
                verbose_name="Grade",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="chol_grade_description",
            field=models.CharField(
                blank=True, max_length=250, null=True, verbose_name="Grade description"
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="hdl_grade",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Not graded"),
                    (1, "Grade 1"),
                    (2, "Grade 2"),
                    (3, "Grade 3"),
                    (4, "Grade 4"),
                    (5, "Grade 5"),
                ],
                null=True,
                verbose_name="Grade",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="hdl_grade_description",
            field=models.CharField(
                blank=True, max_length=250, null=True, verbose_name="Grade description"
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="ldl_grade",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Not graded"),
                    (1, "Grade 1"),
                    (2, "Grade 2"),
                    (3, "Grade 3"),
                    (4, "Grade 4"),
                    (5, "Grade 5"),
                ],
                null=True,
                verbose_name="Grade",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="ldl_grade_description",
            field=models.CharField(
                blank=True, max_length=250, null=True, verbose_name="Grade description"
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="trig_grade",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (0, "Not graded"),
                    (1, "Grade 1"),
                    (2, "Grade 2"),
                    (3, "Grade 3"),
                    (4, "Grade 4"),
                    (5, "Grade 5"),
                ],
                null=True,
                verbose_name="Grade",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="trig_grade_description",
            field=models.CharField(
                blank=True, max_length=250, null=True, verbose_name="Grade description"
            ),
        ),
        migrations.AlterField(
            model_name="bloodresultslipid",
            name="tracking_identifier",
            field=models.CharField(max_length=32, unique=True),
        ),
        migrations.AlterField(
            model_name="historicalbloodresultslipid",
            name="tracking_identifier",
            field=models.CharField(db_index=True, max_length=32),
        ),
        migrations.AlterField(
            model_name="historicalsubjectvisitmissed",
            name="contact_attempts_count",
            field=models.IntegerField(
                blank=True,
                help_text="Not including pre-appointment reminders. Multiple attempts on the same day count as a single attempt.",
                null=True,
                validators=[django.core.validators.MinValueValidator(1)],
                verbose_name="Number of attempts made to contact participantsince the expected appointment date",
            ),
        ),
        migrations.AlterField(
            model_name="subjectvisitmissed",
            name="contact_attempts_count",
            field=models.IntegerField(
                blank=True,
                help_text="Not including pre-appointment reminders. Multiple attempts on the same day count as a single attempt.",
                null=True,
                validators=[django.core.validators.MinValueValidator(1)],
                verbose_name="Number of attempts made to contact participantsince the expected appointment date",
            ),
        ),
    ]
